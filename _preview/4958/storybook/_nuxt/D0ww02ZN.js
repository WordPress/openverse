const c=new RegExp("([\\p{Ll}\\d])(\\p{Lu})","gu"),i=new RegExp("(\\p{Lu})([\\p{Lu}][\\p{Ll}])","gu"),o=/[^\p{L}\d]+/giu,n="$1\0$2";function s(t){if(!t)return[];let r=t.trim();r=r.replace(c,n).replace(i,n).replace(o,"\0");let e=0,a=r.length;for(;r.charAt(e)==="\0";)e++;if(e===a)return[];for(;r.charAt(a-1)==="\0";)a--;return r.slice(e,a).split(/\0/g)}function l(){return(t,r)=>{const e=t[0];return(r>0&&e>="0"&&e<="9"?"_"+e:e.toUpperCase())+t.slice(1).toLowerCase()}}function u(){return t=>`${t[0].toUpperCase()}${t.slice(1).toLowerCase()}`}function p(t){const r=l();return s(t).map((e,a)=>a===0?e.toLowerCase():r(e,a)).join("")}function L(t){return s(t).map(u()).join(" ")}export{L as a,p as c};
