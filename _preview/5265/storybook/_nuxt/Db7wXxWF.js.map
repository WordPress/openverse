{"version":3,"file":"Db7wXxWF.js","sources":["../../src/components/VHeader/VSearchBar/VSearchBar.vue"],"sourcesContent":["<script setup lang=\"ts\">\n/**\n * The search bar displayed on the search page.\n *\n * Displays a text field for a search query and is attached to an action button\n * that fires a search request. The loading state and number of hits are also\n * displayed in the bar itself.\n */\nimport { computed, ref, useAttrs, watch } from \"vue\"\n\nimport { onClickOutside } from \"@vueuse/core\"\n\nimport { useRecentSearches } from \"~/composables/use-recent-searches\"\n\nimport VInputField from \"~/components/VInputField/VInputField.vue\"\nimport VSearchButton from \"~/components/VHeader/VSearchBar/VSearchButton.vue\"\nimport VRecentSearches from \"~/components/VRecentSearches/VRecentSearches.vue\"\n\ndefineOptions({ inheritAttrs: false })\n\nconst props = withDefaults(\n  defineProps<{\n    /**\n     * the search query given as input to the field\n     */\n    modelValue?: string\n    placeholder?: string\n  }>(),\n  {\n    modelValue: \"\",\n  }\n)\n\nconst emit = defineEmits<{\n  \"update:modelValue\": [string]\n  submit: []\n  \"recent-hidden\": []\n}>()\nconst attrs = useAttrs()\nconst searchBarEl = ref<HTMLElement | null>(null)\nconst inputFieldRef = ref<InstanceType<typeof VInputField> | null>(null)\n\nconst modelMedium = computed<string>({\n  get: () => props.modelValue ?? \"\",\n  set: (value: string) => {\n    emit(\"update:modelValue\", value)\n  },\n})\n\nconst handleSearch = () => {\n  emit(\"submit\")\n}\n\n/* Recent searches */\nconst recentClasses = computed(() => {\n  // Calculated by adding 8px to the height of `VInputField.vue`.\n  return \"top-14\"\n})\nconst focusInput = () => {\n  inputFieldRef.value?.focusInput()\n}\n\n/**\n * Hide recent searches on blur and click outside.\n */\nconst handleSearchBlur = () => {\n  if (!entries.value.length) {\n    hideRecentSearches()\n  }\n}\n\nconst {\n  handleKeydown,\n  handleSelect,\n  handleClear,\n  recent: {\n    show: showRecentSearches,\n    hide: hideRecentSearches,\n    isVisible: isRecentVisible,\n    selectedIdx,\n    entries,\n  },\n} = useRecentSearches({\n  focusInput,\n  term: modelMedium,\n  isMobile: false,\n})\nonClickOutside(searchBarEl, hideRecentSearches)\n\nwatch(isRecentVisible, (isVisible) => {\n  if (!isVisible) {\n    emit(\"recent-hidden\")\n  }\n})\n\nconst nonClassAttrs = computed(() => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { class: _, ...rest } = attrs\n  return rest\n})\n</script>\n\n<template>\n  <div ref=\"searchBarEl\" class=\"relative\" :class=\"$attrs.class\">\n    <!-- Form action is a fallback for when JavaScript is disabled. -->\n    <form\n      action=\"/search\"\n      role=\"search\"\n      class=\"search-bar group flex h-12 flex-row items-center rounded-sm border-tx bg-default\"\n      @submit.prevent=\"handleSearch\"\n    >\n      <VInputField\n        ref=\"inputFieldRef\"\n        v-bind=\"nonClassAttrs\"\n        v-model=\"modelMedium\"\n        :placeholder=\"placeholder || $t('hero.search.placeholder')\"\n        class=\"search-field flex-grow border-tx bg-secondary text-secondary focus-within:bg-default focus-visible:border-focus group-hover:text-default\"\n        :label-text=\"$t('search.searchBarLabel', { openverse: 'Openverse' })\"\n        :connection-sides=\"['end']\"\n        field-id=\"search-bar\"\n        type=\"search\"\n        autocomplete=\"off\"\n        name=\"q\"\n        role=\"combobox\"\n        aria-autocomplete=\"none\"\n        :aria-expanded=\"isRecentVisible\"\n        aria-controls=\"recent-searches-list\"\n        :aria-activedescendant=\"\n          selectedIdx !== undefined ? `option-${selectedIdx}` : undefined\n        \"\n        @focus=\"showRecentSearches\"\n        @keydown=\"handleKeydown\"\n      >\n        <!-- @slot Extra information such as loading message or result count goes here. -->\n        <slot />\n      </VInputField>\n      <VSearchButton\n        type=\"submit\"\n        route=\"search\"\n        @keydown.tab.exact=\"handleSearchBlur\"\n      />\n    </form>\n    <ClientOnly>\n      <VRecentSearches\n        v-show=\"isRecentVisible\"\n        :selected-idx=\"selectedIdx\"\n        :entries=\"entries\"\n        class=\"absolute inset-x-0 z-popover lg:flex\"\n        :class=\"recentClasses\"\n        @select=\"handleSelect\"\n        @clear=\"handleClear($event)\"\n        @keydown.tab=\"hideRecentSearches\"\n      />\n    </ClientOnly>\n  </div>\n</template>\n"],"names":["props","__props","emit","__emit","attrs","useAttrs","searchBarEl","ref","inputFieldRef","modelMedium","computed","value","handleSearch","recentClasses","focusInput","_a","handleSearchBlur","entries","hideRecentSearches","handleKeydown","handleSelect","handleClear","showRecentSearches","isRecentVisible","selectedIdx","useRecentSearches","onClickOutside","watch","isVisible","nonClassAttrs","_","rest"],"mappings":"m0BAoBA,MAAMA,EAAQC,EAaRC,EAAOC,EAKPC,EAAQC,EAAS,EACjBC,EAAcC,EAAwB,IAAI,EAC1CC,EAAgBD,EAA6C,IAAI,EAEjEE,EAAcC,EAAiB,CACnC,IAAK,IAAMV,EAAM,YAAc,GAC/B,IAAMW,GAAkB,CACtBT,EAAK,oBAAqBS,CAAK,CAAA,CACjC,CACD,EAEKC,EAAe,IAAM,CACzBV,EAAK,QAAQ,CACf,EAGMW,EAAgBH,EAAS,IAEtB,QACR,EACKI,EAAa,IAAM,QACvBC,EAAAP,EAAc,QAAd,MAAAO,EAAqB,YACvB,EAKMC,EAAmB,IAAM,CACxBC,EAAQ,MAAM,QACEC,EAAA,CAEvB,EAEM,CACJ,cAAAC,EACA,aAAAC,EACA,YAAAC,EACA,OAAQ,CACN,KAAMC,EACN,KAAMJ,EACN,UAAWK,EACX,YAAAC,EACA,QAAAP,CAAA,GAEAQ,EAAkB,CACpB,WAAAX,EACA,KAAML,EACN,SAAU,EAAA,CACX,EACDiB,EAAepB,EAAaY,CAAkB,EAExCS,EAAAJ,EAAkBK,GAAc,CAC/BA,GACH1B,EAAK,eAAe,CACtB,CACD,EAEK,MAAA2B,EAAgBnB,EAAS,IAAM,CAEnC,KAAM,CAAE,MAAOoB,EAAG,GAAGC,CAAS,EAAA3B,EACvB,OAAA2B,CAAA,CACR"}