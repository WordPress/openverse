import{d as T,r as s,c as b,k as V,L as O,l as a,u as n,D as F,E as i,I as B,j as v}from"./DwwldUEF.js";import{u as E}from"./CUuqYMuc.js";import{_ as I}from"./DKDb4atL.js";(function(){try{var t=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},l=new t.Error().stack;l&&(t._sentryDebugIds=t._sentryDebugIds||{},t._sentryDebugIds[l]="acdde339-98d5-40bf-a72d-9e710c1d3486",t._sentryDebugIdIdentifier="sentry-dbid-acdde339-98d5-40bf-a72d-9e710c1d3486")}catch{}})();const q=T({__name:"VModal",props:{hideOnEsc:{type:Boolean,default:!0},hideOnClickOutside:{type:Boolean,default:!1},autoFocusOnShow:{type:Boolean,default:!0},autoFocusOnHide:{type:Boolean,default:!0},label:{},labelledBy:{},initialFocusElement:{default:void 0},variant:{default:"default"},mode:{default:"light"},modalContentClasses:{default:""},id:{}},emits:["open","close"],setup(t,{expose:l,emit:d}){const y=t,k=d,r=s(null),u=s(null),c=s(null),f=b(()=>{var e;return(e=c.value)==null?void 0:e.firstElementChild}),w=b(()=>{var e;return(e=u.value)==null?void 0:e.deactivateFocusTrap}),{close:p,onTriggerClick:h,triggerA11yProps:C,visible:m}=E({id:y.id,lockBodyScroll:!0,nodeRef:r,emit:k,deactivateFocusTrap:w});return l({close:p}),(e,g)=>(v(),V("div",{ref_key:"nodeRef",ref:r},[O("div",{ref_key:"triggerContainerRef",ref:c,class:"flex",onClick:g[0]||(g[0]=(...o)=>n(h)&&n(h)(...o))},[a(e.$slots,"trigger",{a11yProps:n(C),visible:n(m)})],512),f.value?(v(),F(I,{key:0,id:e.id,ref_key:"modalContentRef",ref:u,visible:n(m),"trigger-element":f.value,"hide-on-esc":e.hideOnEsc,"hide-on-click-outside":e.hideOnClickOutside,"auto-focus-on-show":e.autoFocusOnShow,"auto-focus-on-hide":e.autoFocusOnHide,hide:n(p),"aria-label":e.label,"aria-labelledby":e.labelledBy,"initial-focus-element":e.initialFocusElement,variant:e.variant,mode:e.mode,"content-classes":e.modalContentClasses},{"top-bar":i(({close:o})=>[a(e.$slots,"top-bar",{close:o})]),title:i(()=>[a(e.$slots,"title")]),"close-button":i(({close:o})=>[a(e.$slots,"close-button",{close:o})]),default:i(()=>[a(e.$slots,"default")]),_:3},8,["id","visible","trigger-element","hide-on-esc","hide-on-click-outside","auto-focus-on-show","auto-focus-on-hide","hide","aria-label","aria-labelledby","initial-focus-element","variant","mode","content-classes"])):B("",!0)],512))}});q.__docgenInfo={exportName:"default",displayName:"VModal",description:"",tags:{},expose:[{name:"close"}],props:[{name:"hideOnEsc",description:"Whether the popover should hide when the <kbd>Escape</kbd> key is pressed.",tags:{default:[{description:"true",title:"default"}]},required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"true"}},{name:"hideOnClickOutside",description:`Whether the popover should hide when a click happens outside the popover content,
excluding the trigger. When the trigger is clicked and the popover is open, nothing
will happen.`,tags:{default:[{description:"true",title:"default"}]},required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"autoFocusOnShow",description:`Whether the popover content should automatically receive focus when the popover
opens.`,tags:{default:[{description:"true",title:"default"}]},required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"true"}},{name:"autoFocusOnHide",description:"Whether the trigger should automatically receive focus when the popover closes.",tags:{default:[{description:"true",title:"default"}]},required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"true"}},{name:"label",description:"The label of the popover content. Must be provided if `labelledBy` is empty.",tags:{default:[{description:"undefined",title:"default"}]},required:!1,type:{name:"string"}},{name:"labelledBy",description:"The id of the element labelling the popover content. Must be provided if `label` is empty.",tags:{default:[{description:"undefined",title:"default"}]},required:!1,type:{name:"string"}},{name:"initialFocusElement",description:`The element to focus when the modal is opened. If nothing is
passed, then the first tabbable element in the modal content
will be focused. If no tabbable element is found in the modal
content, then the entire modal content itself will be focused.`,tags:{default:[{description:"undefined",title:"default"}]},required:!1,type:{name:"HTMLElement"},defaultValue:{func:!1,value:"undefined"}},{name:"variant",description:"The variant of the modal content.\nThe `default` variant is a full-screen modal on mobile widths, and is a smaller mobile\non a grayed out backdrop on larger screens.\n\nThe `full` variant is a full-screen modal on all screen widths. It is currently\nonly used for mobile version of the `VHeaderInternal` component.",tags:{default:[{description:"'default'",title:"default"}]},required:!1,type:{name:"ModalVariant"},defaultValue:{func:!1,value:'"default"'}},{name:"mode",description:"The color mode of the modal content.\nThe default `light` mode uses dark charcoal content on the white background.\nThe `dark` mode uses white content on the dark charcoal background.",tags:{default:[{description:"'light'",title:"default"}]},required:!1,type:{name:"ModalColorMode"},defaultValue:{func:!1,value:'"light"'}},{name:"modalContentClasses",required:!1,type:{name:"string"},defaultValue:{func:!1,value:'""'}},{name:"id",description:`The id used to keep track of the modal in the open dialog stack, to enable
nested dialogs.`,required:!0,type:{name:"string"}}],events:[{name:"open",description:"Fires when the popover opens, regardless of reason. There are no extra parameters."},{name:"close",description:"Fires when the popover closes, regardless of reason. There are no extra parameters."}],slots:[{name:"trigger",scoped:!0,description:"The trigger. Should be a button 99% of the time. If you need custom event handling on the trigger button, ensure bubbling is not prevented or else the dialog will not open.",bindings:[{name:"a11y-props",title:"binding"},{title:"binding",type:{name:"boolean"},name:"visible",description:"Whether the dialog is currently visible (open)"}]},{name:"top-bar",scoped:!0,bindings:[{name:"close",title:"binding"}]},{name:"title"},{name:"close-button",scoped:!0,bindings:[{name:"close",title:"binding"}]},{name:"default"}],sourceFiles:["/home/runner/work/openverse/openverse/frontend/src/components/VModal/VModal.vue"]};export{q as _};
