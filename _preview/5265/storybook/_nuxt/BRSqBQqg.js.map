{"version":3,"file":"BRSqBQqg.js","sources":["../../src/composables/use-image-cell-size.ts","../../src/assets/image_not_available_placeholder.png","../../src/components/VImageResult/VImageResult.vue"],"sourcesContent":["import { computed, Ref, ref } from \"vue\"\n\nimport type { ImageDimensions } from \"#shared/types/media\"\n\nconst minAspect = 3 / 4\nconst maxAspect = 16 / 9\nconst panoramaAspect = 21 / 9\nconst minRowWidth = 250\nconst widthBasis = minRowWidth / maxAspect\nconst squareSize = 250\nconst defaultImgSize = 100\n\nconst getImgAspectRatio = (aspect: number) => {\n  if (aspect > maxAspect) {\n    return maxAspect\n  }\n  if (aspect < minAspect) {\n    return minAspect\n  }\n  return aspect\n}\n\nexport const useImageCellSize = ({\n  imageSize,\n  isSquare,\n}: {\n  imageSize: ImageDimensions\n  isSquare: Ref<boolean>\n}) => {\n  const imgHeight = ref(\n    isSquare.value ? squareSize : imageSize.height || defaultImgSize\n  )\n  const imgWidth = ref(\n    isSquare.value ? squareSize : imageSize.width || defaultImgSize\n  )\n\n  const naturalAspectRatio = computed(() => imgWidth.value / imgHeight.value)\n  const isPanorama = computed(() => naturalAspectRatio.value > panoramaAspect)\n\n  /**\n   * Returns the style declarations for the container width, aspect ratio and flex-grow value.\n   * For the square cell, the styles are empty.\n   */\n  const styles = computed(() => {\n    const styles = {}\n    if (isSquare.value) {\n      return styles\n    }\n\n    const aspect = naturalAspectRatio.value\n    /**\n     * The aspect-ratio for `img` is clamped between the min and max aspect ratios.\n     */\n    const imgAspectRatio = getImgAspectRatio(aspect)\n    const containerWidth = Math.round(imgAspectRatio * widthBasis)\n\n    return {\n      \"--container-width\": `${containerWidth}px`,\n      \"--container-grow\": containerWidth,\n      \"--img-aspect-ratio\": imgAspectRatio,\n    }\n  })\n\n  return {\n    imgHeight,\n    imgWidth,\n    isPanorama,\n    styles,\n  }\n}\n","export default \"__VITE_ASSET__xTuZ1ubJ__\"","<script setup lang=\"ts\">\nimport { useI18n, useNuxtApp } from \"#imports\"\nimport { computed } from \"vue\"\n\nimport { IMAGE } from \"#shared/constants/media\"\nimport { singleResultQuery } from \"#shared/utils/query-utils\"\nimport type { AspectRatio, ImageDetail } from \"#shared/types/media\"\nimport type { SingleResultProps } from \"#shared/types/collection-component-props\"\nimport { useSearchStore } from \"~/stores/search\"\nimport { useImageCellSize } from \"~/composables/use-image-cell-size\"\nimport { useSensitiveMedia } from \"~/composables/use-sensitive-media\"\n\nimport VIcon from \"~/components/VIcon/VIcon.vue\"\nimport VLicense from \"~/components/VLicense/VLicense.vue\"\nimport VLink from \"~/components/VLink.vue\"\n\nimport errorImage from \"~/assets/image_not_available_placeholder.png\"\n\nconst props = withDefaults(\n  defineProps<\n    SingleResultProps & {\n      image: ImageDetail\n      /**\n       * All content view uses the square image cells, Image view\n       * uses the image's intrinsic size.\n       */\n      aspectRatio?: AspectRatio\n      position?: number\n    }\n  >(),\n  {\n    aspectRatio: \"square\",\n    kind: \"search\",\n    relatedTo: \"null\",\n    position: -1,\n  }\n)\n\nconst toAbsolutePath = (url: string, prefix = \"https://\") => {\n  if (url.startsWith(\"http://\") || url.startsWith(\"https://\")) {\n    return url\n  }\n  return `${prefix}${url}`\n}\n\nconst isSquare = computed(() => props.aspectRatio === \"square\")\nconst { imgHeight, imgWidth, isPanorama, styles } = useImageCellSize({\n  imageSize: { width: props.image.width, height: props.image.height },\n  isSquare,\n})\nconst { t } = useI18n({ useScope: \"global\" })\n\nconst imageUrl = computed(() => {\n  // TODO: check if we have blurry panorama thumbnails\n  // Use the main image file and not the thumbnails for panorama images to\n  // fix for blurry panorama thumbnails, introduced in\n  // https://github.com/cc-archive/cccatalog-frontend/commit/4c9bdac5\n  if (isPanorama.value) {\n    return toAbsolutePath(props.image.url)\n  }\n  const url = props.image.thumbnail || props.image.url\n  return toAbsolutePath(url)\n})\n\nconst imageLink = computed(() => {\n  return `/image/${props.image.id}/${singleResultQuery(props.searchTerm, props.position)}`\n})\n\n/**\n * If the thumbnail fails to load, try replacing it with the original image URL.\n * If the original image fails, too, use the error image placeholder.\n * @param event - the error event.\n */\nconst onImageLoadError = (event: Event) => {\n  const element = event.target as HTMLImageElement\n  element.src = element.src === props.image.url ? errorImage : props.image.url\n}\n/**\n * If the image is not square, on the image load event, update\n * the img's height and width with image natural dimensions.\n * @param event - the load event.\n */\nconst getImgDimension = (event: Event) => {\n  if (props.aspectRatio === \"square\") {\n    return\n  }\n  const element = event.target as HTMLImageElement\n  imgHeight.value = element.naturalHeight\n  imgWidth.value = element.naturalWidth\n}\n\nconst imageTitle = t(\"browsePage.aria.imageTitle\", {\n  title: props.image.title,\n})\nconst contextSensitiveLabel = computed(() =>\n  shouldBlur.value ? t(\"sensitiveContent.title.image\") : imageTitle\n)\nconst contextSensitiveTitle = computed(() =>\n  shouldBlur.value ? undefined : imageTitle\n)\n\nconst { $sendCustomEvent } = useNuxtApp()\nconst searchStore = useSearchStore()\n\n/**\n * If the user left-clicks on a search result, send\n * the SELECT_SEARCH_RESULT custom event\n * @param event - the mouse click event\n */\nconst sendSelectSearchResultEvent = (event: MouseEvent) => {\n  if (event.button !== 0) {\n    return\n  }\n\n  $sendCustomEvent(\"SELECT_SEARCH_RESULT\", {\n    ...searchStore.searchParamsForEvent,\n    id: props.image.id,\n    kind: props.kind,\n    mediaType: IMAGE,\n    provider: props.image.provider,\n    position: props.position,\n    relatedTo: props.relatedTo ?? \"null\",\n    sensitivities: props.image.sensitivity?.join(\",\") ?? \"\",\n    isBlurred: shouldBlur.value ?? \"null\",\n  })\n}\n\nconst { isHidden: shouldBlur } = useSensitiveMedia(props.image)\n</script>\n\n<template>\n  <li\n    :style=\"styles\"\n    class=\"container w-full max-w-full\"\n    :class=\"\n      isSquare\n        ? 'square'\n        : 'intrinsic sm:w-[--container-width] sm:flex-grow-[--container-grow]'\n    \"\n  >\n    <VLink\n      itemprop=\"contentUrl\"\n      :title=\"contextSensitiveTitle\"\n      :href=\"imageLink\"\n      class=\"image-link group relative block w-full overflow-hidden rounded-sm text-gray-2 hover:no-underline\"\n      :class=\"\n        isSquare\n          ? 'focus-visible:focus-bold-filled'\n          : 'focus-visible:-m-2 focus-visible:w-[calc(100%+theme(spacing.4))] focus-visible:p-2 focus-visible:focus-slim-tx sm:focus-visible:m-0 sm:focus-visible:w-full sm:focus-visible:p-0 focus-visible:sm:focus-bold-filled'\n      \"\n      :aria-label=\"contextSensitiveLabel\"\n      @mousedown=\"sendSelectSearchResultEvent\"\n    >\n      <figure\n        itemprop=\"image\"\n        itemscope\n        itemtype=\"https://schema.org/ImageObject\"\n        class=\"grid w-full rounded-sm\"\n        :class=\"{ 'aspect-square': isSquare }\"\n      >\n        <img\n          loading=\"lazy\"\n          class=\"image col-span-full row-span-full block w-full overflow-hidden rounded-sm object-cover\"\n          :class=\"[\n            isSquare ? 'h-full' : 'margin-auto sm:aspect-[--img-aspect-ratio]',\n          ]\"\n          :alt=\"\n            shouldBlur ? `${$t('sensitiveContent.title.image')}` : image.title\n          \"\n          :src=\"imageUrl\"\n          :width=\"imgWidth\"\n          :height=\"imgHeight\"\n          itemprop=\"thumbnailUrl\"\n          @load=\"getImgDimension\"\n          @error=\"onImageLoadError($event)\"\n        />\n        <span\n          class=\"col-span-full row-span-full flex items-center justify-center bg-blur text-default backdrop-blur-xl duration-200 motion-safe:transition-opacity\"\n          :class=\"shouldBlur ? 'opacity-100' : 'opacity-0'\"\n          data-testid=\"blur-overlay\"\n          aria-hidden=\"true\"\n        >\n          <VIcon name=\"eye-closed\" />\n        </span>\n        <figcaption\n          class=\"z-10 col-span-full mt-2 self-end justify-self-start rounded-sm text-default group-hover:visible group-focus-visible:visible sm:mb-2\"\n          :class=\"[\n            isSquare\n              ? 'invisible row-span-full p-2'\n              : 'sm:invisible sm:row-span-full sm:p-2',\n            shouldBlur ? 'sm:w-full sm:text-center' : 'bg-default',\n            !shouldBlur && (isSquare ? 'mx-2' : 'sm:mx-2'),\n          ]\"\n        >\n          <h2 class=\"sr-only\">\n            {{\n              shouldBlur ? `${$t(\"sensitiveContent.title.image\")}` : image.title\n            }}\n          </h2>\n          <div\n            class=\"label-regular leading-none text-secondary group-hover:text-default group-focus-visible:text-default sm:text-default\"\n          >\n            <template v-if=\"shouldBlur\">\n              {{ $t(\"sensitiveContent.singleResult.title\") }}\n            </template>\n            <VLicense v-else :license=\"image.license\" :hide-name=\"true\" />\n          </div>\n        </figcaption>\n      </figure>\n    </VLink>\n  </li>\n</template>\n"],"names":["minAspect","maxAspect","panoramaAspect","minRowWidth","widthBasis","squareSize","defaultImgSize","getImgAspectRatio","aspect","useImageCellSize","imageSize","isSquare","imgHeight","ref","imgWidth","naturalAspectRatio","computed","isPanorama","styles","imgAspectRatio","containerWidth","errorImage","props","__props","toAbsolutePath","url","prefix","t","useI18n","imageUrl","imageLink","singleResultQuery","onImageLoadError","event","element","getImgDimension","imageTitle","contextSensitiveLabel","shouldBlur","contextSensitiveTitle","$sendCustomEvent","useNuxtApp","searchStore","useSearchStore","sendSelectSearchResultEvent","IMAGE","_a","useSensitiveMedia"],"mappings":"4xBAIA,MAAMA,EAAY,EAAI,EAChBC,EAAY,GAAK,EACjBC,EAAiB,GAAK,EACtBC,EAAc,IACdC,EAAaD,EAAcF,EAC3BI,EAAa,IACbC,EAAiB,IAEjBC,GAAqBC,GACrBA,EAASP,EACJA,EAELO,EAASR,EACJA,EAEFQ,EAGIC,GAAmB,CAAC,CAC/B,UAAAC,EACA,SAAAC,CACF,IAGM,CACJ,MAAMC,EAAYC,EAChBF,EAAS,MAAQN,EAAaK,EAAU,QAAUJ,CACpD,EACMQ,EAAWD,EACfF,EAAS,MAAQN,EAAaK,EAAU,OAASJ,CACnD,EAEMS,EAAqBC,EAAS,IAAMF,EAAS,MAAQF,EAAU,KAAK,EACpEK,EAAaD,EAAS,IAAMD,EAAmB,MAAQb,CAAc,EAMrEgB,EAASF,EAAS,IAAM,CAC5B,MAAME,EAAS,CAAC,EAChB,GAAIP,EAAS,MACJO,OAAAA,EAGT,MAAMV,EAASO,EAAmB,MAI5BI,EAAiBZ,GAAkBC,CAAM,EACzCY,EAAiB,KAAK,MAAMD,EAAiBf,CAAU,EAEtD,MAAA,CACL,oBAAqB,GAAGgB,CAAc,KACtC,mBAAoBA,EACpB,qBAAsBD,CACxB,CAAA,CACD,EAEM,MAAA,CACL,UAAAP,EACA,SAAAE,EACA,WAAAG,EACA,OAAAC,CACF,CACF,ECrEeG,GAAA,obCkBf,MAAMC,EAAQC,EAoBRC,EAAiB,CAACC,EAAaC,EAAS,aACxCD,EAAI,WAAW,SAAS,GAAKA,EAAI,WAAW,UAAU,EACjDA,EAEF,GAAGC,CAAM,GAAGD,CAAG,GAGlBd,EAAWK,EAAS,IAAMM,EAAM,cAAgB,QAAQ,EACxD,CAAE,UAAAV,EAAW,SAAAE,EAAU,WAAAG,EAAY,OAAAC,CAAA,EAAWT,GAAiB,CACnE,UAAW,CAAE,MAAOa,EAAM,MAAM,MAAO,OAAQA,EAAM,MAAM,MAAO,EAClE,SAAAX,CAAA,CACD,EACK,CAAE,EAAAgB,CAAE,EAAIC,EAAQ,CAAE,SAAU,SAAU,EAEtCC,EAAWb,EAAS,IAAM,CAK9B,GAAIC,EAAW,MACN,OAAAO,EAAeF,EAAM,MAAM,GAAG,EAEvC,MAAMG,EAAMH,EAAM,MAAM,WAAaA,EAAM,MAAM,IACjD,OAAOE,EAAeC,CAAG,CAAA,CAC1B,EAEKK,EAAYd,EAAS,IAClB,UAAUM,EAAM,MAAM,EAAE,IAAIS,EAAkBT,EAAM,WAAYA,EAAM,QAAQ,CAAC,EACvF,EAOKU,EAAoBC,GAAiB,CACzC,MAAMC,EAAUD,EAAM,OACdC,EAAA,IAAMA,EAAQ,MAAQZ,EAAM,MAAM,IAAMD,GAAaC,EAAM,MAAM,GAC3E,EAMMa,EAAmBF,GAAiB,CACpC,GAAAX,EAAM,cAAgB,SACxB,OAEF,MAAMY,EAAUD,EAAM,OACtBrB,EAAU,MAAQsB,EAAQ,cAC1BpB,EAAS,MAAQoB,EAAQ,YAC3B,EAEME,EAAaT,EAAE,6BAA8B,CACjD,MAAOL,EAAM,MAAM,KAAA,CACpB,EACKe,EAAwBrB,EAAS,IACrCsB,EAAW,MAAQX,EAAE,8BAA8B,EAAIS,CACzD,EACMG,EAAwBvB,EAAS,IACrCsB,EAAW,MAAQ,OAAYF,CACjC,EAEM,CAAE,iBAAAI,CAAiB,EAAIC,EAAW,EAClCC,EAAcC,EAAe,EAO7BC,EAA+BX,GAAsB,OACrDA,EAAM,SAAW,GAIrBO,EAAiB,uBAAwB,CACvC,GAAGE,EAAY,qBACf,GAAIpB,EAAM,MAAM,GAChB,KAAMA,EAAM,KACZ,UAAWuB,EACX,SAAUvB,EAAM,MAAM,SACtB,SAAUA,EAAM,SAChB,UAAWA,EAAM,WAAa,OAC9B,gBAAewB,EAAAxB,EAAM,MAAM,cAAZ,YAAAwB,EAAyB,KAAK,OAAQ,GACrD,UAAWR,EAAW,OAAS,MAAA,CAChC,CACH,EAEM,CAAE,SAAUA,CAAA,EAAeS,EAAkBzB,EAAM,KAAK"}