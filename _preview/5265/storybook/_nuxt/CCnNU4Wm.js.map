{"version":3,"file":"CCnNU4Wm.js","sources":["../../shared/utils/get-additional-sources.ts","../../src/composables/use-external-sources.ts"],"sourcesContent":["import type { MediaType } from \"#shared/constants/media\"\nimport { MODEL_3D } from \"#shared/constants/media\"\nimport type { PaginatedSearchQuery } from \"#shared/types/search\"\n\n/**\n * Describes the query format used by the URL builder functions of additional\n * sources. This includes the query string and the usage filters.\n */\ninterface AdditionalSearchQuery {\n  q: string\n}\n\n/**\n * Convert the ApiQueryParams object from the store to a format used by all the\n * URL builder functions of all additional sources.\n *\n * @param query - the ApiQueryParams object\n * @returns the query and filters in the format used by the URL builders\n */\nconst transformSearchQuery = (\n  query: PaginatedSearchQuery\n): AdditionalSearchQuery => ({\n  q: query.q ?? \"\",\n})\n\ntype SearchFunctions = {\n  [k in MediaType]?: (search: AdditionalSearchQuery) => {\n    queryParams: Record<string, string | string[]>\n    url: string\n  }\n}\n\n/**\n * Describes an additional source builder, which contains a display name,\n * whether the source supports use filters and a mapping of media type to a URL\n * builder function that leads to the search results for that media type.\n */\ninterface AdditionalSourceBuilder extends SearchFunctions {\n  name: string\n}\n\n/**\n * Describes an additional source, consisting of the source name and the\n * pre-populated URL.\n */\nexport interface AdditionalSource {\n  name: string\n  url: string\n}\n\n/**\n * Maps each additional source with search URL builder functions for each\n * content type.\n *\n * @see {@link https://github.com/creativecommons/cccatalog-frontend/issues/315}\n */\nconst additionalSourceBuilders: AdditionalSourceBuilder[] = [\n  {\n    name: \"Centre For Ageing Better\",\n    image: (search) => ({\n      url: \"https://ageingbetter.resourcespace.com/pages/search.php\",\n      queryParams: {\n        search: search.q,\n      },\n    }),\n  },\n  {\n    name: \"EDU images\",\n    image: (search) => ({\n      url: \"https://images.all4ed.org\",\n      queryParams: {\n        s: search.q,\n      },\n    }),\n  },\n  {\n    name: \"Google Images\",\n    image: (search) => ({\n      url: \"https://www.google.com/search\",\n      queryParams: {\n        q: search.q,\n        udm: \"2\", // this means \"search images\"\n        tbs: \"sur:cl\",\n      },\n    }),\n  },\n  {\n    name: \"Images of Empowerment\",\n    image: (search) => ({\n      url: \"https://www.imagesofempowerment.org/\",\n      queryParams: {\n        s: search.q,\n      },\n    }),\n  },\n  {\n    name: \"Open Clip Art Library\",\n    image: (search) => ({\n      url: \"http://www.openclipart.org/search/\",\n      queryParams: {\n        query: search.q,\n      },\n    }),\n  },\n  {\n    name: \"Nappy\",\n    image: (search) => ({\n      url: \"https://www.nappy.co/\",\n      queryParams: {\n        s: search.q,\n      },\n    }),\n  },\n  {\n    name: \"The Greats\",\n    image: (search) => ({\n      url: \"https://www.thegreats.co/artworks/\",\n      queryParams: {\n        theme: \"0\",\n        search: search.q,\n      },\n    }),\n  },\n  {\n    name: \"ccMixter\",\n    audio: (search) => ({\n      // no https :(\n      url: \"http://dig.ccmixter.org/search\",\n      queryParams: {\n        lic: \"open\",\n        searchp: search.q,\n      },\n    }),\n  },\n  {\n    name: \"SoundCloud\",\n    audio: (search) => {\n      return {\n        url: \"https://soundcloud.com/search/sounds\",\n        queryParams: {\n          q: search.q,\n          \"filter.license\": \"to_share\", // @todo: choose which type from the search object\n        },\n      }\n    },\n  },\n  {\n    name: \"Europeana\",\n    audio: (search) => {\n      return {\n        url: \"https://www.europeana.eu/en/search\",\n        queryParams: {\n          page: \"1\",\n          qf: 'TYPE:\"SOUND\"',\n          // search cc licensed works\n          query: `${search.q} AND RIGHTS:*creative*`,\n        },\n      }\n    },\n    video(search) {\n      return {\n        url: \"https://www.europeana.eu/en/search\",\n        queryParams: {\n          page: \"1\",\n          qf: 'TYPE:\"VIDEO\"',\n          // search cc licensed works\n          query: `${search.q} AND RIGHTS:*creative*`,\n        },\n      }\n    },\n  },\n  {\n    name: \"Vimeo\",\n    video: (search) => ({\n      url: \"https://vimeo.com/search\",\n      queryParams: {\n        license: \"by\",\n        q: search.q,\n      },\n    }),\n  },\n  {\n    name: \"Wikimedia Commons\",\n    video: (search) => ({\n      url: \"https://commons.wikimedia.org/w/index.php\",\n      queryParams: {\n        search: `${search.q}`,\n        title: \"Special:MediaSearch\",\n        type: \"video\",\n      },\n    }),\n  },\n  {\n    name: \"YouTube\",\n    video: (search) => ({\n      url: \"https://www.youtube.com/results\",\n      queryParams: {\n        search_query: search.q,\n        sp: \"EgIwAQ%3D%3D\", // this interesting line filters by cc license\n      },\n    }),\n  },\n  {\n    name: \"Sketchfab\",\n    [MODEL_3D](search) {\n      // TODO: Use actual license from filters\n      const licenseCodes: string[] = [\n        \"322a749bcfa841b29dff1e8a1bb74b0b\", // CC BY\n        \"b9ddc40b93e34cdca1fc152f39b9f375\", // CC BY-SA\n        \"72360ff1740d419791934298b8b6d270\", // CC BY-ND\n        \"bbfe3f7dbcdd4122b966b85b9786a989\", // CC BY-NC\n        \"2628dbe5140a4e9592126c8df566c0b7\", // CC BY-NC-SA\n        \"34b725081a6a4184957efaec2cb84ed3\", // CC BY-NC-ND\n        \"7c23a1ba438d4306920229c12afcb5f9\", // CC0\n      ]\n      return {\n        url: \"https://sketchfab.com/search\",\n        queryParams: {\n          q: search.q,\n          licenses: licenseCodes,\n        },\n      }\n    },\n  },\n  {\n    name: \"Thingiverse\",\n    [MODEL_3D](search) {\n      return {\n        url: \"https://www.thingiverse.com/search\",\n        queryParams: {\n          type: \"things\",\n          q: search.q,\n        },\n      }\n    },\n  },\n  {\n    name: \"Free Music Archive\",\n    audio: (search) => ({\n      url: \"https://freemusicarchive.org/search\",\n      queryParams: {\n        quicksearch: search.q,\n      },\n    }),\n  },\n]\n\n/**\n * Get a list of source builders for a given media type.\n *\n * @param mediaType - the media type by which to filter source builders\n * @returns a list of additional source builders\n */\nexport const getAdditionalSourceBuilders = (\n  mediaType: MediaType\n): AdditionalSourceBuilder[] =>\n  additionalSourceBuilders.filter((source) => source[mediaType])\n\n/**\n * Get a list of sources for a given media type with the URL populated to show\n * the results of the given query.\n *\n * @param mediaType - the media type by which to filter source builders\n * @param query - the query to show results for in the additional sources\n * @returns a list of additional sources with pre-populated URLs\n */\nexport const getAdditionalSources = (\n  mediaType: MediaType,\n  query: PaginatedSearchQuery\n): AdditionalSource[] =>\n  getAdditionalSourceBuilders(mediaType).map((source) => {\n    const urlFunc = source[mediaType]\n    // type-guard, never occurs\n    if (!urlFunc) {\n      throw new Error(\n        `Invalid media type ${mediaType} for additional source ${source.name}`\n      )\n    }\n\n    const urlInfo = urlFunc(transformSearchQuery(query))\n    const sourceUrl = new URL(urlInfo.url)\n    for (const [key, value] of Object.entries(urlInfo.queryParams)) {\n      if (Array.isArray(value)) {\n        for (const v of value) {\n          sourceUrl.searchParams.append(key, v)\n        }\n      } else {\n        sourceUrl.searchParams.set(key, value)\n      }\n    }\n    return {\n      url: sourceUrl.href,\n      name: source.name,\n    }\n  })\n","import { computed } from \"vue\"\n\nimport {\n  IMAGE,\n  isAdditionalSearchType,\n  isSupportedMediaType,\n} from \"#shared/constants/media\"\nimport { getAdditionalSources } from \"#shared/utils/get-additional-sources\"\nimport { useFeatureFlagStore } from \"~/stores/feature-flag\"\nimport { useSearchStore } from \"~/stores/search\"\n\n/**\n * This component uses `useStore` composables, and should only be called from within a component's setup function.\n */\nexport const useExternalSources = () => {\n  const featureFlagStore = useFeatureFlagStore()\n  const searchStore = useSearchStore()\n  /**\n   * Show the sources of the current media type, or fall back to \"image\"\n   * when the search type is not supported.\n   */\n  const externalSourcesType = computed(() => {\n    const searchType = searchStore.searchType\n    if (\n      isSupportedMediaType(searchType) ||\n      (featureFlagStore.isOn(\"additional_search_types\") &&\n        isAdditionalSearchType(searchType))\n    ) {\n      return searchType\n    }\n    return IMAGE\n  })\n  const externalSources = computed(() => {\n    const query = searchStore.apiSearchQueryParams\n    const type = externalSourcesType.value\n    return getAdditionalSources(type, query)\n  })\n\n  return {\n    externalSources,\n    externalSourcesType,\n  }\n}\n"],"names":["transformSearchQuery","query","additionalSourceBuilders","search","MODEL_3D","licenseCodes","getAdditionalSourceBuilders","mediaType","source","getAdditionalSources","urlFunc","urlInfo","sourceUrl","key","value","v","useExternalSources","featureFlagStore","useFeatureFlagStore","searchStore","useSearchStore","externalSourcesType","computed","searchType","isSupportedMediaType","isAdditionalSearchType","IMAGE","type"],"mappings":"4eAmBA,MAAMA,EACJC,IAC2B,CAC3B,EAAGA,EAAM,GAAK,EAChB,GAiCMC,EAAsD,CAC1D,CACE,KAAM,2BACN,MAAQC,IAAY,CAClB,IAAK,0DACL,YAAa,CACX,OAAQA,EAAO,CAAA,CAEnB,EACF,EACA,CACE,KAAM,aACN,MAAQA,IAAY,CAClB,IAAK,4BACL,YAAa,CACX,EAAGA,EAAO,CAAA,CAEd,EACF,EACA,CACE,KAAM,gBACN,MAAQA,IAAY,CAClB,IAAK,gCACL,YAAa,CACX,EAAGA,EAAO,EACV,IAAK,IACL,IAAK,QAAA,CAET,EACF,EACA,CACE,KAAM,wBACN,MAAQA,IAAY,CAClB,IAAK,uCACL,YAAa,CACX,EAAGA,EAAO,CAAA,CAEd,EACF,EACA,CACE,KAAM,wBACN,MAAQA,IAAY,CAClB,IAAK,qCACL,YAAa,CACX,MAAOA,EAAO,CAAA,CAElB,EACF,EACA,CACE,KAAM,QACN,MAAQA,IAAY,CAClB,IAAK,wBACL,YAAa,CACX,EAAGA,EAAO,CAAA,CAEd,EACF,EACA,CACE,KAAM,aACN,MAAQA,IAAY,CAClB,IAAK,qCACL,YAAa,CACX,MAAO,IACP,OAAQA,EAAO,CAAA,CAEnB,EACF,EACA,CACE,KAAM,WACN,MAAQA,IAAY,CAElB,IAAK,iCACL,YAAa,CACX,IAAK,OACL,QAASA,EAAO,CAAA,CAEpB,EACF,EACA,CACE,KAAM,aACN,MAAQA,IACC,CACL,IAAK,uCACL,YAAa,CACX,EAAGA,EAAO,EACV,iBAAkB,UAAA,CAEtB,EAEJ,EACA,CACE,KAAM,YACN,MAAQA,IACC,CACL,IAAK,qCACL,YAAa,CACX,KAAM,IACN,GAAI,eAEJ,MAAO,GAAGA,EAAO,CAAC,wBAAA,CAEtB,GAEF,MAAMA,EAAQ,CACL,MAAA,CACL,IAAK,qCACL,YAAa,CACX,KAAM,IACN,GAAI,eAEJ,MAAO,GAAGA,EAAO,CAAC,wBAAA,CAEtB,CAAA,CAEJ,EACA,CACE,KAAM,QACN,MAAQA,IAAY,CAClB,IAAK,2BACL,YAAa,CACX,QAAS,KACT,EAAGA,EAAO,CAAA,CAEd,EACF,EACA,CACE,KAAM,oBACN,MAAQA,IAAY,CAClB,IAAK,4CACL,YAAa,CACX,OAAQ,GAAGA,EAAO,CAAC,GACnB,MAAO,sBACP,KAAM,OAAA,CAEV,EACF,EACA,CACE,KAAM,UACN,MAAQA,IAAY,CAClB,IAAK,kCACL,YAAa,CACX,aAAcA,EAAO,EACrB,GAAI,cAAA,CAER,EACF,EACA,CACE,KAAM,YACN,CAACC,CAAQ,EAAED,EAAQ,CAEjB,MAAME,EAAyB,CAC7B,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,kCACF,EACO,MAAA,CACL,IAAK,+BACL,YAAa,CACX,EAAGF,EAAO,EACV,SAAUE,CAAA,CAEd,CAAA,CAEJ,EACA,CACE,KAAM,cACN,CAACD,CAAQ,EAAED,EAAQ,CACV,MAAA,CACL,IAAK,qCACL,YAAa,CACX,KAAM,SACN,EAAGA,EAAO,CAAA,CAEd,CAAA,CAEJ,EACA,CACE,KAAM,qBACN,MAAQA,IAAY,CAClB,IAAK,sCACL,YAAa,CACX,YAAaA,EAAO,CAAA,CAExB,EAAA,CAEJ,EAQaG,EACXC,GAEAL,EAAyB,OAAQM,GAAWA,EAAOD,CAAS,CAAC,EAUlDE,EAAuB,CAClCF,EACAN,IAEAK,EAA4BC,CAAS,EAAE,IAAKC,GAAW,CAC/C,MAAAE,EAAUF,EAAOD,CAAS,EAEhC,GAAI,CAACG,EACH,MAAM,IAAI,MACR,sBAAsBH,CAAS,0BAA0BC,EAAO,IAAI,EACtE,EAGF,MAAMG,EAAUD,EAAQV,EAAqBC,CAAK,CAAC,EAC7CW,EAAY,IAAI,IAAID,EAAQ,GAAG,EAC1B,SAAA,CAACE,EAAKC,CAAK,IAAK,OAAO,QAAQH,EAAQ,WAAW,EACvD,GAAA,MAAM,QAAQG,CAAK,EACrB,UAAWC,KAAKD,EACJF,EAAA,aAAa,OAAOC,EAAKE,CAAC,OAG5BH,EAAA,aAAa,IAAIC,EAAKC,CAAK,EAGlC,MAAA,CACL,IAAKF,EAAU,KACf,KAAMJ,EAAO,IACf,CACF,CAAC,ECxRUQ,EAAqB,IAAM,CACtC,MAAMC,EAAmBC,EAAoB,EACvCC,EAAcC,EAAe,EAK7BC,EAAsBC,EAAS,IAAM,CACzC,MAAMC,EAAaJ,EAAY,WAE7B,OAAAK,EAAqBD,CAAU,GAC9BN,EAAiB,KAAK,yBAAyB,GAC9CQ,EAAuBF,CAAU,EAE5BA,EAEFG,CAAA,CACR,EAOM,MAAA,CACL,gBAPsBJ,EAAS,IAAM,CACrC,MAAMrB,EAAQkB,EAAY,qBACpBQ,EAAON,EAAoB,MAC1B,OAAAZ,EAAqBkB,EAAM1B,CAAK,CAAA,CACxC,EAIC,oBAAAoB,CACF,CACF"}