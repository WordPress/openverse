{"version":3,"file":"CUuqYMuc.js","sources":["../../src/composables/use-body-scroll-lock.ts","../../src/composables/use-dialog-stack.ts","../../src/composables/use-dialog-control.ts","../../../node_modules/.pnpm/tabbable@6.2.0/node_modules/tabbable/dist/index.esm.js","../../../node_modules/.pnpm/focus-trap@7.5.4/node_modules/focus-trap/dist/focus-trap.esm.js","../../src/composables/use-focus-trap.ts","../../src/composables/use-focus-on-show.ts","../../src/composables/use-focus-on-hide.ts","../../src/composables/use-event-listener-outside.ts","../../src/composables/use-hide-on-click-outside.ts","../../src/composables/use-focus-on-blur.ts","../../src/composables/use-dialog-content.ts"],"sourcesContent":["import { Ref, ref, watch } from \"vue\"\n\nimport { getDocument } from \"~/utils/reakit-utils/dom\"\n\n/**\n * Creates a utility for locking body scrolling for a particular node.\n */\nexport function useBodyScrollLock({\n  nodeRef,\n  initialLocked = false,\n}: {\n  nodeRef: Ref<HTMLElement | null>\n  initialLocked?: boolean\n}) {\n  const locked = ref(initialLocked)\n  let scrollY: number | null = null\n\n  watch(\n    nodeRef,\n    (node) => {\n      if (node && locked.value) {\n        lock()\n      }\n    },\n    {\n      immediate: true,\n    }\n  )\n  const lock = () => {\n    if (!nodeRef.value) {\n      return\n    }\n\n    locked.value = true\n    const document = getDocument(nodeRef.value)\n    scrollY = window.scrollY\n    document.body.style.position = \"fixed\"\n    document.body.style.top = `-${scrollY}px`\n    document.body.style.right = \"0\"\n    document.body.style.left = \"0\"\n  }\n\n  const unlock = () => {\n    if (!nodeRef.value) {\n      return\n    }\n\n    locked.value = false\n    const document = getDocument(nodeRef.value)\n    document.body.style.position = \"\"\n    document.body.style.top = \"\"\n    document.body.style.right = \"\"\n    document.body.style.left = \"\"\n    if (scrollY) {\n      window.scrollTo(0, scrollY)\n      scrollY = null\n    }\n  }\n\n  return { locked, lock, unlock }\n}\n","import { computed, ref } from \"vue\"\n\nconst stack = ref<string[]>([])\n\n/**\n * This composable allows displaying multiple dialogs on top of each other,\n * and routing the events to the active, top-most dialog.\n */\nexport const useDialogStack = () => {\n  const push = (id: string) => {\n    stack.value.push(id)\n  }\n  const pop = () => {\n    stack.value.pop()\n  }\n  const clear = () => {\n    stack.value = []\n  }\n  const indexOf = (id: string) => {\n    return stack.value.indexOf(id)\n  }\n\n  /**\n   * The top-level dialog in the UI that intercepts 'outside' events.\n   */\n  const activeDialog = computed(() => stack.value[stack.value.length - 1])\n\n  return {\n    stack,\n    push,\n    pop,\n    clear,\n    indexOf,\n    activeDialog,\n  }\n}\n","import {\n  computed,\n  ComputedRef,\n  reactive,\n  ref,\n  Ref,\n  SetupContext,\n  watch,\n} from \"vue\"\n\nimport { MaybeRefOrGetter, toValue } from \"@vueuse/core\"\n\nimport { useBodyScrollLock } from \"~/composables/use-body-scroll-lock\"\nimport { useDialogStack } from \"~/composables/use-dialog-stack\"\n\ntype Fn = () => void\nexport function useDialogControl({\n  id,\n  visibleRef,\n  nodeRef,\n  lockBodyScroll,\n  emit,\n  deactivateFocusTrap,\n}: {\n  id: MaybeRefOrGetter<string | undefined>\n  visibleRef?: Ref<boolean>\n  nodeRef?: Ref<HTMLElement | null>\n  lockBodyScroll?: ComputedRef<boolean> | boolean\n  emit: SetupContext[\"emit\"]\n  deactivateFocusTrap?: MaybeRefOrGetter<Fn | undefined>\n}) {\n  const internallyControlled = typeof visibleRef === \"undefined\"\n  const internalVisibleRef = internallyControlled ? ref(false) : visibleRef\n\n  const triggerA11yProps = reactive({\n    \"aria-expanded\": false,\n    \"aria-haspopup\": \"dialog\",\n  })\n\n  watch(internalVisibleRef, (visible, _, onCleanup) => {\n    triggerA11yProps[\"aria-expanded\"] = visible\n    if (shouldLockBodyScroll.value) {\n      if (visible) {\n        lock()\n      } else {\n        unlock()\n      }\n    }\n    emit(visible ? \"open\" : \"close\")\n    onCleanup(() => {\n      if (shouldLockBodyScroll.value) {\n        unlock()\n      }\n    })\n  })\n\n  let lock = () => {\n      /** */\n    },\n    unlock = () => {\n      /** */\n    }\n  if (nodeRef) {\n    const bodyScroll = useBodyScrollLock({ nodeRef })\n    lock = bodyScroll.lock\n    unlock = bodyScroll.unlock\n  }\n  const shouldLockBodyScroll = computed(() => toValue(lockBodyScroll) ?? false)\n  watch(shouldLockBodyScroll, (shouldLock) => {\n    if (shouldLock) {\n      if (internalVisibleRef.value) {\n        lock()\n      }\n    } else {\n      unlock()\n    }\n  })\n\n  const open = () => {\n    internalVisibleRef.value = true\n    pushModalToStack()\n  }\n\n  const close = () => {\n    popModalFromStack()\n    const fn = toValue(deactivateFocusTrap)\n    if (fn) {\n      fn()\n    }\n    internalVisibleRef.value = false\n  }\n\n  const pushModalToStack = () => {\n    const { push } = useDialogStack()\n    const idValue = toValue(id)\n    if (idValue) {\n      push(idValue)\n    }\n  }\n\n  const popModalFromStack = () => {\n    const openModalStack = useDialogStack()\n    const idValue = toValue(id)\n    if (idValue && openModalStack.indexOf(idValue) > -1) {\n      openModalStack.pop()\n    }\n  }\n\n  const onTriggerClick = () => {\n    if (internalVisibleRef.value) {\n      close()\n    } else {\n      open()\n    }\n  }\n\n  return {\n    close,\n    open,\n    onTriggerClick,\n    triggerA11yProps,\n    visible: internalVisibleRef,\n  }\n}\n","/*!\n* tabbable 6.2.0\n* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE\n*/\n// NOTE: separate `:not()` selectors has broader browser support than the newer\n//  `:not([inert], [inert] *)` (Feb 2023)\n// CAREFUL: JSDom does not support `:not([inert] *)` as a selector; using it causes\n//  the entire query to fail, resulting in no nodes found, which will break a lot\n//  of things... so we have to rely on JS to identify nodes inside an inert container\nvar candidateSelectors = ['input:not([inert])', 'select:not([inert])', 'textarea:not([inert])', 'a[href]:not([inert])', 'button:not([inert])', '[tabindex]:not(slot):not([inert])', 'audio[controls]:not([inert])', 'video[controls]:not([inert])', '[contenteditable]:not([contenteditable=\"false\"]):not([inert])', 'details>summary:first-of-type:not([inert])', 'details:not([inert])'];\nvar candidateSelector = /* #__PURE__ */candidateSelectors.join(',');\nvar NoElement = typeof Element === 'undefined';\nvar matches = NoElement ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\nvar getRootNode = !NoElement && Element.prototype.getRootNode ? function (element) {\n  var _element$getRootNode;\n  return element === null || element === void 0 ? void 0 : (_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element);\n} : function (element) {\n  return element === null || element === void 0 ? void 0 : element.ownerDocument;\n};\n\n/**\n * Determines if a node is inert or in an inert ancestor.\n * @param {Element} [node]\n * @param {boolean} [lookUp] If true and `node` is not inert, looks up at ancestors to\n *  see if any of them are inert. If false, only `node` itself is considered.\n * @returns {boolean} True if inert itself or by way of being in an inert ancestor.\n *  False if `node` is falsy.\n */\nvar isInert = function isInert(node, lookUp) {\n  var _node$getAttribute;\n  if (lookUp === void 0) {\n    lookUp = true;\n  }\n  // CAREFUL: JSDom does not support inert at all, so we can't use the `HTMLElement.inert`\n  //  JS API property; we have to check the attribute, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's an active element\n  var inertAtt = node === null || node === void 0 ? void 0 : (_node$getAttribute = node.getAttribute) === null || _node$getAttribute === void 0 ? void 0 : _node$getAttribute.call(node, 'inert');\n  var inert = inertAtt === '' || inertAtt === 'true';\n\n  // NOTE: this could also be handled with `node.matches('[inert], :is([inert] *)')`\n  //  if it weren't for `matches()` not being a function on shadow roots; the following\n  //  code works for any kind of node\n  // CAREFUL: JSDom does not appear to support certain selectors like `:not([inert] *)`\n  //  so it likely would not support `:is([inert] *)` either...\n  var result = inert || lookUp && node && isInert(node.parentNode); // recursive\n\n  return result;\n};\n\n/**\n * Determines if a node's content is editable.\n * @param {Element} [node]\n * @returns True if it's content-editable; false if it's not or `node` is falsy.\n */\nvar isContentEditable = function isContentEditable(node) {\n  var _node$getAttribute2;\n  // CAREFUL: JSDom does not support the `HTMLElement.isContentEditable` API so we have\n  //  to use the attribute directly to check for this, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's a non-editable element\n  var attValue = node === null || node === void 0 ? void 0 : (_node$getAttribute2 = node.getAttribute) === null || _node$getAttribute2 === void 0 ? void 0 : _node$getAttribute2.call(node, 'contenteditable');\n  return attValue === '' || attValue === 'true';\n};\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nvar getCandidates = function getCandidates(el, includeContainer, filter) {\n  // even if `includeContainer=false`, we still have to check it for inertness because\n  //  if it's inert, all its children are inert\n  if (isInert(el)) {\n    return [];\n  }\n  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nvar getCandidatesIteratively = function getCandidatesIteratively(elements, includeContainer, options) {\n  var candidates = [];\n  var elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    var element = elementsToCheck.shift();\n    if (isInert(element, false)) {\n      // no need to look up since we're drilling down\n      // anything inside this container will also be inert\n      continue;\n    }\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      var assigned = element.assignedElements();\n      var content = assigned.length ? assigned : element.children;\n      var nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push.apply(candidates, nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates\n        });\n      }\n    } else {\n      // check candidate element\n      var validCandidate = matches.call(element, candidateSelector);\n      if (validCandidate && options.filter(element) && (includeContainer || !elements.includes(element))) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      var shadowRoot = element.shadowRoot ||\n      // check for an undisclosed shadow\n      typeof options.getShadowRoot === 'function' && options.getShadowRoot(element);\n\n      // no inert look up because we're already drilling down and checking for inertness\n      //  on the way down, so all containers to this root node should have already been\n      //  vetted as non-inert\n      var validShadowRoot = !isInert(shadowRoot, false) && (!options.shadowRootFilter || options.shadowRootFilter(element));\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        var _nestedCandidates = getCandidatesIteratively(shadowRoot === true ? element.children : shadowRoot.children, true, options);\n        if (options.flatten) {\n          candidates.push.apply(candidates, _nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: _nestedCandidates\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift.apply(elementsToCheck, element.children);\n      }\n    }\n  }\n  return candidates;\n};\n\n/**\n * @private\n * Determines if the node has an explicitly specified `tabindex` attribute.\n * @param {HTMLElement} node\n * @returns {boolean} True if so; false if not.\n */\nvar hasTabIndex = function hasTabIndex(node) {\n  return !isNaN(parseInt(node.getAttribute('tabindex'), 10));\n};\n\n/**\n * Determine the tab index of a given node.\n * @param {HTMLElement} node\n * @returns {number} Tab order (negative, 0, or positive number).\n * @throws {Error} If `node` is falsy.\n */\nvar getTabIndex = function getTabIndex(node) {\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    if ((/^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) || isContentEditable(node)) && !hasTabIndex(node)) {\n      return 0;\n    }\n  }\n  return node.tabIndex;\n};\n\n/**\n * Determine the tab index of a given node __for sort order purposes__.\n * @param {HTMLElement} node\n * @param {boolean} [isScope] True for a custom element with shadow root or slot that, by default,\n *  has tabIndex -1, but needs to be sorted by document order in order for its content to be\n *  inserted into the correct sort position.\n * @returns {number} Tab order (negative, 0, or positive number).\n */\nvar getSortOrderTabIndex = function getSortOrderTabIndex(node, isScope) {\n  var tabIndex = getTabIndex(node);\n  if (tabIndex < 0 && isScope && !hasTabIndex(node)) {\n    return 0;\n  }\n  return tabIndex;\n};\nvar sortOrderedTabbables = function sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n};\nvar isInput = function isInput(node) {\n  return node.tagName === 'INPUT';\n};\nvar isHiddenInput = function isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n};\nvar isDetailsWithSummary = function isDetailsWithSummary(node) {\n  var r = node.tagName === 'DETAILS' && Array.prototype.slice.apply(node.children).some(function (child) {\n    return child.tagName === 'SUMMARY';\n  });\n  return r;\n};\nvar getCheckedRadio = function getCheckedRadio(nodes, form) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\nvar isTabbableRadio = function isTabbableRadio(node) {\n  if (!node.name) {\n    return true;\n  }\n  var radioScope = node.form || getRootNode(node);\n  var queryRadios = function queryRadios(name) {\n    return radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + name + '\"]');\n  };\n  var radioSet;\n  if (typeof window !== 'undefined' && typeof window.CSS !== 'undefined' && typeof window.CSS.escape === 'function') {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s', err.message);\n      return false;\n    }\n  }\n  var checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\nvar isRadio = function isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n};\nvar isNonTabbableRadio = function isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nvar isNodeAttached = function isNodeAttached(node) {\n  var _nodeRoot;\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  // NOTE: If `nodeRootHost` or `node` happens to be the `document` itself (which is possible\n  //  if a tabbable/focusable node was quickly added to the DOM, focused, and then removed\n  //  from the DOM as in https://github.com/focus-trap/focus-trap-react/issues/905), then\n  //  `ownerDocument` will be `null`, hence the optional chaining on it.\n  var nodeRoot = node && getRootNode(node);\n  var nodeRootHost = (_nodeRoot = nodeRoot) === null || _nodeRoot === void 0 ? void 0 : _nodeRoot.host;\n\n  // in some cases, a detached node will return itself as the root instead of a document or\n  //  shadow root object, in which case, we shouldn't try to look further up the host chain\n  var attached = false;\n  if (nodeRoot && nodeRoot !== node) {\n    var _nodeRootHost, _nodeRootHost$ownerDo, _node$ownerDocument;\n    attached = !!((_nodeRootHost = nodeRootHost) !== null && _nodeRootHost !== void 0 && (_nodeRootHost$ownerDo = _nodeRootHost.ownerDocument) !== null && _nodeRootHost$ownerDo !== void 0 && _nodeRootHost$ownerDo.contains(nodeRootHost) || node !== null && node !== void 0 && (_node$ownerDocument = node.ownerDocument) !== null && _node$ownerDocument !== void 0 && _node$ownerDocument.contains(node));\n    while (!attached && nodeRootHost) {\n      var _nodeRoot2, _nodeRootHost2, _nodeRootHost2$ownerD;\n      // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n      //  which means we need to get the host's host and check if that parent host is contained\n      //  in (i.e. attached to) the document\n      nodeRoot = getRootNode(nodeRootHost);\n      nodeRootHost = (_nodeRoot2 = nodeRoot) === null || _nodeRoot2 === void 0 ? void 0 : _nodeRoot2.host;\n      attached = !!((_nodeRootHost2 = nodeRootHost) !== null && _nodeRootHost2 !== void 0 && (_nodeRootHost2$ownerD = _nodeRootHost2.ownerDocument) !== null && _nodeRootHost2$ownerD !== void 0 && _nodeRootHost2$ownerD.contains(nodeRootHost));\n    }\n  }\n  return attached;\n};\nvar isZeroArea = function isZeroArea(node) {\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n    width = _node$getBoundingClie.width,\n    height = _node$getBoundingClie.height;\n  return width === 0 && height === 0;\n};\nvar isHidden = function isHidden(node, _ref) {\n  var displayCheck = _ref.displayCheck,\n    getShadowRoot = _ref.getShadowRoot;\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n  var isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n  if (!displayCheck || displayCheck === 'full' || displayCheck === 'legacy-full') {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      var originalNode = node;\n      while (node) {\n        var parentElement = node.parentElement;\n        var rootNode = getRootNode(node);\n        if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nvar isDisabledFromFieldset = function isDisabledFromFieldset(node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    var parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (var i = 0; i < parentNode.children.length; i++) {\n          var child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *') ? true : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\nvar isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable(options, node) {\n  if (node.disabled ||\n  // we must do an inert look up to filter out any elements inside an inert ancestor\n  //  because we're limited in the type of selectors we can use in JSDom (see related\n  //  note related to `candidateSelectors`)\n  isInert(node) || isHiddenInput(node) || isHidden(node, options) ||\n  // For a details element with a summary, the summary element gets the focus\n  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {\n    return false;\n  }\n  return true;\n};\nvar isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable(options, node) {\n  if (isNonTabbableRadio(node) || getTabIndex(node) < 0 || !isNodeMatchingSelectorFocusable(options, node)) {\n    return false;\n  }\n  return true;\n};\nvar isValidShadowRootTabbable = function isValidShadowRootTabbable(shadowHostNode) {\n  var tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nvar sortByOrder = function sortByOrder(candidates) {\n  var regularTabbables = [];\n  var orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    var isScope = !!item.scopeParent;\n    var element = isScope ? item.scopeParent : item;\n    var candidateTabindex = getSortOrderTabIndex(element, isScope);\n    var elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements\n      });\n    }\n  });\n  return orderedTabbables.sort(sortOrderedTabbables).reduce(function (acc, sortable) {\n    sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content);\n    return acc;\n  }, []).concat(regularTabbables);\n};\nvar tabbable = function tabbable(container, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([container], options.includeContainer, {\n      filter: isNodeMatchingSelectorTabbable.bind(null, options),\n      flatten: false,\n      getShadowRoot: options.getShadowRoot,\n      shadowRootFilter: isValidShadowRootTabbable\n    });\n  } else {\n    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));\n  }\n  return sortByOrder(candidates);\n};\nvar focusable = function focusable(container, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([container], options.includeContainer, {\n      filter: isNodeMatchingSelectorFocusable.bind(null, options),\n      flatten: true,\n      getShadowRoot: options.getShadowRoot\n    });\n  } else {\n    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));\n  }\n  return candidates;\n};\nvar isTabbable = function isTabbable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\nvar focusableCandidateSelector = /* #__PURE__ */candidateSelectors.concat('iframe').join(',');\nvar isFocusable = function isFocusable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { focusable, getTabIndex, isFocusable, isTabbable, tabbable };\n//# sourceMappingURL=index.esm.js.map\n","/*!\n* focus-trap 7.5.4\n* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE\n*/\nimport { isFocusable, tabbable, focusable, isTabbable, getTabIndex } from 'tabbable';\n\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nvar activeFocusTraps = {\n  activateTrap: function activateTrap(trapStack, trap) {\n    if (trapStack.length > 0) {\n      var activeTrap = trapStack[trapStack.length - 1];\n      if (activeTrap !== trap) {\n        activeTrap.pause();\n      }\n    }\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex === -1) {\n      trapStack.push(trap);\n    } else {\n      // move this existing trap to the front of the queue\n      trapStack.splice(trapIndex, 1);\n      trapStack.push(trap);\n    }\n  },\n  deactivateTrap: function deactivateTrap(trapStack, trap) {\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex !== -1) {\n      trapStack.splice(trapIndex, 1);\n    }\n    if (trapStack.length > 0) {\n      trapStack[trapStack.length - 1].unpause();\n    }\n  }\n};\nvar isSelectableInput = function isSelectableInput(node) {\n  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';\n};\nvar isEscapeEvent = function isEscapeEvent(e) {\n  return (e === null || e === void 0 ? void 0 : e.key) === 'Escape' || (e === null || e === void 0 ? void 0 : e.key) === 'Esc' || (e === null || e === void 0 ? void 0 : e.keyCode) === 27;\n};\nvar isTabEvent = function isTabEvent(e) {\n  return (e === null || e === void 0 ? void 0 : e.key) === 'Tab' || (e === null || e === void 0 ? void 0 : e.keyCode) === 9;\n};\n\n// checks for TAB by default\nvar isKeyForward = function isKeyForward(e) {\n  return isTabEvent(e) && !e.shiftKey;\n};\n\n// checks for SHIFT+TAB by default\nvar isKeyBackward = function isKeyBackward(e) {\n  return isTabEvent(e) && e.shiftKey;\n};\nvar delay = function delay(fn) {\n  return setTimeout(fn, 0);\n};\n\n// Array.find/findIndex() are not supported on IE; this replicates enough\n//  of Array.findIndex() for our needs\nvar findIndex = function findIndex(arr, fn) {\n  var idx = -1;\n  arr.every(function (value, i) {\n    if (fn(value)) {\n      idx = i;\n      return false; // break\n    }\n\n    return true; // next\n  });\n\n  return idx;\n};\n\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\nvar valueOrHandler = function valueOrHandler(value) {\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n  return typeof value === 'function' ? value.apply(void 0, params) : value;\n};\nvar getActualTarget = function getActualTarget(event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function' ? event.composedPath()[0] : event.target;\n};\n\n// NOTE: this must be _outside_ `createFocusTrap()` to make sure all traps in this\n//  current instance use the same stack if `userOptions.trapStack` isn't specified\nvar internalTrapStack = [];\nvar createFocusTrap = function createFocusTrap(elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  var doc = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.document) || document;\n  var trapStack = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.trapStack) || internalTrapStack;\n  var config = _objectSpread2({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true,\n    isKeyForward: isKeyForward,\n    isKeyBackward: isKeyBackward\n  }, userOptions);\n  var state = {\n    // containers given to createFocusTrap()\n    // @type {Array<HTMLElement>}\n    containers: [],\n    // list of objects identifying tabbable nodes in `containers` in the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   tabbableNodes: Array<HTMLElement>, // empty if none\n    //   focusableNodes: Array<HTMLElement>, // empty if none\n    //   posTabIndexesFound: boolean,\n    //   firstTabbableNode: HTMLElement|undefined,\n    //   lastTabbableNode: HTMLElement|undefined,\n    //   firstDomTabbableNode: HTMLElement|undefined,\n    //   lastDomTabbableNode: HTMLElement|undefined,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    containerGroups: [],\n    // same order/length as `containers` list\n\n    // references to objects in `containerGroups`, but only those that actually have\n    //  tabbable nodes in them\n    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__\n    //  the same length\n    tabbableGroups: [],\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined,\n    // the most recent KeyboardEvent for the configured nav key (typically [SHIFT+]TAB), if any\n    recentNavEvent: undefined\n  };\n  var trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  /**\n   * Gets a configuration option value.\n   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,\n   *  value will be taken from this object. Otherwise, value will be taken from base configuration.\n   * @param {string} optionName Name of the option whose value is sought.\n   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`\n   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.\n   */\n  var getOption = function getOption(configOverrideOptions, optionName, configOptionName) {\n    return configOverrideOptions && configOverrideOptions[optionName] !== undefined ? configOverrideOptions[optionName] : config[configOptionName || optionName];\n  };\n\n  /**\n   * Finds the index of the container that contains the element.\n   * @param {HTMLElement} element\n   * @param {Event} [event] If available, and `element` isn't directly found in any container,\n   *  the event's composed path is used to see if includes any known trap containers in the\n   *  case where the element is inside a Shadow DOM.\n   * @returns {number} Index of the container in either `state.containers` or\n   *  `state.containerGroups` (the order/length of these lists are the same); -1\n   *  if the element isn't found.\n   */\n  var findContainerIndex = function findContainerIndex(element, event) {\n    var composedPath = typeof (event === null || event === void 0 ? void 0 : event.composedPath) === 'function' ? event.composedPath() : undefined;\n    // NOTE: search `containerGroups` because it's possible a group contains no tabbable\n    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)\n    //  and we still need to find the element in there\n    return state.containerGroups.findIndex(function (_ref) {\n      var container = _ref.container,\n        tabbableNodes = _ref.tabbableNodes;\n      return container.contains(element) || ( // fall back to explicit tabbable search which will take into consideration any\n      //  web components if the `tabbableOptions.getShadowRoot` option was used for\n      //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't\n      //  look inside web components even if open)\n      composedPath === null || composedPath === void 0 ? void 0 : composedPath.includes(container)) || tabbableNodes.find(function (node) {\n        return node === element;\n      });\n    });\n  };\n\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @returns {undefined | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `false` if the option\n   *  resolved to `false` (node explicitly not given); otherwise, the resolved\n   *  DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node.\n   */\n  var getNodeForOption = function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    if (typeof optionValue === 'function') {\n      for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        params[_key2 - 1] = arguments[_key2];\n      }\n      optionValue = optionValue.apply(void 0, params);\n    }\n    if (optionValue === true) {\n      optionValue = undefined; // use default value\n    }\n\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      }\n      // else, empty string (invalid), null (invalid), 0 (invalid)\n\n      throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n    }\n    var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue); // resolve to node, or null if fails\n      if (!node) {\n        throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n      }\n    }\n    return node;\n  };\n  var getInitialFocusNode = function getInitialFocusNode() {\n    var node = getNodeForOption('initialFocus');\n\n    // false explicitly indicates we want no initialFocus at all\n    if (node === false) {\n      return false;\n    }\n    if (node === undefined || !isFocusable(node, config.tabbableOptions)) {\n      // option not specified nor focusable: use fallback options\n      if (findContainerIndex(doc.activeElement) >= 0) {\n        node = doc.activeElement;\n      } else {\n        var firstTabbableGroup = state.tabbableGroups[0];\n        var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n\n        // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    }\n    if (!node) {\n      throw new Error('Your focus-trap needs to have at least one focusable element');\n    }\n    return node;\n  };\n  var updateTabbableNodes = function updateTabbableNodes() {\n    state.containerGroups = state.containers.map(function (container) {\n      var tabbableNodes = tabbable(container, config.tabbableOptions);\n\n      // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes\n      //  are a superset of tabbable nodes since nodes with negative `tabindex` attributes\n      //  are focusable but not tabbable\n      var focusableNodes = focusable(container, config.tabbableOptions);\n      var firstTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[0] : undefined;\n      var lastTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : undefined;\n      var firstDomTabbableNode = focusableNodes.find(function (node) {\n        return isTabbable(node);\n      });\n      var lastDomTabbableNode = focusableNodes.slice().reverse().find(function (node) {\n        return isTabbable(node);\n      });\n      var posTabIndexesFound = !!tabbableNodes.find(function (node) {\n        return getTabIndex(node) > 0;\n      });\n      return {\n        container: container,\n        tabbableNodes: tabbableNodes,\n        focusableNodes: focusableNodes,\n        /** True if at least one node with positive `tabindex` was found in this container. */\n        posTabIndexesFound: posTabIndexesFound,\n        /** First tabbable node in container, __tabindex__ order; `undefined` if none. */\n        firstTabbableNode: firstTabbableNode,\n        /** Last tabbable node in container, __tabindex__ order; `undefined` if none. */\n        lastTabbableNode: lastTabbableNode,\n        // NOTE: DOM order is NOT NECESSARILY \"document position\" order, but figuring that out\n        //  would require more than just https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n        //  because that API doesn't work with Shadow DOM as well as it should (@see\n        //  https://github.com/whatwg/dom/issues/320) and since this first/last is only needed, so far,\n        //  to address an edge case related to positive tabindex support, this seems like a much easier,\n        //  \"close enough most of the time\" alternative for positive tabindexes which should generally\n        //  be avoided anyway...\n        /** First tabbable node in container, __DOM__ order; `undefined` if none. */\n        firstDomTabbableNode: firstDomTabbableNode,\n        /** Last tabbable node in container, __DOM__ order; `undefined` if none. */\n        lastDomTabbableNode: lastDomTabbableNode,\n        /**\n         * Finds the __tabbable__ node that follows the given node in the specified direction,\n         *  in this container, if any.\n         * @param {HTMLElement} node\n         * @param {boolean} [forward] True if going in forward tab order; false if going\n         *  in reverse.\n         * @returns {HTMLElement|undefined} The next tabbable node, if any.\n         */\n        nextTabbableNode: function nextTabbableNode(node) {\n          var forward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n          var nodeIdx = tabbableNodes.indexOf(node);\n          if (nodeIdx < 0) {\n            // either not tabbable nor focusable, or was focused but not tabbable (negative tabindex):\n            //  since `node` should at least have been focusable, we assume that's the case and mimic\n            //  what browsers do, which is set focus to the next node in __document position order__,\n            //  regardless of positive tabindexes, if any -- and for reasons explained in the NOTE\n            //  above related to `firstDomTabbable` and `lastDomTabbable` properties, we fall back to\n            //  basic DOM order\n            if (forward) {\n              return focusableNodes.slice(focusableNodes.indexOf(node) + 1).find(function (el) {\n                return isTabbable(el);\n              });\n            }\n            return focusableNodes.slice(0, focusableNodes.indexOf(node)).reverse().find(function (el) {\n              return isTabbable(el);\n            });\n          }\n          return tabbableNodes[nodeIdx + (forward ? 1 : -1)];\n        }\n      };\n    });\n    state.tabbableGroups = state.containerGroups.filter(function (group) {\n      return group.tabbableNodes.length > 0;\n    });\n\n    // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n    if (state.tabbableGroups.length <= 0 && !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error('Your focus-trap must have at least one container with at least one tabbable node in it at all times');\n    }\n\n    // NOTE: Positive tabindexes are only properly supported in single-container traps because\n    //  doing it across multiple containers where tabindexes could be all over the place\n    //  would require Tabbable to support multiple containers, would require additional\n    //  specialized Shadow DOM support, and would require Tabbable's multi-container support\n    //  to look at those containers in document position order rather than user-provided\n    //  order (as they are treated in Focus-trap, for legacy reasons). See discussion on\n    //  https://github.com/focus-trap/focus-trap/issues/375 for more details.\n    if (state.containerGroups.find(function (g) {\n      return g.posTabIndexesFound;\n    }) && state.containerGroups.length > 1) {\n      throw new Error(\"At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.\");\n    }\n  };\n\n  /**\n   * Gets the current activeElement. If it's a web-component and has open shadow-root\n   * it will recursively search inside shadow roots for the \"true\" activeElement.\n   *\n   * @param {Document | ShadowRoot} el\n   *\n   * @returns {HTMLElement} The element that currently has the focus\n   **/\n  var getActiveElement = function getActiveElement(el) {\n    var activeElement = el.activeElement;\n    if (!activeElement) {\n      return;\n    }\n    if (activeElement.shadowRoot && activeElement.shadowRoot.activeElement !== null) {\n      return getActiveElement(activeElement.shadowRoot);\n    }\n    return activeElement;\n  };\n  var tryFocus = function tryFocus(node) {\n    if (node === false) {\n      return;\n    }\n    if (node === getActiveElement(document)) {\n      return;\n    }\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n    node.focus({\n      preventScroll: !!config.preventScroll\n    });\n    // NOTE: focus() API does not trigger focusIn event so set MRU node manually\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n  var getReturnFocusNode = function getReturnFocusNode(previousActiveElement) {\n    var node = getNodeForOption('setReturnFocus', previousActiveElement);\n    return node ? node : node === false ? false : previousActiveElement;\n  };\n\n  /**\n   * Finds the next node (in either direction) where focus should move according to a\n   *  keyboard focus-in event.\n   * @param {Object} params\n   * @param {Node} [params.target] Known target __from which__ to navigate, if any.\n   * @param {KeyboardEvent|FocusEvent} [params.event] Event to use if `target` isn't known (event\n   *  will be used to determine the `target`). Ignored if `target` is specified.\n   * @param {boolean} [params.isBackward] True if focus should move backward.\n   * @returns {Node|undefined} The next node, or `undefined` if a next node couldn't be\n   *  determined given the current state of the trap.\n   */\n  var findNextNavNode = function findNextNavNode(_ref2) {\n    var target = _ref2.target,\n      event = _ref2.event,\n      _ref2$isBackward = _ref2.isBackward,\n      isBackward = _ref2$isBackward === void 0 ? false : _ref2$isBackward;\n    target = target || getActualTarget(event);\n    updateTabbableNodes();\n    var destinationNode = null;\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      var containerIndex = findContainerIndex(target, event);\n      var containerGroup = containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back into...\n        if (isBackward) {\n          // ...the last node in the last group\n          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (isBackward) {\n        // REVERSE\n\n        // is the target the first tabbable node in a group?\n        var startOfGroupIndex = findIndex(state.tabbableGroups, function (_ref3) {\n          var firstTabbableNode = _ref3.firstTabbableNode;\n          return target === firstTabbableNode;\n        });\n        if (startOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target, false))) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n          var destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = getTabIndex(target) >= 0 ? destinationGroup.lastTabbableNode : destinationGroup.lastDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target, false);\n        }\n      } else {\n        // FORWARD\n\n        // is the target the last tabbable node in a group?\n        var lastOfGroupIndex = findIndex(state.tabbableGroups, function (_ref4) {\n          var lastTabbableNode = _ref4.lastTabbableNode;\n          return target === lastTabbableNode;\n        });\n        if (lastOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target))) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];\n          destinationNode = getTabIndex(target) >= 0 ? _destinationGroup.firstTabbableNode : _destinationGroup.firstDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target);\n        }\n      }\n    } else {\n      // no groups available\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n    return destinationNode;\n  };\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  var checkPointerDown = function checkPointerDown(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target, e) >= 0) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked (and if not focusable, to \"nothing\"); by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node), whether the\n        //  outside click was on a focusable node or not\n        returnFocus: config.returnFocusOnDeactivate\n      });\n      return;\n    }\n\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    }\n\n    // otherwise, prevent the click\n    e.preventDefault();\n  };\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  // NOTE: the focusIn event is NOT cancelable, so if focus escapes, it may cause unexpected\n  //  scrolling if the node that got focused was out of view; there's nothing we can do to\n  //  prevent that from happening by the time we discover that focus escaped\n  var checkFocusIn = function checkFocusIn(event) {\n    var target = getActualTarget(event);\n    var targetContained = findContainerIndex(target, event) >= 0;\n\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      event.stopImmediatePropagation();\n\n      // focus will escape if the MRU node had a positive tab index and user tried to nav forward;\n      //  it will also escape if the MRU node had a 0 tab index and user tried to nav backward\n      //  toward a node with a positive tab index\n      var nextNode; // next node to focus, if we find one\n      var navAcrossContainers = true;\n      if (state.mostRecentlyFocusedNode) {\n        if (getTabIndex(state.mostRecentlyFocusedNode) > 0) {\n          // MRU container index must be >=0 otherwise we wouldn't have it as an MRU node...\n          var mruContainerIdx = findContainerIndex(state.mostRecentlyFocusedNode);\n          // there MAY not be any tabbable nodes in the container if there are at least 2 containers\n          //  and the MRU node is focusable but not tabbable (focus-trap requires at least 1 container\n          //  with at least one tabbable node in order to function, so this could be the other container\n          //  with nothing tabbable in it)\n          var tabbableNodes = state.containerGroups[mruContainerIdx].tabbableNodes;\n          if (tabbableNodes.length > 0) {\n            // MRU tab index MAY not be found if the MRU node is focusable but not tabbable\n            var mruTabIdx = tabbableNodes.findIndex(function (node) {\n              return node === state.mostRecentlyFocusedNode;\n            });\n            if (mruTabIdx >= 0) {\n              if (config.isKeyForward(state.recentNavEvent)) {\n                if (mruTabIdx + 1 < tabbableNodes.length) {\n                  nextNode = tabbableNodes[mruTabIdx + 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              } else {\n                if (mruTabIdx - 1 >= 0) {\n                  nextNode = tabbableNodes[mruTabIdx - 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              }\n              // else, don't find in container order without considering direction too\n            }\n          }\n          // else, no tabbable nodes in that container (which means we must have at least one other\n          //  container with at least one tabbable node in it, otherwise focus-trap would've thrown\n          //  an error the last time updateTabbableNodes() was run): find next node among all known\n          //  containers\n        } else {\n          // check to see if there's at least one tabbable node with a positive tab index inside\n          //  the trap because focus seems to escape when navigating backward from a tabbable node\n          //  with tabindex=0 when this is the case (instead of wrapping to the tabbable node with\n          //  the greatest positive tab index like it should)\n          if (!state.containerGroups.some(function (g) {\n            return g.tabbableNodes.some(function (n) {\n              return getTabIndex(n) > 0;\n            });\n          })) {\n            // no containers with tabbable nodes with positive tab indexes which means the focus\n            //  escaped for some other reason and we should just execute the fallback to the\n            //  MRU node or initial focus node, if any\n            navAcrossContainers = false;\n          }\n        }\n      } else {\n        // no MRU node means we're likely in some initial condition when the trap has just\n        //  been activated and initial focus hasn't been given yet, in which case we should\n        //  fall through to trying to focus the initial focus node, which is what should\n        //  happen below at this point in the logic\n        navAcrossContainers = false;\n      }\n      if (navAcrossContainers) {\n        nextNode = findNextNavNode({\n          // move FROM the MRU node, not event-related node (which will be the node that is\n          //  outside the trap causing the focus escape we're trying to fix)\n          target: state.mostRecentlyFocusedNode,\n          isBackward: config.isKeyBackward(state.recentNavEvent)\n        });\n      }\n      if (nextNode) {\n        tryFocus(nextNode);\n      } else {\n        tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n      }\n    }\n    state.recentNavEvent = undefined; // clear\n  };\n\n  // Hijack key nav events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  var checkKeyNav = function checkKeyNav(event) {\n    var isBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    state.recentNavEvent = event;\n    var destinationNode = findNextNavNode({\n      event: event,\n      isBackward: isBackward\n    });\n    if (destinationNode) {\n      if (isTabEvent(event)) {\n        // since tab natively moves focus, we wouldn't have a destination node unless we\n        //  were on the edge of a container and had to move to the next/previous edge, in\n        //  which case we want to prevent default to keep the browser from moving focus\n        //  to where it normally would\n        event.preventDefault();\n      }\n      tryFocus(destinationNode);\n    }\n    // else, let the browser take care of [shift+]tab and move the focus\n  };\n\n  var checkKey = function checkKey(event) {\n    if (isEscapeEvent(event) && valueOrHandler(config.escapeDeactivates, event) !== false) {\n      event.preventDefault();\n      trap.deactivate();\n      return;\n    }\n    if (config.isKeyForward(event) || config.isKeyBackward(event)) {\n      checkKeyNav(event, config.isKeyBackward(event));\n    }\n  };\n  var checkClick = function checkClick(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target, e) >= 0) {\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n\n  //\n  // EVENT LISTENERS\n  //\n\n  var addListeners = function addListeners() {\n    if (!state.active) {\n      return;\n    }\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trapStack, trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function () {\n      tryFocus(getInitialFocusNode());\n    }) : tryFocus(getInitialFocusNode());\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkKey, {\n      capture: true,\n      passive: false\n    });\n    return trap;\n  };\n  var removeListeners = function removeListeners() {\n    if (!state.active) {\n      return;\n    }\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n    return trap;\n  };\n\n  //\n  // MUTATION OBSERVER\n  //\n\n  var checkDomRemoval = function checkDomRemoval(mutations) {\n    var isFocusedNodeRemoved = mutations.some(function (mutation) {\n      var removedNodes = Array.from(mutation.removedNodes);\n      return removedNodes.some(function (node) {\n        return node === state.mostRecentlyFocusedNode;\n      });\n    });\n\n    // If the currently focused is removed then browsers will move focus to the\n    // <body> element. If this happens, try to move focus back into the trap.\n    if (isFocusedNodeRemoved) {\n      tryFocus(getInitialFocusNode());\n    }\n  };\n\n  // Use MutationObserver - if supported - to detect if focused node is removed\n  // from the DOM.\n  var mutationObserver = typeof window !== 'undefined' && 'MutationObserver' in window ? new MutationObserver(checkDomRemoval) : undefined;\n  var updateObservedNodes = function updateObservedNodes() {\n    if (!mutationObserver) {\n      return;\n    }\n    mutationObserver.disconnect();\n    if (state.active && !state.paused) {\n      state.containers.map(function (container) {\n        mutationObserver.observe(container, {\n          subtree: true,\n          childList: true\n        });\n      });\n    }\n  };\n\n  //\n  // TRAP DEFINITION\n  //\n\n  trap = {\n    get active() {\n      return state.active;\n    },\n    get paused() {\n      return state.paused;\n    },\n    activate: function activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n      var onActivate = getOption(activateOptions, 'onActivate');\n      var onPostActivate = getOption(activateOptions, 'onPostActivate');\n      var checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n      onActivate === null || onActivate === void 0 || onActivate();\n      var finishActivation = function finishActivation() {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n        addListeners();\n        updateObservedNodes();\n        onPostActivate === null || onPostActivate === void 0 || onPostActivate();\n      };\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);\n        return this;\n      }\n      finishActivation();\n      return this;\n    },\n    deactivate: function deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n      var options = _objectSpread2({\n        onDeactivate: config.onDeactivate,\n        onPostDeactivate: config.onPostDeactivate,\n        checkCanReturnFocus: config.checkCanReturnFocus\n      }, deactivateOptions);\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n      state.delayInitialFocusTimer = undefined;\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      updateObservedNodes();\n      activeFocusTraps.deactivateTrap(trapStack, trap);\n      var onDeactivate = getOption(options, 'onDeactivate');\n      var onPostDeactivate = getOption(options, 'onPostDeactivate');\n      var checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');\n      var returnFocus = getOption(options, 'returnFocus', 'returnFocusOnDeactivate');\n      onDeactivate === null || onDeactivate === void 0 || onDeactivate();\n      var finishDeactivation = function finishDeactivation() {\n        delay(function () {\n          if (returnFocus) {\n            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n          onPostDeactivate === null || onPostDeactivate === void 0 || onPostDeactivate();\n        });\n      };\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n      finishDeactivation();\n      return this;\n    },\n    pause: function pause(pauseOptions) {\n      if (state.paused || !state.active) {\n        return this;\n      }\n      var onPause = getOption(pauseOptions, 'onPause');\n      var onPostPause = getOption(pauseOptions, 'onPostPause');\n      state.paused = true;\n      onPause === null || onPause === void 0 || onPause();\n      removeListeners();\n      updateObservedNodes();\n      onPostPause === null || onPostPause === void 0 || onPostPause();\n      return this;\n    },\n    unpause: function unpause(unpauseOptions) {\n      if (!state.paused || !state.active) {\n        return this;\n      }\n      var onUnpause = getOption(unpauseOptions, 'onUnpause');\n      var onPostUnpause = getOption(unpauseOptions, 'onPostUnpause');\n      state.paused = false;\n      onUnpause === null || onUnpause === void 0 || onUnpause();\n      updateTabbableNodes();\n      addListeners();\n      updateObservedNodes();\n      onPostUnpause === null || onPostUnpause === void 0 || onPostUnpause();\n      return this;\n    },\n    updateContainerElements: function updateContainerElements(containerElements) {\n      var elementsAsArray = [].concat(containerElements).filter(Boolean);\n      state.containers = elementsAsArray.map(function (element) {\n        return typeof element === 'string' ? doc.querySelector(element) : element;\n      });\n      if (state.active) {\n        updateTabbableNodes();\n      }\n      updateObservedNodes();\n      return this;\n    }\n  };\n\n  // initialize container elements\n  trap.updateContainerElements(elements);\n  return trap;\n};\n\nexport { createFocusTrap };\n//# sourceMappingURL=focus-trap.esm.js.map\n","// Copied from https://github.com/vueuse/vueuse/blob/91ec77418298eb252899125ab37c160718a3e078/packages/integrations/useFocusTrap/index.ts\n// Importing it directly from the vueuse/integration causes an import error\nimport { tryOnScopeDispose, unrefElement } from \"@vueuse/core\"\nimport { ref, watch } from \"vue-demi\"\nimport { createFocusTrap } from \"focus-trap\"\n\nimport type { Ref } from \"vue-demi\"\nimport type { Fn, MaybeElementRef } from \"@vueuse/core\"\nimport type {\n  ActivateOptions,\n  DeactivateOptions,\n  FocusTrap,\n  Options,\n} from \"focus-trap\"\n\nexport interface UseFocusTrapOptions extends Options {\n  /**\n   * Immediately activate the trap\n   */\n  immediate?: boolean\n}\n\nexport interface UseFocusTrapReturn {\n  /**\n   * Indicates if the focus trap is currently active\n   */\n  hasFocus: Ref<boolean>\n\n  /**\n   * Indicates if the focus trap is currently paused\n   */\n  isPaused: Ref<boolean>\n\n  /**\n   * Activate the focus trap\n   *\n   * @see https://github.com/focus-trap/focus-trap#trapactivateactivateoptions\n   * @param opts - Activate focus trap options\n   */\n  activate: (opts?: ActivateOptions) => void\n\n  /**\n   * Deactivate the focus trap\n   *\n   * @see https://github.com/focus-trap/focus-trap#trapdeactivatedeactivateoptions\n   * @param opts - Deactivate focus trap options\n   */\n  deactivate: (opts?: DeactivateOptions) => void\n\n  /**\n   * Pause the focus trap\n   *\n   * @see https://github.com/focus-trap/focus-trap#trappause\n   */\n  pause: Fn\n\n  /**\n   * Unpauses the focus trap\n   *\n   * @see https://github.com/focus-trap/focus-trap#trapunpause\n   */\n  unpause: Fn\n}\n\n/**\n * Reactive focus-trap\n *\n * @see https://vueuse.org/useFocusTrap\n * @param target - The target element to trap focus within\n * @param options - Focus trap options\n * options.autoFocus - Focus trap automatically when mounted\n */\nexport function useFocusTrap(\n  target: MaybeElementRef,\n  options: UseFocusTrapOptions = {}\n): UseFocusTrapReturn {\n  let trap: undefined | FocusTrap\n\n  const { immediate, ...focusTrapOptions } = options\n  const hasFocus = ref(false)\n  const isPaused = ref(false)\n\n  const activate = (opts?: ActivateOptions) => trap && trap.activate(opts)\n  const deactivate = (opts?: DeactivateOptions) => trap && trap.deactivate(opts)\n\n  const pause = () => {\n    if (trap) {\n      trap.pause()\n      isPaused.value = true\n    }\n  }\n\n  const unpause = () => {\n    if (trap) {\n      trap.unpause()\n      isPaused.value = false\n    }\n  }\n\n  const stopWatcher = watch(\n    () => unrefElement(target),\n    (el) => {\n      if (!el) {\n        return\n      }\n\n      trap = createFocusTrap(el, {\n        ...focusTrapOptions,\n        onActivate() {\n          hasFocus.value = true\n\n          // Apply if user provided onActivate option\n          if (options.onActivate) {\n            options.onActivate()\n          }\n        },\n        onDeactivate() {\n          hasFocus.value = false\n\n          // Apply if user provided onDeactivate option\n          if (options.onDeactivate) {\n            options.onDeactivate()\n          }\n        },\n      })\n\n      // Focus if immediate is set to true\n      if (immediate) {\n        activate()\n      }\n    },\n    { flush: \"post\" }\n  )\n\n  // Cleanup on unmount\n  tryOnScopeDispose(() => {\n    stopWatcher()\n  })\n\n  return {\n    hasFocus,\n    isPaused,\n    activate,\n    deactivate,\n    pause,\n    unpause,\n  }\n}\n","import { nextTick, watch, Ref, computed, ref } from \"vue\"\n\nimport { tryOnScopeDispose, unrefElement } from \"@vueuse/core\"\n\nimport { warn } from \"~/utils/console\"\nimport {\n  ensureFocus,\n  getFirstTabbableIn,\n  hasFocusWithin,\n} from \"~/utils/reakit-utils/focus\"\nimport { useFocusTrap, UseFocusTrapReturn } from \"~/composables/use-focus-trap\"\n\nexport const noFocusableElementWarning =\n  \"It's recommended to have at least one tabbable element inside dialog. The dialog element has been automatically focused. If this is the intended behavior, pass `tabIndex={0}` to the dialog element to disable this warning.\"\n\ntype Props = {\n  dialogRef: Ref<HTMLElement | null>\n  visibleRef: Ref<boolean>\n  autoFocusOnShowRef: Ref<boolean>\n  trapFocusRef: Ref<boolean>\n  hideOnClickOutsideRef: Ref<boolean>\n  initialFocusElementRef: Ref<HTMLElement | null>\n}\n\n/**\n * @see https://github.com/reakit/reakit/blob/bce9b8a0e567983f61b5cc627f8dee9461986fab/packages/reakit/src/Dialog/__utils/useFocusOnShow.ts#L9\n */\nexport const useFocusOnShow = ({\n  dialogRef,\n  visibleRef,\n  autoFocusOnShowRef,\n  trapFocusRef,\n  hideOnClickOutsideRef,\n  initialFocusElementRef,\n}: Props) => {\n  let activateFocusTrap = () => {\n    /** */\n  }\n  let deactivateFocusTrap = () => {\n    /** */\n  }\n  let trap: UseFocusTrapReturn | undefined\n  const foundTabbableNode = ref<HTMLElement | null>(null)\n  const fallbackFocusNode = computed(\n    () => initialFocusElementRef.value || foundTabbableNode.value\n  )\n  if (trapFocusRef.value) {\n    trap = useFocusTrap(dialogRef, {\n      // Prevent FocusTrap from trying to focus the first element.\n      // We already do that in a more flexible, adaptive way in our Dialog composables.\n      initialFocus: false,\n      // if set to true, focus-trap prevents the default for the keyboard event, and we cannot handle it in our composables.\n      escapeDeactivates: false,\n      clickOutsideDeactivates: () => hideOnClickOutsideRef.value,\n      // Even though we pass `initialFocus` as `false` above, `focus-trap` still\n      // checks if the container has at least one tabbable element. Because it sometimes\n      // doesn't play nicely with Vue's rendering life-cycle, we need to get it a\n      // dynamic way to retrieve the fallback node.\n      fallbackFocus: () => fallbackFocusNode.value as HTMLElement,\n    })\n\n    activateFocusTrap = trap.activate\n    deactivateFocusTrap = trap.deactivate\n  }\n\n  const stopWatcher = watch(\n    [\n      () => unrefElement(dialogRef),\n      visibleRef,\n      autoFocusOnShowRef,\n      initialFocusElementRef,\n    ] as const,\n    ([dialog, visible, autoFocusOnShow, initialFocusElement], _, onCleanup) => {\n      if (!dialog || !visible) {\n        if (trap?.hasFocus) {\n          deactivateFocusTrap()\n        }\n        return\n      }\n      if (!autoFocusOnShow) {\n        return\n      }\n\n      nextTick(() => {\n        const isActive = () => hasFocusWithin(dialog)\n\n        if (initialFocusElement) {\n          ensureFocus(initialFocusElement, {\n            preventScroll: true,\n            isActive,\n          })\n        } else {\n          const tabbable = getFirstTabbableIn(dialog, true)\n\n          if (tabbable) {\n            ensureFocus(tabbable, { preventScroll: true, isActive })\n            foundTabbableNode.value = tabbable\n          } else {\n            ensureFocus(dialog, { preventScroll: true, isActive })\n            foundTabbableNode.value = dialog\n            if (dialog.tabIndex === undefined || dialog.tabIndex < 0) {\n              warn(noFocusableElementWarning)\n            }\n          }\n        }\n        activateFocusTrap()\n      })\n\n      onCleanup(() => {\n        deactivateFocusTrap()\n      })\n    }\n  )\n  tryOnScopeDispose(() => {\n    deactivateFocusTrap()\n    stopWatcher()\n  })\n  return { deactivateFocusTrap }\n}\n","import { Ref, watch } from \"vue\"\n\nimport { contains, getActiveElement } from \"~/utils/reakit-utils/dom\"\nimport { ensureFocus, isTabbable } from \"~/utils/reakit-utils/focus\"\n\ntype Props = {\n  dialogRef: Ref<HTMLElement | null>\n  triggerElementRef: Ref<HTMLElement | null>\n  visibleRef: Ref<boolean>\n  autoFocusOnHideRef: Ref<boolean>\n}\n\nfunction hidByFocusingAnotherElement(popover: HTMLElement) {\n  if (!popover) {\n    return false\n  }\n\n  const activeElement = getActiveElement(popover)\n\n  if (!activeElement) {\n    return false\n  }\n  if (contains(popover, activeElement)) {\n    return false\n  }\n  if (isTabbable(activeElement)) {\n    return true\n  }\n\n  return activeElement.getAttribute(\"data-popover\") === \"true\"\n}\n\nexport const useFocusOnHide = ({\n  dialogRef,\n  triggerElementRef,\n  visibleRef,\n  autoFocusOnHideRef,\n}: Props) => {\n  watch(\n    [dialogRef, triggerElementRef, visibleRef, autoFocusOnHideRef] as const,\n\n    (\n      [dialog, triggerElement, visible, autoFocusOnHide],\n      [, , previousVisible]\n    ) => {\n      const shouldFocus =\n        autoFocusOnHide && !visible && visible !== previousVisible\n\n      if (!shouldFocus) {\n        return\n      }\n\n      if (!dialog || hidByFocusingAnotherElement(dialog)) {\n        return\n      }\n\n      if (triggerElement) {\n        ensureFocus(triggerElement)\n      }\n    }\n  )\n}\n","import { type Ref, ref, watch } from \"vue\"\n\nimport { contains, getDocument, isInDocument } from \"~/utils/reakit-utils/dom\"\nimport { useDialogStack } from \"~/composables/use-dialog-stack\"\n\ninterface Props {\n  /**\n   * A click outside of this element will trigger the `listener` function.\n   */\n  containerRef: Ref<HTMLElement | null>\n  /**\n   * The element that triggers the dialog and will be focused when modal is closed.\n   */\n  triggerRef: Ref<HTMLElement | null>\n  /**\n   * The type of event to listen to.\n   */\n  eventType: string\n  /**\n   * The function to be called on a click outside of the `containerRef` element\n   * @param e - the event object\n   */\n  listener: (e: Event) => void\n  /**\n   * Whether the listener should be active or not.\n   */\n  shouldListenRef?: Ref<boolean>\n}\n\nexport const useEventListenerOutside = ({\n  containerRef,\n  triggerRef,\n  eventType,\n  listener,\n  shouldListenRef,\n}: Props) => {\n  const boundEventRef = ref()\n\n  watch(\n    [containerRef, triggerRef, shouldListenRef || ref(false)] as const,\n    ([container, trigger, shouldListen], _, onInvalidate) => {\n      if (boundEventRef.value && !shouldListen) {\n        const document = getDocument(container)\n        document.removeEventListener(eventType, boundEventRef.value)\n      }\n\n      if (!shouldListen) {\n        return\n      }\n\n      boundEventRef.value = (event: Event) => {\n        if (!listener || !container || !(event.target instanceof Element)) {\n          return\n        }\n        const target = event.target\n\n        // When an element is unmounted right after it receives focus, the focus\n        // event is triggered after that, when the element isn't part of the\n        // current document anymore. So we ignore it.\n        if (!isInDocument(target)) {\n          return\n        }\n        // Event inside the container\n        if (contains(container, target)) {\n          return\n        }\n        // Event on the trigger\n        if (trigger && contains(trigger, target)) {\n          return\n        }\n        // Event is in the top-level dialog, so shouldn't be handled by the\n        // parent dialogs\n        if (useDialogStack().activeDialog.value !== container.id) {\n          return\n        }\n\n        listener(event)\n      }\n\n      const document = getDocument(container)\n      document.addEventListener(eventType, boundEventRef.value)\n      onInvalidate(() => {\n        if (boundEventRef.value) {\n          document.removeEventListener(eventType, boundEventRef.value)\n          boundEventRef.value = undefined\n        }\n      })\n    },\n    { immediate: true }\n  )\n}\n","import { ref, watch, computed, type Ref } from \"vue\"\n\nimport { getDocument } from \"~/utils/reakit-utils/dom\"\nimport { useEventListenerOutside } from \"~/composables/use-event-listener-outside\"\n\ntype Props = {\n  dialogRef: Ref<HTMLElement | null>\n  visibleRef: Ref<boolean>\n  hideOnClickOutsideRef: Ref<boolean>\n  triggerElementRef: Ref<HTMLElement | null>\n  hideRef: Ref<() => void>\n}\n\nfunction useMouseDownTargetRef({\n  dialogRef,\n  visibleRef,\n  hideOnClickOutsideRef,\n}: Pick<\n  Props,\n  \"dialogRef\" | \"visibleRef\" | \"hideOnClickOutsideRef\"\n>): Ref<EventTarget> {\n  const mouseDownTargetRef = ref()\n\n  watch(\n    [visibleRef, hideOnClickOutsideRef, dialogRef] as const,\n    ([visible, hideOnClickOutside, popover], _, onInvalidate) => {\n      if (!(visible && hideOnClickOutside)) {\n        return\n      }\n\n      const document = getDocument(popover)\n      const onMouseDown = (event: MouseEvent) =>\n        (mouseDownTargetRef.value = event.target)\n      document.addEventListener(\"mousedown\", onMouseDown)\n      onInvalidate(() => {\n        document.removeEventListener(\"mousedown\", onMouseDown)\n      })\n    },\n    { immediate: true }\n  )\n\n  return mouseDownTargetRef\n}\n\nexport function useHideOnClickOutside({\n  dialogRef,\n  visibleRef,\n  hideOnClickOutsideRef,\n  triggerElementRef,\n  hideRef,\n}: Props) {\n  const mouseDownTargetRef = useMouseDownTargetRef({\n    dialogRef,\n    visibleRef,\n    hideOnClickOutsideRef,\n  })\n\n  const shouldListenRef = computed(\n    () => visibleRef.value && hideOnClickOutsideRef.value\n  )\n\n  useEventListenerOutside({\n    containerRef: dialogRef,\n    triggerRef: triggerElementRef,\n    eventType: \"click\",\n    listener: (event: Event) => {\n      if (mouseDownTargetRef.value === event.target) {\n        // Make sure the element that has been clicked is the same that last\n        // triggered the mousedown event. This prevents the dialog from closing\n        // by dragging the cursor (for example, selecting some text inside the\n        // dialog and releasing the mouse outside of it).\n        hideRef.value()\n      }\n    },\n    shouldListenRef,\n  })\n\n  useEventListenerOutside({\n    containerRef: dialogRef,\n    triggerRef: triggerElementRef,\n    eventType: \"focusin\",\n    listener: (event: Event) => {\n      const document = getDocument(dialogRef.value)\n\n      if (event.target !== document) {\n        hideRef.value()\n      }\n    },\n    shouldListenRef,\n  })\n}\n","import { Ref, ref, watch } from \"vue\"\n\nimport { getActiveElement, getDocument } from \"~/utils/reakit-utils/dom\"\n\ntype Props = {\n  dialogRef: Ref<HTMLElement | null>\n  visibleRef: Ref<boolean>\n}\n\nfunction isActualElement(\n  element: EventTarget | Element | null\n): element is Element {\n  if (!element) {\n    return false\n  }\n  const elementAsElement = element as Element\n  return !!(\n    elementAsElement.tagName &&\n    elementAsElement.tagName !== \"HTML\" &&\n    elementAsElement !== getDocument(elementAsElement).body\n  )\n}\n\nfunction useBlurTracker(): [Ref<number>, () => void] {\n  const blurredRef = ref(0)\n\n  const scheduleFocus = () => (blurredRef.value += 1)\n\n  return [blurredRef, scheduleFocus]\n}\n\nexport function useFocusOnBlur({ dialogRef, visibleRef }: Props) {\n  const [blurredRef, scheduleFocus] = useBlurTracker()\n\n  watch([blurredRef], ([blurred]) => {\n    if (!visibleRef.value) {\n      return\n    }\n    if (!blurred) {\n      return\n    }\n    if (!isActualElement(getActiveElement(dialogRef.value))) {\n      dialogRef.value?.focus()\n    }\n  })\n\n  return (event: FocusEvent) => {\n    if (visibleRef.value) {\n      return\n    }\n    const nextActiveElement = event.relatedTarget\n    if (!isActualElement(nextActiveElement as Element)) {\n      scheduleFocus()\n    }\n  }\n}\n","import { ref } from \"vue\"\nimport type { Ref, SetupContext } from \"vue\"\n\nimport type { DialogElements, DialogOptions } from \"#shared/types/modal\"\nimport { warn } from \"~/utils/console\"\nimport { useFocusOnShow } from \"~/composables/use-focus-on-show\"\nimport { useFocusOnHide } from \"~/composables/use-focus-on-hide\"\nimport { useHideOnClickOutside } from \"~/composables/use-hide-on-click-outside\"\nimport { useFocusOnBlur } from \"~/composables/use-focus-on-blur\"\n\ntype Props = {\n  dialogElements: DialogElements\n  dialogOptions?: Partial<DialogOptions>\n  visibleRef: Ref<boolean>\n  hideRef: Ref<() => void>\n  emit: SetupContext[\"emit\"]\n  attrs: SetupContext[\"attrs\"]\n}\n\nexport function useDialogContent({\n  emit,\n  attrs,\n  visibleRef,\n  hideRef,\n  dialogOptions,\n  dialogElements: { dialogRef, initialFocusElementRef, triggerElementRef },\n}: Props) {\n  if (!attrs[\"aria-label\"] && !attrs[\"aria-labelledby\"]) {\n    warn(\"You should provide either `aria-label` or `aria-labelledby` props.\")\n  }\n\n  const autoFocusOnShowRef = dialogOptions?.autoFocusOnShowRef || ref(true)\n  const trapFocusRef = dialogOptions?.trapFocusRef || ref(true)\n  const autoFocusOnHideRef = dialogOptions?.autoFocusOnHideRef || ref(true)\n  const hideOnClickOutsideRef =\n    dialogOptions?.hideOnClickOutsideRef || ref(true)\n  const hideOnEscRef = dialogOptions?.hideOnEscRef || ref(true)\n\n  const focusOnBlur = useFocusOnBlur({\n    dialogRef,\n    visibleRef,\n  })\n  const { deactivateFocusTrap } = useFocusOnShow({\n    dialogRef,\n    visibleRef,\n    initialFocusElementRef,\n\n    autoFocusOnShowRef,\n    trapFocusRef,\n    hideOnClickOutsideRef,\n  })\n  useFocusOnHide({\n    dialogRef,\n    triggerElementRef,\n    visibleRef,\n    autoFocusOnHideRef,\n  })\n  useHideOnClickOutside({\n    dialogRef,\n    triggerElementRef,\n\n    hideOnClickOutsideRef,\n    hideRef,\n    visibleRef,\n  })\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    emit(\"keydown\", event)\n\n    if (event.defaultPrevented) {\n      return\n    }\n    if (event.key !== \"Escape\") {\n      return\n    }\n    if (!hideOnEscRef.value) {\n      return\n    }\n\n    event.stopPropagation()\n    hideRef.value()\n  }\n\n  const onBlur = (event: FocusEvent) => {\n    emit(\"blur\", event)\n    focusOnBlur(event)\n  }\n\n  return { onKeyDown, onBlur, deactivateFocusTrap }\n}\n"],"names":["useBodyScrollLock","nodeRef","initialLocked","locked","ref","scrollY","watch","node","lock","document","getDocument","stack","useDialogStack","push","id","pop","clear","indexOf","activeDialog","computed","useDialogControl","visibleRef","lockBodyScroll","emit","deactivateFocusTrap","internalVisibleRef","triggerA11yProps","reactive","visible","_","onCleanup","shouldLockBodyScroll","unlock","bodyScroll","toValue","shouldLock","open","pushModalToStack","close","popModalFromStack","fn","idValue","openModalStack","candidateSelectors","candidateSelector","NoElement","matches","getRootNode","element","_element$getRootNode","isInert","lookUp","_node$getAttribute","inertAtt","inert","result","isContentEditable","_node$getAttribute2","attValue","getCandidates","el","includeContainer","filter","candidates","getCandidatesIteratively","elements","options","elementsToCheck","assigned","content","nestedCandidates","validCandidate","shadowRoot","validShadowRoot","_nestedCandidates","hasTabIndex","getTabIndex","getSortOrderTabIndex","isScope","tabIndex","sortOrderedTabbables","a","b","isInput","isHiddenInput","isDetailsWithSummary","r","child","getCheckedRadio","nodes","form","i","isTabbableRadio","radioScope","queryRadios","name","radioSet","err","checked","isRadio","isNonTabbableRadio","isNodeAttached","_nodeRoot","nodeRoot","nodeRootHost","attached","_nodeRootHost","_nodeRootHost$ownerDo","_node$ownerDocument","_nodeRoot2","_nodeRootHost2","_nodeRootHost2$ownerD","isZeroArea","_node$getBoundingClie","width","height","isHidden","_ref","displayCheck","getShadowRoot","isDirectSummary","nodeUnderDetails","originalNode","parentElement","rootNode","isDisabledFromFieldset","parentNode","isNodeMatchingSelectorFocusable","isNodeMatchingSelectorTabbable","isValidShadowRootTabbable","shadowHostNode","sortByOrder","regularTabbables","orderedTabbables","item","candidateTabindex","acc","sortable","tabbable","container","focusable","isTabbable","focusableCandidateSelector","isFocusable","ownKeys","e","o","_objectSpread2","_defineProperty","obj","key","value","_toPropertyKey","_toPrimitive","input","hint","prim","res","arg","activeFocusTraps","trapStack","trap","activeTrap","trapIndex","isSelectableInput","isEscapeEvent","isTabEvent","isKeyForward","isKeyBackward","delay","findIndex","arr","idx","valueOrHandler","_len","params","_key","getActualTarget","event","internalTrapStack","createFocusTrap","userOptions","doc","config","state","getOption","configOverrideOptions","optionName","configOptionName","findContainerIndex","composedPath","tabbableNodes","getNodeForOption","optionValue","_len2","_key2","getInitialFocusNode","firstTabbableGroup","firstTabbableNode","updateTabbableNodes","focusableNodes","lastTabbableNode","firstDomTabbableNode","lastDomTabbableNode","posTabIndexesFound","forward","nodeIdx","group","g","getActiveElement","activeElement","tryFocus","getReturnFocusNode","previousActiveElement","findNextNavNode","_ref2","target","_ref2$isBackward","isBackward","destinationNode","containerIndex","containerGroup","startOfGroupIndex","_ref3","destinationGroupIndex","destinationGroup","lastOfGroupIndex","_ref4","_destinationGroupIndex","_destinationGroup","checkPointerDown","checkFocusIn","targetContained","nextNode","navAcrossContainers","mruContainerIdx","mruTabIdx","n","checkKeyNav","checkKey","checkClick","addListeners","removeListeners","checkDomRemoval","mutations","isFocusedNodeRemoved","mutation","removedNodes","mutationObserver","updateObservedNodes","activateOptions","onActivate","onPostActivate","checkCanFocusTrap","finishActivation","deactivateOptions","onDeactivate","onPostDeactivate","checkCanReturnFocus","returnFocus","finishDeactivation","pauseOptions","onPause","onPostPause","unpauseOptions","onUnpause","onPostUnpause","containerElements","elementsAsArray","useFocusTrap","immediate","focusTrapOptions","hasFocus","isPaused","activate","opts","deactivate","pause","unpause","stopWatcher","unrefElement","tryOnScopeDispose","noFocusableElementWarning","useFocusOnShow","dialogRef","autoFocusOnShowRef","trapFocusRef","hideOnClickOutsideRef","initialFocusElementRef","activateFocusTrap","foundTabbableNode","fallbackFocusNode","dialog","autoFocusOnShow","initialFocusElement","nextTick","isActive","hasFocusWithin","ensureFocus","getFirstTabbableIn","warn","hidByFocusingAnotherElement","popover","contains","useFocusOnHide","triggerElementRef","autoFocusOnHideRef","triggerElement","autoFocusOnHide","previousVisible","useEventListenerOutside","containerRef","triggerRef","eventType","listener","shouldListenRef","boundEventRef","trigger","shouldListen","onInvalidate","isInDocument","useMouseDownTargetRef","mouseDownTargetRef","hideOnClickOutside","onMouseDown","useHideOnClickOutside","hideRef","isActualElement","elementAsElement","useBlurTracker","blurredRef","useFocusOnBlur","scheduleFocus","blurred","_a","nextActiveElement","useDialogContent","attrs","dialogOptions","hideOnEscRef","focusOnBlur"],"mappings":"6jBAOO,SAASA,GAAkB,CAChC,QAAAC,EACA,cAAAC,EAAgB,EAClB,EAGG,CACK,MAAAC,EAASC,EAAIF,CAAa,EAChC,IAAIG,EAAyB,KAE7BC,EACEL,EACCM,GAAS,CACJA,GAAQJ,EAAO,OACZK,EAAA,CAET,EACA,CACE,UAAW,EAAA,CAEf,EACA,MAAMA,EAAO,IAAM,CACb,GAAA,CAACP,EAAQ,MACX,OAGFE,EAAO,MAAQ,GACT,MAAAM,EAAWC,EAAYT,EAAQ,KAAK,EAC1CI,EAAU,OAAO,QACRI,EAAA,KAAK,MAAM,SAAW,QAC/BA,EAAS,KAAK,MAAM,IAAM,IAAIJ,CAAO,KAC5BI,EAAA,KAAK,MAAM,MAAQ,IACnBA,EAAA,KAAK,MAAM,KAAO,GAC7B,EAmBO,MAAA,CAAE,OAAAN,EAAQ,KAAAK,EAAM,OAjBR,IAAM,CACf,GAAA,CAACP,EAAQ,MACX,OAGFE,EAAO,MAAQ,GACT,MAAAM,EAAWC,EAAYT,EAAQ,KAAK,EACjCQ,EAAA,KAAK,MAAM,SAAW,GACtBA,EAAA,KAAK,MAAM,IAAM,GACjBA,EAAA,KAAK,MAAM,MAAQ,GACnBA,EAAA,KAAK,MAAM,KAAO,GACvBJ,IACK,OAAA,SAAS,EAAGA,CAAO,EAChBA,EAAA,KAEd,CAE8B,CAChC,CC1DA,MAAMM,EAAQP,EAAc,EAAE,EAMjBQ,GAAiB,IAAM,CAC5B,MAAAC,EAAQC,GAAe,CACrBH,EAAA,MAAM,KAAKG,CAAE,CACrB,EACMC,EAAM,IAAM,CAChBJ,EAAM,MAAM,IAAI,CAClB,EACMK,EAAQ,IAAM,CAClBL,EAAM,MAAQ,CAAC,CACjB,EACMM,EAAWH,GACRH,EAAM,MAAM,QAAQG,CAAE,EAMzBI,EAAeC,EAAS,IAAMR,EAAM,MAAMA,EAAM,MAAM,OAAS,CAAC,CAAC,EAEhE,MAAA,CACL,MAAAA,EACA,KAAAE,EACA,IAAAE,EACA,MAAAC,EACA,QAAAC,EACA,aAAAC,CACF,CACF,ECnBO,SAASE,GAAiB,CAC/B,GAAAN,EACA,WAAAO,EACA,QAAApB,EACA,eAAAqB,EACA,KAAAC,EACA,oBAAAC,CACF,EAOG,CAED,MAAMC,EADuB,OAAOJ,EAAe,IACDjB,EAAI,EAAK,EAAIiB,EAEzDK,EAAmBC,GAAS,CAChC,gBAAiB,GACjB,gBAAiB,QAAA,CAClB,EAEDrB,EAAMmB,EAAoB,CAACG,EAASC,EAAGC,IAAc,CACnDJ,EAAiB,eAAe,EAAIE,EAChCG,EAAqB,QACnBH,EACGpB,EAAA,EAEEwB,EAAA,GAGNT,EAAAK,EAAU,OAAS,OAAO,EAC/BE,EAAU,IAAM,CACVC,EAAqB,OAChBC,EAAA,CACT,CACD,CAAA,CACF,EAED,IAAIxB,EAAO,IAAM,CAEf,EACAwB,EAAS,IAAM,CAEf,EACF,GAAI/B,EAAS,CACX,MAAMgC,EAAajC,GAAkB,CAAE,QAAAC,EAAS,EAChDO,EAAOyB,EAAW,KAClBD,EAASC,EAAW,MAAA,CAEtB,MAAMF,EAAuBZ,EAAS,IAAMe,EAAQZ,CAAc,GAAK,EAAK,EACtEhB,EAAAyB,EAAuBI,GAAe,CACtCA,EACEV,EAAmB,OAChBjB,EAAA,EAGAwB,EAAA,CACT,CACD,EAED,MAAMI,EAAO,IAAM,CACjBX,EAAmB,MAAQ,GACVY,EAAA,CACnB,EAEMC,EAAQ,IAAM,CACAC,EAAA,EACZ,MAAAC,EAAKN,EAAQV,CAAmB,EAClCgB,GACCA,EAAA,EAELf,EAAmB,MAAQ,EAC7B,EAEMY,EAAmB,IAAM,CACvB,KAAA,CAAE,KAAAxB,CAAK,EAAID,GAAe,EAC1B6B,EAAUP,EAAQpB,CAAE,EACtB2B,GACF5B,EAAK4B,CAAO,CAEhB,EAEMF,EAAoB,IAAM,CAC9B,MAAMG,EAAiB9B,GAAe,EAChC6B,EAAUP,EAAQpB,CAAE,EACtB2B,GAAWC,EAAe,QAAQD,CAAO,EAAI,IAC/CC,EAAe,IAAI,CAEvB,EAUO,MAAA,CACL,MAAAJ,EACA,KAAAF,EACA,eAXqB,IAAM,CACvBX,EAAmB,MACfa,EAAA,EAEDF,EAAA,CAET,EAME,iBAAAV,EACA,QAASD,CACX,CACF,CC3HA;AAAA;AAAA;AAAA,EASA,IAAIkB,GAAqB,CAAC,qBAAsB,sBAAuB,wBAAyB,uBAAwB,sBAAuB,oCAAqC,+BAAgC,+BAAgC,gEAAiE,6CAA8C,sBAAsB,EACrXC,EAAmCD,GAAmB,KAAK,GAAG,EAC9DE,GAAY,OAAO,QAAY,IAC/BC,EAAUD,GAAY,UAAY,CAAE,EAAG,QAAQ,UAAU,SAAW,QAAQ,UAAU,mBAAqB,QAAQ,UAAU,sBAC7HE,EAAc,CAACF,IAAa,QAAQ,UAAU,YAAc,SAAUG,EAAS,CACjF,IAAIC,EACJ,OAAOD,GAAY,OAAuCC,EAAuBD,EAAQ,eAAiB,MAAQC,IAAyB,OAA3F,OAA6GA,EAAqB,KAAKD,CAAO,CAChM,EAAI,SAAUA,EAAS,CACrB,OAAOA,GAAY,KAA6B,OAASA,EAAQ,aACnE,EAUIE,EAAU,SAASA,EAAQ3C,EAAM4C,EAAQ,CAC3C,IAAIC,EACAD,IAAW,SACbA,EAAS,IAKX,IAAIE,EAAW9C,GAAS,OAAoC6C,EAAqB7C,EAAK,gBAAkB,MAAQ6C,IAAuB,OAArF,OAAuGA,EAAmB,KAAK7C,EAAM,OAAO,EAC1L+C,EAAQD,IAAa,IAAMA,IAAa,OAOxCE,EAASD,GAASH,GAAU5C,GAAQ2C,EAAQ3C,EAAK,UAAU,EAE/D,OAAOgD,CACT,EAOIC,GAAoB,SAA2BjD,EAAM,CACvD,IAAIkD,EAIAC,EAAWnD,GAAS,OAAoCkD,EAAsBlD,EAAK,gBAAkB,MAAQkD,IAAwB,OAAvF,OAAyGA,EAAoB,KAAKlD,EAAM,iBAAiB,EAC3M,OAAOmD,IAAa,IAAMA,IAAa,MACzC,EAQIC,GAAgB,SAAuBC,EAAIC,EAAkBC,EAAQ,CAGvE,GAAIZ,EAAQU,CAAE,EACZ,MAAO,CAAE,EAEX,IAAIG,EAAa,MAAM,UAAU,MAAM,MAAMH,EAAG,iBAAiBhB,CAAiB,CAAC,EACnF,OAAIiB,GAAoBf,EAAQ,KAAKc,EAAIhB,CAAiB,GACxDmB,EAAW,QAAQH,CAAE,EAEvBG,EAAaA,EAAW,OAAOD,CAAM,EAC9BC,CACT,EAoCIC,GAA2B,SAASA,EAAyBC,EAAUJ,EAAkBK,EAAS,CAGpG,QAFIH,EAAa,CAAE,EACfI,EAAkB,MAAM,KAAKF,CAAQ,EAClCE,EAAgB,QAAQ,CAC7B,IAAInB,EAAUmB,EAAgB,MAAO,EACrC,GAAI,CAAAjB,EAAQF,EAAS,EAAK,EAK1B,GAAIA,EAAQ,UAAY,OAAQ,CAE9B,IAAIoB,EAAWpB,EAAQ,iBAAkB,EACrCqB,EAAUD,EAAS,OAASA,EAAWpB,EAAQ,SAC/CsB,EAAmBN,EAAyBK,EAAS,GAAMH,CAAO,EAClEA,EAAQ,QACVH,EAAW,KAAK,MAAMA,EAAYO,CAAgB,EAElDP,EAAW,KAAK,CACd,YAAaf,EACb,WAAYsB,CACtB,CAAS,CAET,KAAW,CAEL,IAAIC,EAAiBzB,EAAQ,KAAKE,EAASJ,CAAiB,EACxD2B,GAAkBL,EAAQ,OAAOlB,CAAO,IAAMa,GAAoB,CAACI,EAAS,SAASjB,CAAO,IAC9Fe,EAAW,KAAKf,CAAO,EAIzB,IAAIwB,EAAaxB,EAAQ,YAEzB,OAAOkB,EAAQ,eAAkB,YAAcA,EAAQ,cAAclB,CAAO,EAKxEyB,EAAkB,CAACvB,EAAQsB,EAAY,EAAK,IAAM,CAACN,EAAQ,kBAAoBA,EAAQ,iBAAiBlB,CAAO,GACnH,GAAIwB,GAAcC,EAAiB,CAOjC,IAAIC,EAAoBV,EAAyBQ,IAAe,GAAOxB,EAAQ,SAAWwB,EAAW,SAAU,GAAMN,CAAO,EACxHA,EAAQ,QACVH,EAAW,KAAK,MAAMA,EAAYW,CAAiB,EAEnDX,EAAW,KAAK,CACd,YAAaf,EACb,WAAY0B,CACxB,CAAW,CAEX,MAGQP,EAAgB,QAAQ,MAAMA,EAAiBnB,EAAQ,QAAQ,CAEvE,CACA,CACE,OAAOe,CACT,EAQIY,GAAc,SAAqBpE,EAAM,CAC3C,MAAO,CAAC,MAAM,SAASA,EAAK,aAAa,UAAU,EAAG,EAAE,CAAC,CAC3D,EAQIqE,EAAc,SAAqBrE,EAAM,CAC3C,GAAI,CAACA,EACH,MAAM,IAAI,MAAM,kBAAkB,EAEpC,OAAIA,EAAK,SAAW,IAQb,0BAA0B,KAAKA,EAAK,OAAO,GAAKiD,GAAkBjD,CAAI,IAAM,CAACoE,GAAYpE,CAAI,EACzF,EAGJA,EAAK,QACd,EAUIsE,GAAuB,SAA8BtE,EAAMuE,EAAS,CACtE,IAAIC,EAAWH,EAAYrE,CAAI,EAC/B,OAAIwE,EAAW,GAAKD,GAAW,CAACH,GAAYpE,CAAI,EACvC,EAEFwE,CACT,EACIC,GAAuB,SAA8BC,EAAGC,EAAG,CAC7D,OAAOD,EAAE,WAAaC,EAAE,SAAWD,EAAE,cAAgBC,EAAE,cAAgBD,EAAE,SAAWC,EAAE,QACxF,EACIC,GAAU,SAAiB5E,EAAM,CACnC,OAAOA,EAAK,UAAY,OAC1B,EACI6E,GAAgB,SAAuB7E,EAAM,CAC/C,OAAO4E,GAAQ5E,CAAI,GAAKA,EAAK,OAAS,QACxC,EACI8E,GAAuB,SAA8B9E,EAAM,CAC7D,IAAI+E,EAAI/E,EAAK,UAAY,WAAa,MAAM,UAAU,MAAM,MAAMA,EAAK,QAAQ,EAAE,KAAK,SAAUgF,EAAO,CACrG,OAAOA,EAAM,UAAY,SAC7B,CAAG,EACD,OAAOD,CACT,EACIE,GAAkB,SAAyBC,EAAOC,EAAM,CAC1D,QAASC,EAAI,EAAGA,EAAIF,EAAM,OAAQE,IAChC,GAAIF,EAAME,CAAC,EAAE,SAAWF,EAAME,CAAC,EAAE,OAASD,EACxC,OAAOD,EAAME,CAAC,CAGpB,EACIC,GAAkB,SAAyBrF,EAAM,CACnD,GAAI,CAACA,EAAK,KACR,MAAO,GAET,IAAIsF,EAAatF,EAAK,MAAQwC,EAAYxC,CAAI,EAC1CuF,EAAc,SAAqBC,EAAM,CAC3C,OAAOF,EAAW,iBAAiB,6BAA+BE,EAAO,IAAI,CAC9E,EACGC,EACJ,GAAI,OAAO,OAAW,KAAe,OAAO,OAAO,IAAQ,KAAe,OAAO,OAAO,IAAI,QAAW,WACrGA,EAAWF,EAAY,OAAO,IAAI,OAAOvF,EAAK,IAAI,CAAC,MAEnD,IAAI,CACFyF,EAAWF,EAAYvF,EAAK,IAAI,CACjC,OAAQ0F,EAAK,CAEZ,eAAQ,MAAM,2IAA4IA,EAAI,OAAO,EAC9J,EACb,CAEE,IAAIC,EAAUV,GAAgBQ,EAAUzF,EAAK,IAAI,EACjD,MAAO,CAAC2F,GAAWA,IAAY3F,CACjC,EACI4F,GAAU,SAAiB5F,EAAM,CACnC,OAAO4E,GAAQ5E,CAAI,GAAKA,EAAK,OAAS,OACxC,EACI6F,GAAqB,SAA4B7F,EAAM,CACzD,OAAO4F,GAAQ5F,CAAI,GAAK,CAACqF,GAAgBrF,CAAI,CAC/C,EAGI8F,GAAiB,SAAwB9F,EAAM,CACjD,IAAI+F,EAwBAC,EAAWhG,GAAQwC,EAAYxC,CAAI,EACnCiG,GAAgBF,EAAYC,KAAc,MAAQD,IAAc,OAAS,OAASA,EAAU,KAI5FG,EAAW,GACf,GAAIF,GAAYA,IAAahG,EAAM,CACjC,IAAImG,EAAeC,EAAuBC,EAE1C,IADAH,EAAW,CAAC,GAAGC,EAAgBF,KAAkB,MAAQE,IAAkB,SAAWC,EAAwBD,EAAc,iBAAmB,MAAQC,IAA0B,QAAUA,EAAsB,SAASH,CAAY,GAAKjG,GAAS,OAA4BqG,EAAsBrG,EAAK,iBAAmB,MAAQqG,IAAwB,QAAUA,EAAoB,SAASrG,CAAI,GAClY,CAACkG,GAAYD,GAAc,CAChC,IAAIK,EAAYC,EAAgBC,EAIhCR,EAAWxD,EAAYyD,CAAY,EACnCA,GAAgBK,EAAaN,KAAc,MAAQM,IAAe,OAAS,OAASA,EAAW,KAC/FJ,EAAW,CAAC,GAAGK,EAAiBN,KAAkB,MAAQM,IAAmB,SAAWC,EAAwBD,EAAe,iBAAmB,MAAQC,IAA0B,QAAUA,EAAsB,SAASP,CAAY,EAC/O,CACA,CACE,OAAOC,CACT,EACIO,GAAa,SAAoBzG,EAAM,CACzC,IAAI0G,EAAwB1G,EAAK,sBAAuB,EACtD2G,EAAQD,EAAsB,MAC9BE,EAASF,EAAsB,OACjC,OAAOC,IAAU,GAAKC,IAAW,CACnC,EACIC,GAAW,SAAkB7G,EAAM8G,EAAM,CAC3C,IAAIC,EAAeD,EAAK,aACtBE,EAAgBF,EAAK,cAMvB,GAAI,iBAAiB9G,CAAI,EAAE,aAAe,SACxC,MAAO,GAET,IAAIiH,EAAkB1E,EAAQ,KAAKvC,EAAM,+BAA+B,EACpEkH,EAAmBD,EAAkBjH,EAAK,cAAgBA,EAC9D,GAAIuC,EAAQ,KAAK2E,EAAkB,uBAAuB,EACxD,MAAO,GAET,GAAI,CAACH,GAAgBA,IAAiB,QAAUA,IAAiB,cAAe,CAC9E,GAAI,OAAOC,GAAkB,WAAY,CAIvC,QADIG,EAAenH,EACZA,GAAM,CACX,IAAIoH,EAAgBpH,EAAK,cACrBqH,EAAW7E,EAAYxC,CAAI,EAC/B,GAAIoH,GAAiB,CAACA,EAAc,YAAcJ,EAAcI,CAAa,IAAM,GAIjF,OAAOX,GAAWzG,CAAI,EACbA,EAAK,aAEdA,EAAOA,EAAK,aACH,CAACoH,GAAiBC,IAAarH,EAAK,cAE7CA,EAAOqH,EAAS,KAGhBrH,EAAOoH,CAEjB,CACMpH,EAAOmH,CACb,CAWI,GAAIrB,GAAe9F,CAAI,EAKrB,MAAO,CAACA,EAAK,eAAc,EAAG,OAmBhC,GAAI+G,IAAiB,cACnB,MAAO,EAGb,SAAaA,IAAiB,gBAM1B,OAAON,GAAWzG,CAAI,EAKxB,MAAO,EACT,EAKIsH,GAAyB,SAAgCtH,EAAM,CACjE,GAAI,mCAAmC,KAAKA,EAAK,OAAO,EAGtD,QAFIuH,EAAavH,EAAK,cAEfuH,GAAY,CACjB,GAAIA,EAAW,UAAY,YAAcA,EAAW,SAAU,CAE5D,QAASnC,EAAI,EAAGA,EAAImC,EAAW,SAAS,OAAQnC,IAAK,CACnD,IAAIJ,EAAQuC,EAAW,SAAS,KAAKnC,CAAC,EAEtC,GAAIJ,EAAM,UAAY,SAGpB,OAAOzC,EAAQ,KAAKgF,EAAY,sBAAsB,EAAI,GAAO,CAACvC,EAAM,SAAShF,CAAI,CAEjG,CAEQ,MAAO,EACf,CACMuH,EAAaA,EAAW,aAC9B,CAKE,MAAO,EACT,EACIC,EAAkC,SAAyC7D,EAAS3D,EAAM,CAC5F,MAAI,EAAAA,EAAK,UAIT2C,EAAQ3C,CAAI,GAAK6E,GAAc7E,CAAI,GAAK6G,GAAS7G,EAAM2D,CAAO,GAE9DmB,GAAqB9E,CAAI,GAAKsH,GAAuBtH,CAAI,EAI3D,EACIyH,GAAiC,SAAwC9D,EAAS3D,EAAM,CAC1F,MAAI,EAAA6F,GAAmB7F,CAAI,GAAKqE,EAAYrE,CAAI,EAAI,GAAK,CAACwH,EAAgC7D,EAAS3D,CAAI,EAIzG,EACI0H,GAA4B,SAAmCC,EAAgB,CACjF,IAAInD,EAAW,SAASmD,EAAe,aAAa,UAAU,EAAG,EAAE,EACnE,MAAI,SAAMnD,CAAQ,GAAKA,GAAY,EAMrC,EAMIoD,GAAc,SAASA,EAAYpE,EAAY,CACjD,IAAIqE,EAAmB,CAAE,EACrBC,EAAmB,CAAE,EACzB,OAAAtE,EAAW,QAAQ,SAAUuE,EAAM3C,EAAG,CACpC,IAAIb,EAAU,CAAC,CAACwD,EAAK,YACjBtF,EAAU8B,EAAUwD,EAAK,YAAcA,EACvCC,EAAoB1D,GAAqB7B,EAAS8B,CAAO,EACzDb,EAAWa,EAAUqD,EAAYG,EAAK,UAAU,EAAItF,EACpDuF,IAAsB,EACxBzD,EAAUsD,EAAiB,KAAK,MAAMA,EAAkBnE,CAAQ,EAAImE,EAAiB,KAAKpF,CAAO,EAEjGqF,EAAiB,KAAK,CACpB,cAAe1C,EACf,SAAU4C,EACV,KAAMD,EACN,QAASxD,EACT,QAASb,CACjB,CAAO,CAEP,CAAG,EACMoE,EAAiB,KAAKrD,EAAoB,EAAE,OAAO,SAAUwD,EAAKC,EAAU,CACjF,OAAAA,EAAS,QAAUD,EAAI,KAAK,MAAMA,EAAKC,EAAS,OAAO,EAAID,EAAI,KAAKC,EAAS,OAAO,EAC7ED,CACX,EAAK,CAAE,CAAA,EAAE,OAAOJ,CAAgB,CAChC,EACIM,GAAW,SAAkBC,EAAWzE,EAAS,CACnDA,EAAUA,GAAW,CAAE,EACvB,IAAIH,EACJ,OAAIG,EAAQ,cACVH,EAAaC,GAAyB,CAAC2E,CAAS,EAAGzE,EAAQ,iBAAkB,CAC3E,OAAQ8D,GAA+B,KAAK,KAAM9D,CAAO,EACzD,QAAS,GACT,cAAeA,EAAQ,cACvB,iBAAkB+D,EACxB,CAAK,EAEDlE,EAAaJ,GAAcgF,EAAWzE,EAAQ,iBAAkB8D,GAA+B,KAAK,KAAM9D,CAAO,CAAC,EAE7GiE,GAAYpE,CAAU,CAC/B,EACI6E,GAAY,SAAmBD,EAAWzE,EAAS,CACrDA,EAAUA,GAAW,CAAE,EACvB,IAAIH,EACJ,OAAIG,EAAQ,cACVH,EAAaC,GAAyB,CAAC2E,CAAS,EAAGzE,EAAQ,iBAAkB,CAC3E,OAAQ6D,EAAgC,KAAK,KAAM7D,CAAO,EAC1D,QAAS,GACT,cAAeA,EAAQ,aAC7B,CAAK,EAEDH,EAAaJ,GAAcgF,EAAWzE,EAAQ,iBAAkB6D,EAAgC,KAAK,KAAM7D,CAAO,CAAC,EAE9GH,CACT,EACI8E,EAAa,SAAoBtI,EAAM2D,EAAS,CAElD,GADAA,EAAUA,GAAW,CAAE,EACnB,CAAC3D,EACH,MAAM,IAAI,MAAM,kBAAkB,EAEpC,OAAIuC,EAAQ,KAAKvC,EAAMqC,CAAiB,IAAM,GACrC,GAEFoF,GAA+B9D,EAAS3D,CAAI,CACrD,EACIuI,GAA4CnG,GAAmB,OAAO,QAAQ,EAAE,KAAK,GAAG,EACxFoG,GAAc,SAAqBxI,EAAM2D,EAAS,CAEpD,GADAA,EAAUA,GAAW,CAAE,EACnB,CAAC3D,EACH,MAAM,IAAI,MAAM,kBAAkB,EAEpC,OAAIuC,EAAQ,KAAKvC,EAAMuI,EAA0B,IAAM,GAC9C,GAEFf,EAAgC7D,EAAS3D,CAAI,CACtD,ECvjBA;AAAA;AAAA;AAAA,EAMA,SAASyI,GAAQC,EAAG3D,EAAG,CACrB,IAAI,EAAI,OAAO,KAAK2D,CAAC,EACrB,GAAI,OAAO,sBAAuB,CAChC,IAAIC,EAAI,OAAO,sBAAsBD,CAAC,EACtC3D,IAAM4D,EAAIA,EAAE,OAAO,SAAU5D,EAAG,CAC9B,OAAO,OAAO,yBAAyB2D,EAAG3D,CAAC,EAAE,UACnD,CAAK,GAAI,EAAE,KAAK,MAAM,EAAG4D,CAAC,CAC1B,CACE,OAAO,CACT,CACA,SAASC,GAAeF,EAAG,CACzB,QAAS3D,EAAI,EAAGA,EAAI,UAAU,OAAQA,IAAK,CACzC,IAAI,EAAY,UAAUA,CAAC,GAAnB,KAAuB,UAAUA,CAAC,EAAI,CAAE,EAChDA,EAAI,EAAI0D,GAAQ,OAAO,CAAC,EAAG,EAAE,EAAE,QAAQ,SAAU1D,EAAG,CAClD8D,GAAgBH,EAAG3D,EAAG,EAAEA,CAAC,CAAC,CAChC,CAAK,EAAI,OAAO,0BAA4B,OAAO,iBAAiB2D,EAAG,OAAO,0BAA0B,CAAC,CAAC,EAAID,GAAQ,OAAO,CAAC,CAAC,EAAE,QAAQ,SAAU1D,EAAG,CAChJ,OAAO,eAAe2D,EAAG3D,EAAG,OAAO,yBAAyB,EAAGA,CAAC,CAAC,CACvE,CAAK,CACL,CACE,OAAO2D,CACT,CACA,SAASG,GAAgBC,EAAKC,EAAKC,EAAO,CACxC,OAAAD,EAAME,GAAeF,CAAG,EACpBA,KAAOD,EACT,OAAO,eAAeA,EAAKC,EAAK,CAC9B,MAAOC,EACP,WAAY,GACZ,aAAc,GACd,SAAU,EAChB,CAAK,EAEDF,EAAIC,CAAG,EAAIC,EAENF,CACT,CACA,SAASI,GAAaC,EAAOC,EAAM,CACjC,GAAI,OAAOD,GAAU,UAAYA,IAAU,KAAM,OAAOA,EACxD,IAAIE,EAAOF,EAAM,OAAO,WAAW,EACnC,GAAIE,IAAS,OAAW,CACtB,IAAIC,EAAMD,EAAK,KAAKF,EAAOC,GAAQ,SAAS,EAC5C,GAAI,OAAOE,GAAQ,SAAU,OAAOA,EACpC,MAAM,IAAI,UAAU,8CAA8C,CACtE,CACE,OAAQF,IAAS,SAAW,OAAS,QAAQD,CAAK,CACpD,CACA,SAASF,GAAeM,EAAK,CAC3B,IAAIR,EAAMG,GAAaK,EAAK,QAAQ,EACpC,OAAO,OAAOR,GAAQ,SAAWA,EAAM,OAAOA,CAAG,CACnD,CAEA,IAAIS,GAAmB,CACrB,aAAc,SAAsBC,EAAWC,EAAM,CACnD,GAAID,EAAU,OAAS,EAAG,CACxB,IAAIE,EAAaF,EAAUA,EAAU,OAAS,CAAC,EAC3CE,IAAeD,GACjBC,EAAW,MAAO,CAE1B,CACI,IAAIC,EAAYH,EAAU,QAAQC,CAAI,EAClCE,IAAc,IAIhBH,EAAU,OAAOG,EAAW,CAAC,EAC7BH,EAAU,KAAKC,CAAI,CAEtB,EACD,eAAgB,SAAwBD,EAAWC,EAAM,CACvD,IAAIE,EAAYH,EAAU,QAAQC,CAAI,EAClCE,IAAc,IAChBH,EAAU,OAAOG,EAAW,CAAC,EAE3BH,EAAU,OAAS,GACrBA,EAAUA,EAAU,OAAS,CAAC,EAAE,QAAS,CAE/C,CACA,EACII,GAAoB,SAA2B7J,EAAM,CACvD,OAAOA,EAAK,SAAWA,EAAK,QAAQ,YAAa,IAAK,SAAW,OAAOA,EAAK,QAAW,UAC1F,EACI8J,GAAgB,SAAuB,EAAG,CAC5C,OAAQ,GAAM,KAAuB,OAAS,EAAE,OAAS,WAAa,GAAM,KAAuB,OAAS,EAAE,OAAS,QAAU,GAAM,KAAuB,OAAS,EAAE,WAAa,EACxL,EACIC,EAAa,SAAoB,EAAG,CACtC,OAAQ,GAAM,KAAuB,OAAS,EAAE,OAAS,QAAU,GAAM,KAAuB,OAAS,EAAE,WAAa,CAC1H,EAGIC,GAAe,SAAsB,EAAG,CAC1C,OAAOD,EAAW,CAAC,GAAK,CAAC,EAAE,QAC7B,EAGIE,GAAgB,SAAuB,EAAG,CAC5C,OAAOF,EAAW,CAAC,GAAK,EAAE,QAC5B,EACIG,GAAQ,SAAejI,EAAI,CAC7B,OAAO,WAAWA,EAAI,CAAC,CACzB,EAIIkI,GAAY,SAAmBC,EAAKnI,EAAI,CAC1C,IAAIoI,EAAM,GACV,OAAAD,EAAI,MAAM,SAAUpB,EAAO5D,EAAG,CAC5B,OAAInD,EAAG+G,CAAK,GACVqB,EAAMjF,EACC,IAGF,EACX,CAAG,EAEMiF,CACT,EASIC,EAAiB,SAAwBtB,EAAO,CAClD,QAASuB,EAAO,UAAU,OAAQC,EAAS,IAAI,MAAMD,EAAO,EAAIA,EAAO,EAAI,CAAC,EAAGE,EAAO,EAAGA,EAAOF,EAAME,IACpGD,EAAOC,EAAO,CAAC,EAAI,UAAUA,CAAI,EAEnC,OAAO,OAAOzB,GAAU,WAAaA,EAAM,MAAM,OAAQwB,CAAM,EAAIxB,CACrE,EACI0B,EAAkB,SAAyBC,EAAO,CAQpD,OAAOA,EAAM,OAAO,YAAc,OAAOA,EAAM,cAAiB,WAAaA,EAAM,aAAc,EAAC,CAAC,EAAIA,EAAM,MAC/G,EAIIC,GAAoB,CAAE,EACtBC,GAAkB,SAAyBnH,EAAUoH,EAAa,CAGpE,IAAIC,GAAOD,GAAgB,KAAiC,OAASA,EAAY,WAAa,SAC1FrB,GAAaqB,GAAgB,KAAiC,OAASA,EAAY,YAAcF,GACjGI,EAASpC,GAAe,CAC1B,wBAAyB,GACzB,kBAAmB,GACnB,kBAAmB,GACnB,aAAcoB,GACd,cAAeC,EAChB,EAAEa,CAAW,EACVG,EAAQ,CAGV,WAAY,CAAE,EAiBd,gBAAiB,CAAE,EAOnB,eAAgB,CAAE,EAClB,4BAA6B,KAC7B,wBAAyB,KACzB,OAAQ,GACR,OAAQ,GAGR,uBAAwB,OAExB,eAAgB,MACjB,EACGvB,EAUAwB,EAAY,SAAmBC,EAAuBC,EAAYC,EAAkB,CACtF,OAAOF,GAAyBA,EAAsBC,CAAU,IAAM,OAAYD,EAAsBC,CAAU,EAAIJ,EAAOK,GAAoBD,CAAU,CAC5J,EAYGE,EAAqB,SAA4B7I,EAASkI,EAAO,CACnE,IAAIY,EAAe,OAAQZ,GAAU,KAA2B,OAASA,EAAM,eAAkB,WAAaA,EAAM,aAAc,EAAG,OAIrI,OAAOM,EAAM,gBAAgB,UAAU,SAAUnE,EAAM,CACrD,IAAIsB,EAAYtB,EAAK,UACnB0E,EAAgB1E,EAAK,cACvB,OAAOsB,EAAU,SAAS3F,CAAO,IAIjC8I,GAAiB,KAAkC,OAASA,EAAa,SAASnD,CAAS,IAAMoD,EAAc,KAAK,SAAUxL,EAAM,CAClI,OAAOA,IAASyC,CACxB,CAAO,CACP,CAAK,CACF,EAeGgJ,EAAmB,SAA0BL,EAAY,CAC3D,IAAIM,EAAcV,EAAOI,CAAU,EACnC,GAAI,OAAOM,GAAgB,WAAY,CACrC,QAASC,EAAQ,UAAU,OAAQnB,EAAS,IAAI,MAAMmB,EAAQ,EAAIA,EAAQ,EAAI,CAAC,EAAGC,EAAQ,EAAGA,EAAQD,EAAOC,IAC1GpB,EAAOoB,EAAQ,CAAC,EAAI,UAAUA,CAAK,EAErCF,EAAcA,EAAY,MAAM,OAAQlB,CAAM,CACpD,CAKI,GAJIkB,IAAgB,KAClBA,EAAc,QAGZ,CAACA,EAAa,CAChB,GAAIA,IAAgB,QAAaA,IAAgB,GAC/C,OAAOA,EAIT,MAAM,IAAI,MAAM,IAAI,OAAON,EAAY,8DAA8D,CAAC,CAC5G,CACI,IAAIpL,EAAO0L,EAEX,GAAI,OAAOA,GAAgB,WACzB1L,EAAO+K,EAAI,cAAcW,CAAW,EAChC,CAAC1L,GACH,MAAM,IAAI,MAAM,IAAI,OAAOoL,EAAY,uCAAuC,CAAC,EAGnF,OAAOpL,CACR,EACG6L,EAAsB,UAA+B,CACvD,IAAI7L,EAAOyL,EAAiB,cAAc,EAG1C,GAAIzL,IAAS,GACX,MAAO,GAET,GAAIA,IAAS,QAAa,CAACwI,GAAYxI,EAAMgL,EAAO,eAAe,EAEjE,GAAIM,EAAmBP,EAAI,aAAa,GAAK,EAC3C/K,EAAO+K,EAAI,kBACN,CACL,IAAIe,EAAqBb,EAAM,eAAe,CAAC,EAC3Cc,EAAoBD,GAAsBA,EAAmB,kBAGjE9L,EAAO+L,GAAqBN,EAAiB,eAAe,CACpE,CAEI,GAAI,CAACzL,EACH,MAAM,IAAI,MAAM,8DAA8D,EAEhF,OAAOA,CACR,EACGgM,EAAsB,UAA+B,CA4EvD,GA3EAf,EAAM,gBAAkBA,EAAM,WAAW,IAAI,SAAU7C,EAAW,CAChE,IAAIoD,EAAgBrD,GAASC,EAAW4C,EAAO,eAAe,EAK1DiB,EAAiB5D,GAAUD,EAAW4C,EAAO,eAAe,EAC5De,EAAoBP,EAAc,OAAS,EAAIA,EAAc,CAAC,EAAI,OAClEU,EAAmBV,EAAc,OAAS,EAAIA,EAAcA,EAAc,OAAS,CAAC,EAAI,OACxFW,EAAuBF,EAAe,KAAK,SAAUjM,EAAM,CAC7D,OAAOsI,EAAWtI,CAAI,CAC9B,CAAO,EACGoM,EAAsBH,EAAe,MAAK,EAAG,UAAU,KAAK,SAAUjM,EAAM,CAC9E,OAAOsI,EAAWtI,CAAI,CAC9B,CAAO,EACGqM,EAAqB,CAAC,CAACb,EAAc,KAAK,SAAUxL,EAAM,CAC5D,OAAOqE,EAAYrE,CAAI,EAAI,CACnC,CAAO,EACD,MAAO,CACL,UAAWoI,EACX,cAAeoD,EACf,eAAgBS,EAEhB,mBAAoBI,EAEpB,kBAAmBN,EAEnB,iBAAkBG,EASlB,qBAAsBC,EAEtB,oBAAqBC,EASrB,iBAAkB,SAA0BpM,EAAM,CAChD,IAAIsM,EAAU,UAAU,OAAS,GAAK,UAAU,CAAC,IAAM,OAAY,UAAU,CAAC,EAAI,GAC9EC,EAAUf,EAAc,QAAQxL,CAAI,EACxC,OAAIuM,EAAU,EAORD,EACKL,EAAe,MAAMA,EAAe,QAAQjM,CAAI,EAAI,CAAC,EAAE,KAAK,SAAUqD,EAAI,CAC/E,OAAOiF,EAAWjF,CAAE,CACpC,CAAe,EAEI4I,EAAe,MAAM,EAAGA,EAAe,QAAQjM,CAAI,CAAC,EAAE,QAAO,EAAG,KAAK,SAAUqD,EAAI,CACxF,OAAOiF,EAAWjF,CAAE,CAClC,CAAa,EAEImI,EAAce,GAAWD,EAAU,EAAI,GAAG,CAC3D,CACO,CACP,CAAK,EACDrB,EAAM,eAAiBA,EAAM,gBAAgB,OAAO,SAAUuB,EAAO,CACnE,OAAOA,EAAM,cAAc,OAAS,CAC1C,CAAK,EAGGvB,EAAM,eAAe,QAAU,GAAK,CAACQ,EAAiB,eAAe,EAEvE,MAAM,IAAI,MAAM,qGAAqG,EAUvH,GAAIR,EAAM,gBAAgB,KAAK,SAAUwB,EAAG,CAC1C,OAAOA,EAAE,kBACV,CAAA,GAAKxB,EAAM,gBAAgB,OAAS,EACnC,MAAM,IAAI,MAAM,+KAA+K,CAElM,EAUGyB,EAAmB,SAASA,EAAiBrJ,EAAI,CACnD,IAAIsJ,EAAgBtJ,EAAG,cACvB,GAAKsJ,EAGL,OAAIA,EAAc,YAAcA,EAAc,WAAW,gBAAkB,KAClED,EAAiBC,EAAc,UAAU,EAE3CA,CACR,EACGC,EAAW,SAASA,EAAS5M,EAAM,CACrC,GAAIA,IAAS,IAGTA,IAAS0M,EAAiB,QAAQ,EAGtC,IAAI,CAAC1M,GAAQ,CAACA,EAAK,MAAO,CACxB4M,EAASf,EAAmB,CAAE,EAC9B,MACN,CACI7L,EAAK,MAAM,CACT,cAAe,CAAC,CAACgL,EAAO,aAC9B,CAAK,EAEDC,EAAM,wBAA0BjL,EAC5B6J,GAAkB7J,CAAI,GACxBA,EAAK,OAAQ,EAEhB,EACG6M,EAAqB,SAA4BC,EAAuB,CAC1E,IAAI9M,EAAOyL,EAAiB,iBAAkBqB,CAAqB,EACnE,OAAO9M,IAAcA,IAAS,GAAQ,GAAQ8M,EAC/C,EAaGC,EAAkB,SAAyBC,EAAO,CACpD,IAAIC,EAASD,EAAM,OACjBrC,EAAQqC,EAAM,MACdE,EAAmBF,EAAM,WACzBG,EAAaD,IAAqB,OAAS,GAAQA,EACrDD,EAASA,GAAUvC,EAAgBC,CAAK,EACxCqB,EAAqB,EACrB,IAAIoB,EAAkB,KACtB,GAAInC,EAAM,eAAe,OAAS,EAAG,CAInC,IAAIoC,EAAiB/B,EAAmB2B,EAAQtC,CAAK,EACjD2C,EAAiBD,GAAkB,EAAIpC,EAAM,gBAAgBoC,CAAc,EAAI,OACnF,GAAIA,EAAiB,EAGfF,EAEFC,EAAkBnC,EAAM,eAAeA,EAAM,eAAe,OAAS,CAAC,EAAE,iBAGxEmC,EAAkBnC,EAAM,eAAe,CAAC,EAAE,0BAEnCkC,EAAY,CAIrB,IAAII,EAAoBpD,GAAUc,EAAM,eAAgB,SAAUuC,EAAO,CACvE,IAAIzB,GAAoByB,EAAM,kBAC9B,OAAOP,IAAWlB,EAC5B,CAAS,EAUD,GATIwB,EAAoB,IAAMD,EAAe,YAAcL,GAAUzE,GAAYyE,EAAQjC,EAAO,eAAe,GAAK,CAAC1C,EAAW2E,EAAQjC,EAAO,eAAe,GAAK,CAACsC,EAAe,iBAAiBL,EAAQ,EAAK,KAO/MM,EAAoBF,GAElBE,GAAqB,EAAG,CAI1B,IAAIE,EAAwBF,IAAsB,EAAItC,EAAM,eAAe,OAAS,EAAIsC,EAAoB,EACxGG,EAAmBzC,EAAM,eAAewC,CAAqB,EACjEL,EAAkB/I,EAAY4I,CAAM,GAAK,EAAIS,EAAiB,iBAAmBA,EAAiB,mBAC5G,MAAoB3D,EAAWY,CAAK,IAG1ByC,EAAkBE,EAAe,iBAAiBL,EAAQ,EAAK,EAEzE,KAAa,CAIL,IAAIU,EAAmBxD,GAAUc,EAAM,eAAgB,SAAU2C,EAAO,CACtE,IAAI1B,GAAmB0B,EAAM,iBAC7B,OAAOX,IAAWf,EAC5B,CAAS,EAUD,GATIyB,EAAmB,IAAML,EAAe,YAAcL,GAAUzE,GAAYyE,EAAQjC,EAAO,eAAe,GAAK,CAAC1C,EAAW2E,EAAQjC,EAAO,eAAe,GAAK,CAACsC,EAAe,iBAAiBL,CAAM,KAOvMU,EAAmBN,GAEjBM,GAAoB,EAAG,CAIzB,IAAIE,EAAyBF,IAAqB1C,EAAM,eAAe,OAAS,EAAI,EAAI0C,EAAmB,EACvGG,GAAoB7C,EAAM,eAAe4C,CAAsB,EACnET,EAAkB/I,EAAY4I,CAAM,GAAK,EAAIa,GAAkB,kBAAoBA,GAAkB,oBAC/G,MAAoB/D,EAAWY,CAAK,IAG1ByC,EAAkBE,EAAe,iBAAiBL,CAAM,EAElE,CACA,MAGMG,EAAkB3B,EAAiB,eAAe,EAEpD,OAAO2B,CACR,EAIGW,EAAmB,SAA0BrF,EAAG,CAClD,IAAIuE,EAASvC,EAAgBhC,CAAC,EAC9B,GAAI,EAAA4C,EAAmB2B,EAAQvE,CAAC,GAAK,GAIrC,IAAI4B,EAAeU,EAAO,wBAAyBtC,CAAC,EAAG,CAErDgB,EAAK,WAAW,CAOd,YAAasB,EAAO,uBAC5B,CAAO,EACD,MACN,CAKQV,EAAeU,EAAO,kBAAmBtC,CAAC,GAM9CA,EAAE,eAAgB,EACnB,EAMGsF,EAAe,SAAsBrD,EAAO,CAC9C,IAAIsC,EAASvC,EAAgBC,CAAK,EAC9BsD,EAAkB3C,EAAmB2B,EAAQtC,CAAK,GAAK,EAG3D,GAAIsD,GAAmBhB,aAAkB,SACnCgB,IACFhD,EAAM,wBAA0BgC,OAE7B,CAELtC,EAAM,yBAA0B,EAKhC,IAAIuD,EACAC,EAAsB,GAC1B,GAAIlD,EAAM,wBACR,GAAI5G,EAAY4G,EAAM,uBAAuB,EAAI,EAAG,CAElD,IAAImD,EAAkB9C,EAAmBL,EAAM,uBAAuB,EAKlEO,EAAgBP,EAAM,gBAAgBmD,CAAe,EAAE,cAC3D,GAAI5C,EAAc,OAAS,EAAG,CAE5B,IAAI6C,EAAY7C,EAAc,UAAU,SAAUxL,EAAM,CACtD,OAAOA,IAASiL,EAAM,uBACpC,CAAa,EACGoD,GAAa,IACXrD,EAAO,aAAaC,EAAM,cAAc,EACtCoD,EAAY,EAAI7C,EAAc,SAChC0C,EAAW1C,EAAc6C,EAAY,CAAC,EACtCF,EAAsB,IAKpBE,EAAY,GAAK,IACnBH,EAAW1C,EAAc6C,EAAY,CAAC,EACtCF,EAAsB,IAOxC,CAKA,MAKelD,EAAM,gBAAgB,KAAK,SAAUwB,EAAG,CAC3C,OAAOA,EAAE,cAAc,KAAK,SAAU6B,EAAG,CACvC,OAAOjK,EAAYiK,CAAC,EAAI,CACtC,CAAa,CACb,CAAW,IAICH,EAAsB,SAQ1BA,EAAsB,GAEpBA,IACFD,EAAWnB,EAAgB,CAGzB,OAAQ9B,EAAM,wBACd,WAAYD,EAAO,cAAcC,EAAM,cAAc,CAC/D,CAAS,GAGD2B,EADEsB,GAGOjD,EAAM,yBAA2BY,GAFzB,CAIzB,CACIZ,EAAM,eAAiB,MACxB,EAMGsD,EAAc,SAAqB5D,EAAO,CAC5C,IAAIwC,EAAa,UAAU,OAAS,GAAK,UAAU,CAAC,IAAM,OAAY,UAAU,CAAC,EAAI,GACrFlC,EAAM,eAAiBN,EACvB,IAAIyC,EAAkBL,EAAgB,CACpC,MAAOpC,EACP,WAAYwC,CAClB,CAAK,EACGC,IACErD,EAAWY,CAAK,GAKlBA,EAAM,eAAgB,EAExBiC,EAASQ,CAAe,EAG3B,EAEGoB,GAAW,SAAkB7D,EAAO,CACtC,GAAIb,GAAca,CAAK,GAAKL,EAAeU,EAAO,kBAAmBL,CAAK,IAAM,GAAO,CACrFA,EAAM,eAAgB,EACtBjB,EAAK,WAAY,EACjB,MACN,EACQsB,EAAO,aAAaL,CAAK,GAAKK,EAAO,cAAcL,CAAK,IAC1D4D,EAAY5D,EAAOK,EAAO,cAAcL,CAAK,CAAC,CAEjD,EACG8D,GAAa,SAAoB/F,EAAG,CACtC,IAAIuE,EAASvC,EAAgBhC,CAAC,EAC1B4C,EAAmB2B,EAAQvE,CAAC,GAAK,GAGjC4B,EAAeU,EAAO,wBAAyBtC,CAAC,GAGhD4B,EAAeU,EAAO,kBAAmBtC,CAAC,IAG9CA,EAAE,eAAgB,EAClBA,EAAE,yBAA0B,EAC7B,EAMGgG,GAAe,UAAwB,CACzC,GAAKzD,EAAM,OAKX,OAAAzB,GAAiB,aAAaC,EAAWC,CAAI,EAI7CuB,EAAM,uBAAyBD,EAAO,kBAAoBd,GAAM,UAAY,CAC1E0C,EAASf,EAAmB,CAAE,CACpC,CAAK,EAAIe,EAASf,GAAqB,EACnCd,EAAI,iBAAiB,UAAWiD,EAAc,EAAI,EAClDjD,EAAI,iBAAiB,YAAagD,EAAkB,CAClD,QAAS,GACT,QAAS,EACf,CAAK,EACDhD,EAAI,iBAAiB,aAAcgD,EAAkB,CACnD,QAAS,GACT,QAAS,EACf,CAAK,EACDhD,EAAI,iBAAiB,QAAS0D,GAAY,CACxC,QAAS,GACT,QAAS,EACf,CAAK,EACD1D,EAAI,iBAAiB,UAAWyD,GAAU,CACxC,QAAS,GACT,QAAS,EACf,CAAK,EACM9E,CACR,EACGiF,GAAkB,UAA2B,CAC/C,GAAK1D,EAAM,OAGX,OAAAF,EAAI,oBAAoB,UAAWiD,EAAc,EAAI,EACrDjD,EAAI,oBAAoB,YAAagD,EAAkB,EAAI,EAC3DhD,EAAI,oBAAoB,aAAcgD,EAAkB,EAAI,EAC5DhD,EAAI,oBAAoB,QAAS0D,GAAY,EAAI,EACjD1D,EAAI,oBAAoB,UAAWyD,GAAU,EAAI,EAC1C9E,CACR,EAMGkF,GAAkB,SAAyBC,EAAW,CACxD,IAAIC,EAAuBD,EAAU,KAAK,SAAUE,EAAU,CAC5D,IAAIC,EAAe,MAAM,KAAKD,EAAS,YAAY,EACnD,OAAOC,EAAa,KAAK,SAAUhP,EAAM,CACvC,OAAOA,IAASiL,EAAM,uBAC9B,CAAO,CACP,CAAK,EAIG6D,GACFlC,EAASf,EAAmB,CAAE,CAEjC,EAIGoD,EAAmB,OAAO,OAAW,KAAe,qBAAsB,OAAS,IAAI,iBAAiBL,EAAe,EAAI,OAC3HM,EAAsB,UAA+B,CAClDD,IAGLA,EAAiB,WAAY,EACzBhE,EAAM,QAAU,CAACA,EAAM,QACzBA,EAAM,WAAW,IAAI,SAAU7C,EAAW,CACxC6G,EAAiB,QAAQ7G,EAAW,CAClC,QAAS,GACT,UAAW,EACrB,CAAS,CACT,CAAO,EAEJ,EAMD,OAAAsB,EAAO,CACL,IAAI,QAAS,CACX,OAAOuB,EAAM,MACd,EACD,IAAI,QAAS,CACX,OAAOA,EAAM,MACd,EACD,SAAU,SAAkBkE,EAAiB,CAC3C,GAAIlE,EAAM,OACR,OAAO,KAET,IAAImE,EAAalE,EAAUiE,EAAiB,YAAY,EACpDE,EAAiBnE,EAAUiE,EAAiB,gBAAgB,EAC5DG,EAAoBpE,EAAUiE,EAAiB,mBAAmB,EACjEG,GACHtD,EAAqB,EAEvBf,EAAM,OAAS,GACfA,EAAM,OAAS,GACfA,EAAM,4BAA8BF,EAAI,cACxCqE,GAAe,MAAiCA,EAAY,EAC5D,IAAIG,EAAmB,UAA4B,CAC7CD,GACFtD,EAAqB,EAEvB0C,GAAc,EACdQ,EAAqB,EACrBG,GAAmB,MAAqCA,EAAgB,CACzE,EACD,OAAIC,GACFA,EAAkBrE,EAAM,WAAW,OAAQ,CAAA,EAAE,KAAKsE,EAAkBA,CAAgB,EAC7E,OAETA,EAAkB,EACX,KACR,EACD,WAAY,SAAoBC,EAAmB,CACjD,GAAI,CAACvE,EAAM,OACT,OAAO,KAET,IAAItH,EAAUiF,GAAe,CAC3B,aAAcoC,EAAO,aACrB,iBAAkBA,EAAO,iBACzB,oBAAqBA,EAAO,mBAC7B,EAAEwE,CAAiB,EACpB,aAAavE,EAAM,sBAAsB,EACzCA,EAAM,uBAAyB,OAC/B0D,GAAiB,EACjB1D,EAAM,OAAS,GACfA,EAAM,OAAS,GACfiE,EAAqB,EACrB1F,GAAiB,eAAeC,EAAWC,CAAI,EAC/C,IAAI+F,EAAevE,EAAUvH,EAAS,cAAc,EAChD+L,EAAmBxE,EAAUvH,EAAS,kBAAkB,EACxDgM,EAAsBzE,EAAUvH,EAAS,qBAAqB,EAC9DiM,EAAc1E,EAAUvH,EAAS,cAAe,yBAAyB,EAC7E8L,GAAiB,MAAmCA,EAAc,EAClE,IAAII,EAAqB,UAA8B,CACrD3F,GAAM,UAAY,CACZ0F,GACFhD,EAASC,EAAmB5B,EAAM,2BAA2B,CAAC,EAEhEyE,GAAqB,MAAuCA,EAAkB,CACxF,CAAS,CACF,EACD,OAAIE,GAAeD,GACjBA,EAAoB9C,EAAmB5B,EAAM,2BAA2B,CAAC,EAAE,KAAK4E,EAAoBA,CAAkB,EAC/G,OAETA,EAAoB,EACb,KACR,EACD,MAAO,SAAeC,EAAc,CAClC,GAAI7E,EAAM,QAAU,CAACA,EAAM,OACzB,OAAO,KAET,IAAI8E,EAAU7E,EAAU4E,EAAc,SAAS,EAC3CE,EAAc9E,EAAU4E,EAAc,aAAa,EACvD,OAAA7E,EAAM,OAAS,GACf8E,GAAY,MAA8BA,EAAS,EACnDpB,GAAiB,EACjBO,EAAqB,EACrBc,GAAgB,MAAkCA,EAAa,EACxD,IACR,EACD,QAAS,SAAiBC,EAAgB,CACxC,GAAI,CAAChF,EAAM,QAAU,CAACA,EAAM,OAC1B,OAAO,KAET,IAAIiF,EAAYhF,EAAU+E,EAAgB,WAAW,EACjDE,EAAgBjF,EAAU+E,EAAgB,eAAe,EAC7D,OAAAhF,EAAM,OAAS,GACfiF,GAAc,MAAgCA,EAAW,EACzDlE,EAAqB,EACrB0C,GAAc,EACdQ,EAAqB,EACrBiB,GAAkB,MAAoCA,EAAe,EAC9D,IACR,EACD,wBAAyB,SAAiCC,EAAmB,CAC3E,IAAIC,EAAkB,CAAA,EAAG,OAAOD,CAAiB,EAAE,OAAO,OAAO,EACjE,OAAAnF,EAAM,WAAaoF,EAAgB,IAAI,SAAU5N,EAAS,CACxD,OAAO,OAAOA,GAAY,SAAWsI,EAAI,cAActI,CAAO,EAAIA,CAC1E,CAAO,EACGwI,EAAM,QACRe,EAAqB,EAEvBkD,EAAqB,EACd,IACb,CACG,EAGDxF,EAAK,wBAAwBhG,CAAQ,EAC9BgG,CACT,EC91BO,SAAS4G,GACdrD,EACAtJ,EAA+B,GACX,CAChB,IAAA+F,EAEJ,KAAM,CAAE,UAAA6G,EAAW,GAAGC,CAAA,EAAqB7M,EACrC8M,EAAW5Q,EAAI,EAAK,EACpB6Q,EAAW7Q,EAAI,EAAK,EAEpB8Q,EAAYC,GAA2BlH,GAAQA,EAAK,SAASkH,CAAI,EACjEC,EAAcD,GAA6BlH,GAAQA,EAAK,WAAWkH,CAAI,EAEvEE,EAAQ,IAAM,CACdpH,IACFA,EAAK,MAAM,EACXgH,EAAS,MAAQ,GAErB,EAEMK,EAAU,IAAM,CAChBrH,IACFA,EAAK,QAAQ,EACbgH,EAAS,MAAQ,GAErB,EAEMM,EAAcjR,EAClB,IAAMkR,GAAahE,CAAM,EACxB5J,GAAO,CACDA,IAILqG,EAAOmB,GAAgBxH,EAAI,CACzB,GAAGmN,EACH,YAAa,CACXC,EAAS,MAAQ,GAGb9M,EAAQ,YACVA,EAAQ,WAAW,CAEvB,EACA,cAAe,CACb8M,EAAS,MAAQ,GAGb9M,EAAQ,cACVA,EAAQ,aAAa,CACvB,CACF,CACD,EAGG4M,GACOI,EAAA,EAEb,EACA,CAAE,MAAO,MAAO,CAClB,EAGA,OAAAO,GAAkB,IAAM,CACVF,EAAA,CAAA,CACb,EAEM,CACL,SAAAP,EACA,SAAAC,EACA,SAAAC,EACA,WAAAE,EACA,MAAAC,EACA,QAAAC,CACF,CACF,CCvIO,MAAMI,GACX,gOAcWC,GAAiB,CAAC,CAC7B,UAAAC,EACA,WAAAvQ,EACA,mBAAAwQ,EACA,aAAAC,EACA,sBAAAC,EACA,uBAAAC,CACF,IAAa,CACX,IAAIC,EAAoB,IAAM,CAE9B,EACIzQ,EAAsB,IAAM,CAEhC,EACIyI,EACE,MAAAiI,EAAoB9R,EAAwB,IAAI,EAChD+R,EAAoBhR,EACxB,IAAM6Q,EAAuB,OAASE,EAAkB,KAC1D,EACIJ,EAAa,QACf7H,EAAO4G,GAAae,EAAW,CAG7B,aAAc,GAEd,kBAAmB,GACnB,wBAAyB,IAAMG,EAAsB,MAKrD,cAAe,IAAMI,EAAkB,KAAA,CACxC,EAEDF,EAAoBhI,EAAK,SACzBzI,EAAsByI,EAAK,YAG7B,MAAMsH,EAAcjR,EAClB,CACE,IAAMkR,GAAaI,CAAS,EAC5BvQ,EACAwQ,EACAG,CACF,EACA,CAAC,CAACI,EAAQxQ,EAASyQ,EAAiBC,CAAmB,EAAGzQ,EAAGC,IAAc,CACrE,GAAA,CAACsQ,GAAU,CAACxQ,EAAS,CACnBqI,GAAA,MAAAA,EAAM,UACYzI,EAAA,EAEtB,MAAA,CAEG6Q,IAILE,GAAS,IAAM,CACP,MAAAC,EAAW,IAAMC,GAAeL,CAAM,EAE5C,GAAIE,EACFI,EAAYJ,EAAqB,CAC/B,cAAe,GACf,SAAAE,CAAA,CACD,MACI,CACC,MAAA9J,EAAWiK,GAAmBP,EAAQ,EAAI,EAE5C1J,GACFgK,EAAYhK,EAAU,CAAE,cAAe,GAAM,SAAA8J,EAAU,EACvDN,EAAkB,MAAQxJ,IAE1BgK,EAAYN,EAAQ,CAAE,cAAe,GAAM,SAAAI,EAAU,EACrDN,EAAkB,MAAQE,GACtBA,EAAO,WAAa,QAAaA,EAAO,SAAW,IACrDQ,GAAKlB,EAAyB,EAElC,CAEgBO,EAAA,CAAA,CACnB,EAEDnQ,EAAU,IAAM,CACMN,EAAA,CAAA,CACrB,EAAA,CAEL,EACA,OAAAiQ,GAAkB,IAAM,CACFjQ,EAAA,EACR+P,EAAA,CAAA,CACb,EACM,CAAE,oBAAA/P,CAAoB,CAC/B,EC1GA,SAASqR,GAA4BC,EAAsB,CACzD,GAAI,CAACA,EACI,MAAA,GAGH,MAAA5F,EAAgBD,GAAiB6F,CAAO,EAK1C,MAHA,CAAC5F,GAGD6F,GAASD,EAAS5F,CAAa,EAC1B,GAELrE,GAAWqE,CAAa,EACnB,GAGFA,EAAc,aAAa,cAAc,IAAM,MACxD,CAEO,MAAM8F,GAAiB,CAAC,CAC7B,UAAApB,EACA,kBAAAqB,EACA,WAAA5R,EACA,mBAAA6R,CACF,IAAa,CACX5S,EACE,CAACsR,EAAWqB,EAAmB5R,EAAY6R,CAAkB,EAE7D,CACE,CAACd,EAAQe,EAAgBvR,EAASwR,CAAe,EACjD,CAAK,CAAA,CAAAC,CAAe,IACjB,CAEDD,GAAmB,CAACxR,GAAWA,IAAYyR,IAMzC,CAACjB,GAAUS,GAA4BT,CAAM,GAI7Ce,GACFT,EAAYS,CAAc,EAC5B,CAEJ,CACF,EChCaG,GAA0B,CAAC,CACtC,aAAAC,EACA,WAAAC,EACA,UAAAC,EACA,SAAAC,EACA,gBAAAC,CACF,IAAa,CACX,MAAMC,EAAgBxT,EAAI,EAE1BE,EACE,CAACiT,EAAcC,EAAYG,GAAmBvT,EAAI,EAAK,CAAC,EACxD,CAAC,CAACuI,EAAWkL,EAASC,CAAY,EAAGjS,EAAGkS,IAAiB,CAMvD,GALIH,EAAc,OAAS,CAACE,GACTpT,EAAYiI,CAAS,EAC7B,oBAAoB8K,EAAWG,EAAc,KAAK,EAGzD,CAACE,EACH,OAGYF,EAAA,MAAS1I,GAAiB,CACtC,GAAI,CAACwI,GAAY,CAAC/K,GAAa,EAAEuC,EAAM,kBAAkB,SACvD,OAEF,MAAMsC,EAAStC,EAAM,OAKhB8I,GAAaxG,CAAM,IAIpBuF,GAASpK,EAAW6E,CAAM,GAI1BqG,GAAWd,GAASc,EAASrG,CAAM,GAKnC5M,GAAe,EAAE,aAAa,QAAU+H,EAAU,IAItD+K,EAASxI,CAAK,EAChB,EAEM,MAAAzK,EAAWC,EAAYiI,CAAS,EAC7BlI,EAAA,iBAAiBgT,EAAWG,EAAc,KAAK,EACxDG,EAAa,IAAM,CACbH,EAAc,QACPnT,EAAA,oBAAoBgT,EAAWG,EAAc,KAAK,EAC3DA,EAAc,MAAQ,OACxB,CACD,CACH,EACA,CAAE,UAAW,EAAK,CACpB,CACF,EC7EA,SAASK,GAAsB,CAC7B,UAAArC,EACA,WAAAvQ,EACA,sBAAA0Q,CACF,EAGqB,CACnB,MAAMmC,EAAqB9T,EAAI,EAE/B,OAAAE,EACE,CAACe,EAAY0Q,EAAuBH,CAAS,EAC7C,CAAC,CAAChQ,EAASuS,EAAoBrB,CAAO,EAAGjR,EAAGkS,IAAiB,CACvD,GAAA,EAAEnS,GAAWuS,GACf,OAGI,MAAA1T,EAAWC,EAAYoS,CAAO,EAC9BsB,EAAelJ,GAClBgJ,EAAmB,MAAQhJ,EAAM,OAC3BzK,EAAA,iBAAiB,YAAa2T,CAAW,EAClDL,EAAa,IAAM,CACRtT,EAAA,oBAAoB,YAAa2T,CAAW,CAAA,CACtD,CACH,EACA,CAAE,UAAW,EAAK,CACpB,EAEOF,CACT,CAEO,SAASG,GAAsB,CACpC,UAAAzC,EACA,WAAAvQ,EACA,sBAAA0Q,EACA,kBAAAkB,EACA,QAAAqB,CACF,EAAU,CACR,MAAMJ,EAAqBD,GAAsB,CAC/C,UAAArC,EACA,WAAAvQ,EACA,sBAAA0Q,CAAA,CACD,EAEK4B,EAAkBxS,EACtB,IAAME,EAAW,OAAS0Q,EAAsB,KAClD,EAEwBuB,GAAA,CACtB,aAAc1B,EACd,WAAYqB,EACZ,UAAW,QACX,SAAW/H,GAAiB,CACtBgJ,EAAmB,QAAUhJ,EAAM,QAKrCoJ,EAAQ,MAAM,CAElB,EACA,gBAAAX,CAAA,CACD,EAEuBL,GAAA,CACtB,aAAc1B,EACd,WAAYqB,EACZ,UAAW,UACX,SAAW/H,GAAiB,CACpB,MAAAzK,EAAWC,EAAYkR,EAAU,KAAK,EAExC1G,EAAM,SAAWzK,GACnB6T,EAAQ,MAAM,CAElB,EACA,gBAAAX,CAAA,CACD,CACH,CCjFA,SAASY,GACPvR,EACoB,CACpB,GAAI,CAACA,EACI,MAAA,GAET,MAAMwR,EAAmBxR,EAClB,MAAA,CAAC,EACNwR,EAAiB,SACjBA,EAAiB,UAAY,QAC7BA,IAAqB9T,EAAY8T,CAAgB,EAAE,KAEvD,CAEA,SAASC,IAA4C,CAC7C,MAAAC,EAAatU,EAAI,CAAC,EAIjB,MAAA,CAACsU,EAFc,IAAOA,EAAW,OAAS,CAEhB,CACnC,CAEO,SAASC,GAAe,CAAE,UAAA/C,EAAW,WAAAvQ,GAAqB,CAC/D,KAAM,CAACqT,EAAYE,CAAa,EAAIH,GAAe,EAEnD,OAAAnU,EAAM,CAACoU,CAAU,EAAG,CAAC,CAACG,CAAO,IAAM,OAC5BxT,EAAW,OAGXwT,IAGAN,GAAgBtH,GAAiB2E,EAAU,KAAK,CAAC,IACpDkD,EAAAlD,EAAU,QAAV,MAAAkD,EAAiB,QACnB,CACD,EAEO5J,GAAsB,CAC5B,GAAI7J,EAAW,MACb,OAEF,MAAM0T,EAAoB7J,EAAM,cAC3BqJ,GAAgBQ,CAA4B,GACjCH,EAAA,CAElB,CACF,CCpCO,SAASI,GAAiB,CAC/B,KAAAzT,EACA,MAAA0T,EACA,WAAA5T,EACA,QAAAiT,EACA,cAAAY,EACA,eAAgB,CAAE,UAAAtD,EAAW,uBAAAI,EAAwB,kBAAAiB,CAAkB,CACzE,EAAU,CACJ,CAACgC,EAAM,YAAY,GAAK,CAACA,EAAM,iBAAiB,GAClDrC,GAAK,oEAAoE,EAG3E,MAAMf,GAAqBqD,GAAA,YAAAA,EAAe,qBAAsB9U,EAAI,EAAI,EAClE0R,GAAeoD,GAAA,YAAAA,EAAe,eAAgB9U,EAAI,EAAI,EACtD8S,GAAqBgC,GAAA,YAAAA,EAAe,qBAAsB9U,EAAI,EAAI,EAClE2R,GACJmD,GAAA,YAAAA,EAAe,wBAAyB9U,EAAI,EAAI,EAC5C+U,GAAeD,GAAA,YAAAA,EAAe,eAAgB9U,EAAI,EAAI,EAEtDgV,EAAcT,GAAe,CACjC,UAAA/C,EACA,WAAAvQ,CAAA,CACD,EACK,CAAE,oBAAAG,CAAoB,EAAImQ,GAAe,CAC7C,UAAAC,EACA,WAAAvQ,EACA,uBAAA2Q,EAEA,mBAAAH,EACA,aAAAC,EACA,sBAAAC,CAAA,CACD,EACc,OAAAiB,GAAA,CACb,UAAApB,EACA,kBAAAqB,EACA,WAAA5R,EACA,mBAAA6R,CAAA,CACD,EACqBmB,GAAA,CACpB,UAAAzC,EACA,kBAAAqB,EAEA,sBAAAlB,EACA,QAAAuC,EACA,WAAAjT,CAAA,CACD,EAwBM,CAAE,UAtBU6J,GAAyB,CAC1C3J,EAAK,UAAW2J,CAAK,EAEjB,CAAAA,EAAM,kBAGNA,EAAM,MAAQ,UAGbiK,EAAa,QAIlBjK,EAAM,gBAAgB,EACtBoJ,EAAQ,MAAM,EAChB,EAOoB,OALJpJ,GAAsB,CACpC3J,EAAK,OAAQ2J,CAAK,EAClBkK,EAAYlK,CAAK,CACnB,EAE4B,oBAAA1J,CAAoB,CAClD","x_google_ignoreList":[3,4]}