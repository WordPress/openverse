{"version":3,"file":"DZP0BHtF.js","sources":["../../src/utils/reakit-utils/dom.ts","../../src/utils/reakit-utils/focus.ts"],"sourcesContent":["/**\n * Returns `element.ownerDocument || document`.\n */\nexport function getDocument(node?: Node | null): Document {\n  return node ? node.ownerDocument || (node as Document) : document\n}\n\n/**\n * Returns `element.ownerDocument.activeElement`.\n */\nexport function getActiveElement(\n  node?: Node | null,\n  activeDescendant = false\n): HTMLElement | null {\n  const { activeElement } = getDocument(node)\n  if (!activeElement?.nodeName) {\n    // In IE11, activeElement might be an empty object if we're interacting\n    // with elements inside of an iframe.\n    return null\n  }\n  if (isFrame(activeElement) && activeElement.contentDocument) {\n    return getActiveElement(\n      activeElement.contentDocument.body,\n      activeDescendant\n    )\n  }\n  if (activeDescendant) {\n    const id = activeElement.getAttribute(\"aria-activedescendant\")\n    if (id) {\n      const element = getDocument(activeElement).getElementById(id)\n      if (element) {\n        return element\n      }\n    }\n  }\n  return activeElement as HTMLElement | null\n}\n\n/**\n * Similar to `Element.prototype.contains`, but a little bit faster when\n * `element` is the same as `child`.\n * @example\n * contains(document.getElementById(\"parent\"), document.getElementById(\"child\"));\n */\nexport function contains(parent: Node, child: Node): boolean {\n  return parent === child || parent.contains(child)\n}\n\n/**\n * Checks whether `element` is a frame element.\n */\nexport function isFrame(element: Element): element is HTMLIFrameElement {\n  return element.tagName === \"IFRAME\"\n}\n\n/**\n * Checks if the element is visible or not.\n */\nexport function isVisible(element: Element) {\n  const htmlElement = element as HTMLElement\n  return (\n    htmlElement.offsetWidth > 0 ||\n    htmlElement.offsetHeight > 0 ||\n    element.getClientRects().length > 0\n  )\n}\n\nexport function isInDocument(target: Element) {\n  const document = getDocument(target)\n  if (target.tagName === \"HTML\") {\n    return true\n  }\n  return contains(document.body, target)\n}\n","import { contains, getActiveElement, isFrame, isVisible } from \"./dom\"\n\nconst selector =\n  \"input:not([type='hidden']):not([disabled]), select:not([disabled]), \" +\n  \"textarea:not([disabled]), a[href], button:not([disabled]), [tabindex], \" +\n  \"iframe, object, embed, area[href], audio[controls], video[controls], \" +\n  \"[contenteditable]:not([contenteditable='false'])\"\n\nfunction hasNegativeTabIndex(element: Element) {\n  const tabIndex = parseInt(element.getAttribute(\"tabindex\") || \"0\", 10)\n  return tabIndex < 0\n}\n\n/**\n * Checks whether `element` is focusable or not.\n * @example\n * isFocusable(document.querySelector(\"input\")); // true\n * isFocusable(document.querySelector(\"input[tabindex='-1']\")); // true\n * isFocusable(document.querySelector(\"input[hidden]\")); // false\n * isFocusable(document.querySelector(\"input:disabled\")); // false\n */\nexport function isFocusable(element: Element): element is HTMLElement {\n  return element.matches(selector) && isVisible(element)\n}\n\n/**\n * Checks whether `element` is tabbable or not.\n * @example\n * isTabbable(document.querySelector(\"input\")); // true\n * isTabbable(document.querySelector(\"input[tabindex='-1']\")); // false\n * isTabbable(document.querySelector(\"input[hidden]\")); // false\n * isTabbable(document.querySelector(\"input:disabled\")); // false\n */\nexport function isTabbableElement(element: Element): element is HTMLElement {\n  return isFocusable(element) && !hasNegativeTabIndex(element)\n}\n\nexport function isTabbable(element: Element): boolean {\n  return isFocusable(element) && !hasNegativeTabIndex(element)\n}\n\n/**\n * Returns all the focusable elements in `container`.\n */\nexport function getAllFocusableIn(\n  container: HTMLElement,\n  includeContainer?: boolean\n) {\n  const elements = Array.from(container.querySelectorAll<HTMLElement>(selector))\n  if (includeContainer) {\n    elements.unshift(container)\n  }\n\n  const focusableElements = elements.filter(isFocusable)\n\n  focusableElements.forEach((element, i) => {\n    if (isFrame(element) && element.contentDocument) {\n      const frameBody = element.contentDocument.body\n      focusableElements.splice(i, 1, ...getAllFocusableIn(frameBody))\n    }\n  })\n\n  return focusableElements\n}\n\n/**\n * Returns all the tabbable elements in `container`, including the container\n * itself.\n */\nexport function getAllTabbableIn(\n  container: HTMLElement,\n  includeContainer?: boolean,\n  fallbackToFocusable?: boolean\n) {\n  const elements = Array.from(container.querySelectorAll<HTMLElement>(selector))\n\n  const tabbableElements = elements.filter(isTabbableElement)\n\n  if (includeContainer && isTabbableElement(container)) {\n    tabbableElements.unshift(container)\n  }\n\n  tabbableElements.forEach((element, i) => {\n    if (isFrame(element) && element.contentDocument) {\n      const frameBody = element.contentDocument.body\n      const allFrameTabbable = getAllTabbableIn(\n        frameBody,\n        false,\n        fallbackToFocusable\n      )\n      tabbableElements.splice(i, 1, ...allFrameTabbable)\n    }\n  })\n\n  if (!tabbableElements.length && fallbackToFocusable) {\n    return elements\n  }\n  return tabbableElements\n}\n\n/**\n * Returns the first tabbable element in `container`, including the container\n * itself if it's tabbable.\n */\nexport function getFirstTabbableIn(\n  container: HTMLElement,\n  includeContainer?: boolean,\n  fallbackToFocusable?: boolean\n) {\n  const [first] = getAllTabbableIn(\n    container,\n    includeContainer,\n    fallbackToFocusable\n  )\n\n  return first || null\n}\n\n/**\n * Checks if `element` has focus. Elements that are referenced by\n * `aria-activedescendant` are also considered.\n * @example\n * hasFocus(document.getElementById(\"id\"));\n */\nexport function hasFocus(element: Element) {\n  const activeElement = getActiveElement(element)\n  if (!activeElement) {\n    return false\n  }\n  if (activeElement === element) {\n    return true\n  }\n  const activeDescendant = activeElement.getAttribute(\"aria-activedescendant\")\n  if (!activeDescendant) {\n    return false\n  }\n  return activeDescendant === element.id\n}\n\n/**\n * Checks if `element` has focus within. Elements that are referenced by\n * `aria-activedescendant` are also considered.\n * @example\n * hasFocusWithin(document.getElementById(\"id\"));\n */\nexport function hasFocusWithin(element: Node | Element) {\n  const activeElement = getActiveElement(element)\n  if (!activeElement) {\n    return false\n  }\n  if (contains(element, activeElement)) {\n    return true\n  }\n  const activeDescendant = activeElement.getAttribute(\"aria-activedescendant\")\n  if (!activeDescendant) {\n    return false\n  }\n  if (!(\"id\" in element)) {\n    return false\n  }\n  if (activeDescendant === element.id) {\n    return true\n  }\n  return !!element.querySelector(`#${CSS.escape(activeDescendant)}`)\n}\n\n/**\n * Ensures `element` will receive focus if it's not already.\n * @example\n * ensureFocus(document.activeElement); // does nothing\n *\n * const element = document.querySelector(\"input\");\n *\n * ensureFocus(element); // focuses element\n * ensureFocus(element, \\{ preventScroll: true \\}); // focuses element preventing scroll jump\n *\n * function isActive(el) \\{\n *   return el.dataset.active === \"true\";\n * \\}\n *\n * ensureFocus(document.querySelector(\"[data-active='true']\"), \\{ isActive \\}); // does nothing\n *\n * @returns \\{number\\} `requestAnimationFrame` call ID so it can be passed to `cancelAnimationFrame` if needed.\n */\nexport function ensureFocus(\n  el: Element,\n  { preventScroll, isActive = hasFocus }: EnsureFocusOptions = {}\n) {\n  const element = el as HTMLElement\n  // TODO: Try to use queueMicrotask before requestAnimationFrame and dispatch\n  // focus events if the element is not focusable?\n  if (isActive(element)) {\n    return -1\n  }\n  element.focus({ preventScroll })\n  if (isActive(element)) {\n    return -1\n  }\n  return requestAnimationFrame(() => {\n    if (isActive(element)) {\n      return\n    }\n    element.focus({ preventScroll })\n  })\n}\n\ntype EnsureFocusOptions = FocusOptions & {\n  isActive?: typeof hasFocus\n}\n"],"names":["getDocument","node","getActiveElement","activeDescendant","activeElement","isFrame","id","element","contains","parent","child","isVisible","htmlElement","isInDocument","target","document","selector","hasNegativeTabIndex","isFocusable","isTabbableElement","isTabbable","getAllTabbableIn","container","includeContainer","fallbackToFocusable","elements","tabbableElements","i","frameBody","allFrameTabbable","getFirstTabbableIn","first","hasFocus","hasFocusWithin","ensureFocus","el","preventScroll","isActive"],"mappings":"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"}