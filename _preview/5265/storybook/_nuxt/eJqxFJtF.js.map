{"version":3,"file":"eJqxFJtF.js","sources":["../../shared/utils/load-script.ts","../../src/components/VSketchFabViewer.vue","../../src/pages/image/[id]/index.vue"],"sourcesContent":["/**\n * Dynamically injects a `<script>` tag into the page with the given `src`\n * attribute.\n *\n * @param url - the URL of the script to load\n * @returns the `load` event emitted by the script tag upon successful load\n */\nexport const loadScript = (url = \"\"): Promise<Event> => {\n  return new Promise((resolve, reject) => {\n    if (typeof document === \"undefined\") {\n      reject()\n    }\n\n    const el = document.createElement(\"script\")\n    el.src = url\n    el.defer = true\n    el.addEventListener(\"load\", resolve)\n    el.addEventListener(\"error\", reject)\n    document.head.appendChild(el)\n  })\n}\n","<script setup lang=\"ts\">\nimport { useI18n, useNuxtApp } from \"#imports\"\nimport { ref, onMounted } from \"vue\"\n\nimport { loadScript } from \"#shared/utils/load-script\"\n\nconst sketchfabUrl =\n  \"https://static.sketchfab.com/api/sketchfab-viewer-1.10.1.js\"\n\ninterface SketchfabConfig {\n  error(e: unknown): void\n}\n\ndeclare global {\n  interface Window {\n    Sketchfab?: new (node: Element) => {\n      init(uid: string, config: SketchfabConfig): void\n    }\n  }\n}\n\nconst props = defineProps<{ uid: string }>()\n\nconst emit = defineEmits<{ failure: [] }>()\n\nconst { t } = useI18n({ useScope: \"global\" })\nconst label = t(\"sketchfabIframeTitle\", { sketchfab: \"Sketchfab\" })\nconst node = ref<Element | undefined>()\nconst { $captureException, $captureMessage } = useNuxtApp()\n\nconst initSketchfab = async () => {\n  await loadScript(sketchfabUrl)\n  if (typeof window.Sketchfab === \"undefined\") {\n    $captureMessage(\"Unable to find window.Sketchfab after loading\")\n    return\n  }\n\n  if (!node.value) {\n    // This is impossible as far as I can tell as the\n    // function is only called in `onMounted`\n    return\n  }\n\n  const sf = new window.Sketchfab(node.value)\n  sf.init(props.uid, {\n    error: (e: unknown) => {\n      $captureException(e)\n      emit(\"failure\")\n    },\n  })\n}\n\nonMounted(() => {\n  initSketchfab()\n})\n</script>\n\n<template>\n  <div class=\"block aspect-[2/1]\">\n    <iframe\n      id=\"sketchfab-iframe\"\n      ref=\"node\"\n      src=\"\"\n      sandbox=\"allow-scripts allow-same-origin allow-popups allow-forms\"\n      :title=\"label\"\n      :aria-label=\"label\"\n      allow=\"autoplay; fullscreen; vr\"\n      :autoplay=\"true\"\n      class=\"h-full w-full\"\n    />\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport {\n  definePageMeta,\n  showError,\n  useAsyncData,\n  useHead,\n  useNuxtApp,\n  useRoute,\n} from \"#imports\"\nimport { computed, ref, watch } from \"vue\"\n\nimport axios from \"axios\"\n\nimport { IMAGE } from \"#shared/constants/media\"\nimport { skipToContentTargetId } from \"#shared/constants/window\"\nimport { firstParam, validateUUID } from \"#shared/utils/query-utils\"\nimport { handledClientSide } from \"#shared/utils/errors\"\nimport type { ImageDetail } from \"#shared/types/media\"\nimport singleResultMiddleware from \"~/middleware/single-result\"\nimport { useSingleResultStore } from \"~/stores/media/single-result\"\nimport { useAnalytics } from \"~/composables/use-analytics\"\nimport { useSensitiveMedia } from \"~/composables/use-sensitive-media\"\nimport { useSingleResultPageMeta } from \"~/composables/use-single-result-page-meta\"\nimport { usePageRobotsRule } from \"~/composables/use-page-robots-rule\"\nimport { useRouteResultParams } from \"~/composables/use-route-result-params\"\n\nimport VBone from \"~/components/VSkeleton/VBone.vue\"\nimport VMediaReuse from \"~/components/VMediaInfo/VMediaReuse.vue\"\nimport VRelatedMedia from \"~/components/VMediaInfo/VRelatedMedia.vue\"\nimport VSketchFabViewer from \"~/components/VSketchFabViewer.vue\"\nimport VSafetyWall from \"~/components/VSafetyWall/VSafetyWall.vue\"\nimport VSingleResultControls from \"~/components/VSingleResultControls.vue\"\nimport VMediaDetails from \"~/components/VMediaInfo/VMediaDetails.vue\"\nimport VGetMediaButton from \"~/components/VMediaInfo/VGetMediaButton.vue\"\nimport VMediaInfo from \"~/components/VMediaInfo/VMediaInfo.vue\"\nimport VErrorSection from \"~/components/VErrorSection/VErrorSection.vue\"\n\nimport errorImage from \"~/assets/image_not_available_placeholder.png\"\n\ndefineOptions({\n  name: \"ImageDetailPage\",\n})\n\ndefinePageMeta({\n  layout: \"content-layout\",\n  middleware: singleResultMiddleware,\n})\n\nusePageRobotsRule(\"single-result\")\n\nconst singleResultStore = useSingleResultStore()\n\nconst nuxtApp = useNuxtApp()\n\nconst route = useRoute()\nconst mediaId = computed(() => firstParam(route?.params.id))\n\nif (!mediaId.value || !validateUUID(mediaId.value)) {\n  showError({\n    statusCode: 404,\n    message: `Invalid image id: \"${mediaId.value}\" on ${route?.fullPath}.`,\n    fatal: true,\n  })\n}\n\nconst image = ref<ImageDetail | null>(\n  singleResultStore.image?.id &&\n    mediaId.value &&\n    singleResultStore.image.id === mediaId.value\n    ? singleResultStore.image\n    : null\n)\nconst fetchingError = computed(() => singleResultStore.fetchState.fetchingError)\nconst isLoadingOnClient = computed(\n  () => !(import.meta.server || nuxtApp.isHydrating)\n)\n\n/**\n * To make sure that image is loaded fast, we `src` to `image.thumbnail`,\n * and replace it with the provider image once the thumbnail is loaded.\n */\nconst imageSrc = ref(\n  isLoadingOnClient.value ? image.value?.thumbnail : image.value?.url\n)\n\n/**\n * On the server and when hydrating the server-rendered page,\n * we directly load the main image, without loading the thumbnail first.\n * This is only `true` on the client navigation, where loading the thumbnail first\n * improves the perceived performance.\n */\nconst isLoadingThumbnail = ref(!(import.meta.server || nuxtApp.isHydrating))\n\nconst showLoadingState = computed(() => {\n  if (sketchFabUid.value) {\n    return false\n  }\n  return isLoadingThumbnail.value\n})\n\nconst { sendCustomEvent } = useAnalytics()\n\nconst { resultParams } = useRouteResultParams()\n\nconst handleRightClick = () => {\n  sendCustomEvent(\"RIGHT_CLICK_IMAGE\", resultParams.value)\n}\n\nconst { reveal, isHidden } = useSensitiveMedia(image.value)\n\nconst { pageTitle, detailPageMeta } = useSingleResultPageMeta(image)\n\nuseHead(() => ({\n  ...detailPageMeta,\n  title: pageTitle.value,\n}))\n\nconst isLoadingMainImage = ref(true)\nconst sketchFabfailure = ref(false)\n\nconst sketchFabUid = computed(() => {\n  if (image.value?.source !== \"sketchfab\" || sketchFabfailure.value) {\n    return null\n  }\n  return image.value.url\n    .split(\"https://media.sketchfab.com/models/\")[1]\n    .split(\"/\")[0]\n})\n\n/**\n * On image error, fall back on image thumbnail or the error image.\n * @param event - image load error event.\n */\nconst onImageError = (event: Event) => {\n  if (!(event.target instanceof HTMLImageElement)) {\n    return\n  }\n  imageSrc.value =\n    event.target.src === image.value?.url ? image.value.thumbnail : errorImage\n}\n/**\n * When the load event is fired for the thumbnail image, we set the dimensions\n * of the image, and replace the image src attribute with the `image.url`\n * to load the original provider image.\n * @param event - the image load event.\n */\nconst onImageLoaded = (event: Event) => {\n  if (!(event.target instanceof HTMLImageElement) || !image.value) {\n    return\n  }\n\n  isLoadingThumbnail.value = false\n\n  if (isLoadingMainImage.value) {\n    const dimensions = {\n      width: event.target.naturalWidth,\n      height: event.target.naturalHeight,\n    }\n    if (singleResultStore.mediaItem?.frontendMediaType === IMAGE) {\n      singleResultStore.mediaItem.width = dimensions.width\n      singleResultStore.mediaItem.height = dimensions.height\n    }\n    if (!image.value.filetype) {\n      axios\n        .head(image.value.url)\n        .then((res) => {\n          const imageType = res.headers[\"content-type\"]\n          if (singleResultStore.mediaItem) {\n            singleResultStore.mediaItem.filetype = imageType\n          }\n        })\n        .catch(() => {\n          /**\n           * Do nothing. This avoids the console warning \"Uncaught (in promise) Error:\n           * Network Error\" in Firefox in development mode.\n           */\n        })\n    }\n\n    imageSrc.value = image.value.url\n    isLoadingMainImage.value = false\n  }\n}\n\nconst fetchImage = async () => {\n  if (nuxtApp.isHydrating) {\n    return image.value\n  }\n\n  const fetchedImage = await singleResultStore.fetch(IMAGE, mediaId.value)\n  if (fetchedImage) {\n    image.value = fetchedImage\n    imageSrc.value = fetchedImage.thumbnail\n    return fetchedImage\n  }\n  throw new Error(`Could not fetch image with id ${mediaId.value}`)\n}\n\nconst { error } = await useAsyncData(\n  \"single-image-result\",\n  async () => {\n    return await fetchImage()\n  },\n  { lazy: true, server: false }\n)\n\nconst handleError = (error: Error) => {\n  if ([\"Image not found\", \"Image ID not found\"].includes(error.message)) {\n    showError({\n      statusCode: 404,\n      message: \"Image ID not found\",\n      fatal: true,\n    })\n  }\n  if (fetchingError.value && !handledClientSide(fetchingError.value)) {\n    showError({\n      ...(fetchingError.value ?? {}),\n      fatal: true,\n    })\n  }\n}\n\nif (error.value) {\n  handleError(error.value)\n}\nwatch(error, (err) => {\n  if (err) {\n    handleError(err)\n  }\n})\n</script>\n\n<template>\n  <main :id=\"skipToContentTargetId\" tabindex=\"-1\" class=\"relative flex-grow\">\n    <VErrorSection\n      v-if=\"fetchingError\"\n      :fetching-error=\"fetchingError\"\n      class=\"px-6 py-10 lg:px-10\"\n    />\n    <template v-else-if=\"image\">\n      <VSafetyWall v-if=\"isHidden\" v-bind=\"image\" @reveal=\"reveal\" />\n      <template v-else>\n        <VSingleResultControls :media=\"image\" />\n        <figure\n          class=\"relative mb-4 grid grid-cols-1 grid-rows-1 justify-items-center border-b border-default px-6\"\n        >\n          <VBone\n            v-if=\"showLoadingState\"\n            class=\"col-span-full row-span-full h-[500px] w-[500px] self-center\"\n          />\n          <!--\n            re: disabled static element interactions rule https://github.com/WordPress/openverse/issues/2906\n            Note: this one, I believe, should remain disabled ; but should be double checked by the issue nonetheless\n          -->\n          <!-- eslint-disable-next-line vuejs-accessibility/no-static-element-interactions -->\n          <img\n            v-if=\"!sketchFabUid\"\n            id=\"main-image\"\n            :src=\"imageSrc\"\n            :alt=\"image.title\"\n            class=\"col-span-full row-span-full h-full max-h-[500px] w-full rounded-se-sm rounded-ss-sm object-contain\"\n            :width=\"image.width ?? 0\"\n            :height=\"image.height ?? 0\"\n            @load=\"onImageLoaded\"\n            @error=\"onImageError\"\n            @contextmenu=\"handleRightClick\"\n          />\n          <div\n            v-if=\"sketchFabUid\"\n            class=\"col-span-full row-span-full w-full lg:max-w-4xl lg:px-4\"\n          >\n            <VSketchFabViewer\n              :uid=\"sketchFabUid\"\n              class=\"rounded-se-sm rounded-ss-sm\"\n              @failure=\"sketchFabfailure = true\"\n            />\n          </div>\n        </figure>\n\n        <section\n          class=\"grid grid-cols-1 grid-rows-[auto,1fr] sm:grid-cols-[1fr,auto] sm:grid-rows-1 sm:gap-x-6\"\n        >\n          <VMediaInfo :media=\"image\" class=\"min-w-0 sm:col-start-1\" />\n          <VGetMediaButton\n            :media=\"image\"\n            media-type=\"image\"\n            class=\"row-start-1 mb-4 !w-full flex-initial sm:col-start-2 sm:mb-0 sm:mt-1 sm:!w-auto\"\n          />\n        </section>\n\n        <VMediaReuse :media=\"image\" />\n        <VMediaDetails :media=\"image\" />\n\n        <VRelatedMedia v-if=\"image\" media-type=\"image\" :related-to=\"image.id\" />\n      </template>\n    </template>\n    <VBone\n      v-else-if=\"showLoadingState\"\n      class=\"col-span-full row-span-full mx-auto h-[500px] w-[500px]\"\n    />\n  </main>\n</template>\n\n<style scoped>\nsection {\n  @apply mb-10 w-full px-6 md:mb-16 md:max-w-screen-lg md:px-12 lg:mx-auto lg:px-16;\n}\n</style>\n"],"names":["loadScript","url","resolve","reject","el","sketchfabUrl","props","__props","emit","__emit","t","useI18n","label","node","ref","$captureException","$captureMessage","useNuxtApp","initSketchfab","e","onMounted","usePageRobotsRule","singleResultStore","useSingleResultStore","nuxtApp","route","useRoute","mediaId","computed","firstParam","validateUUID","showError","image","_a","fetchingError","isLoadingOnClient","imageSrc","_b","_c","isLoadingThumbnail","showLoadingState","sketchFabUid","sendCustomEvent","useAnalytics","resultParams","useRouteResultParams","handleRightClick","reveal","isHidden","useSensitiveMedia","pageTitle","detailPageMeta","useSingleResultPageMeta","useHead","isLoadingMainImage","sketchFabfailure","onImageError","event","errorImage","onImageLoaded","dimensions","IMAGE","axios","res","imageType","fetchImage","fetchedImage","error","__temp","__restore","_withAsyncContext","useAsyncData","handleError","handledClientSide","watch","err"],"mappings":"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"}