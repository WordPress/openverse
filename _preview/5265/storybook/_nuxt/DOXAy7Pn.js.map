{"version":3,"file":"DOXAy7Pn.js","sources":["../../src/components/VHomeGallery/VGalleryImage.vue","../../src/components/VHomeGallery/VHomeGallery.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { useNuxtApp } from \"#imports\"\n\nimport type { GallerySet } from \"#shared/types/home-gallery\"\n\nconst props = defineProps<{\n  idx: number\n  dimens: number\n  set: GallerySet\n  image: {\n    id: string\n    src: string\n    title: string\n    url: string\n  }\n}>()\n\nconst { $sendCustomEvent } = useNuxtApp()\nconst handleClick = (id: string) => {\n  $sendCustomEvent(\"CLICK_HOME_GALLERY_IMAGE\", {\n    set: props.set,\n    id,\n  })\n}\n</script>\n\n<template>\n  <VLink\n    class=\"home-cell rounded-full p-1 focus-visible:bg-default\"\n    :style=\"{ '--delay': `${idx * 0.05}s` }\"\n    :href=\"image.url\"\n    @click=\"handleClick(image.id)\"\n  >\n    <img\n      :height=\"dimens\"\n      :width=\"dimens\"\n      :src=\"image.src\"\n      :alt=\"image.title\"\n      :title=\"image.title\"\n    />\n  </VLink>\n</template>\n","<script setup lang=\"ts\">\n/**\n * Displays a grid of images for the homepage, with each image linking to its\n * single result page. The number of columns automatically adjusts to the width\n * of the container upto a max of 5.\n */\nimport { useLocalePath, useRouter } from \"#imports\"\nimport { computed, ref } from \"vue\"\n\nimport type { GallerySet } from \"#shared/types/home-gallery\"\nimport { useReducedMotion } from \"~/composables/use-reduced-motion\"\nimport useResizeObserver from \"~/composables/use-resize-observer\"\n\nimport VGalleryImage from \"~/components/VHomeGallery/VGalleryImage.vue\"\n\nimport untypedImageInfo from \"~/assets/homepage_images.json\"\n\nconst props = withDefaults(defineProps<{ set?: GallerySet }>(), {\n  set: \"random\",\n})\n\ntype HomepageImage = { id: string; title: string; src: string }\ntype ImageSet = {\n  key: GallerySet\n  term: string\n  images: HomepageImage[]\n}\nconst imageInfo = untypedImageInfo as unknown as {\n  sets: ImageSet[]\n}\n\nconst localePath = useLocalePath()\nconst router = useRouter()\nconst prefersReducedMotion = useReducedMotion()\n\nconst dimens = 152 // px\nconst space = 24 // px; 32px space - 4px padding on both sides\n\nconst rowCount = 3\nconst columnCount = computed(() =>\n  Math.min(\n    5, // Grid cannot exceed 5 columns as we only have 15 images.\n    Math.floor((gridDimens.value.width + space) / (dimens + space))\n  )\n)\n\nconst el = ref<HTMLElement | null>(null) // template ref\nconst { dimens: gridDimens } = useResizeObserver(el)\n\nconst imageSet = computed(() =>\n  props.set === \"random\"\n    ? imageInfo.sets[Math.floor(Math.random() * imageInfo.sets.length)]\n    : (imageInfo.sets.find((item) => (item.key = props.set)) ??\n      imageInfo.sets[0])\n)\nconst imageList = computed(() => {\n  return imageSet.value.images.map((image, idx) => ({\n    ...image,\n    src: `/homepage_images/${imageSet.value.key}/${idx + 1}.png`,\n    url: router.resolve(\n      localePath({\n        name: \"image-id\",\n        params: { id: image.id },\n      })\n    ).href,\n  }))\n})\nconst imageCount = computed(() => columnCount.value * rowCount)\n</script>\n\n<template>\n  <!-- Wrapper element to center the grid if space is more than 5 columns. -->\n  <div ref=\"el\" class=\"flex-row items-center justify-end 2xl:justify-center\">\n    <!-- Image grid only occupies as much width as needed. -->\n    <div\n      class=\"home-gallery inline-grid grid-flow-col grid-rows-3 gap-8\"\n      :style=\"{\n        gap: `${space}px`,\n        gridTemplateColumns: `repeat(${columnCount}, minmax(0, 1fr))`,\n      }\"\n    >\n      <ClientOnly>\n        <template v-if=\"prefersReducedMotion\">\n          <VGalleryImage\n            v-for=\"(image, idx) in imageList\"\n            :key=\"image.url\"\n            :image=\"image\"\n            :set=\"imageSet.key\"\n            :idx=\"idx\"\n            :dimens=\"dimens\"\n          />\n        </template>\n        <Transition\n          v-for=\"(image, idx) in imageList\"\n          v-else\n          :key=\"idx\"\n          enter-active-class=\"transition-opacity delay-[var(--delay)] duration-500\"\n          leave-active-class=\"transition-opacity delay-[var(--delay)] duration-500\"\n          enter-from-class=\"opacity-0\"\n          leave-to-class=\"opacity-0\"\n          mode=\"out-in\"\n          appear\n        >\n          <VGalleryImage\n            :idx=\"idx\"\n            :dimens=\"dimens\"\n            :image=\"image\"\n            :set=\"imageSet.key\"\n            :class=\"idx >= imageCount ? 'hidden' : 'block'\"\n          />\n        </Transition>\n      </ClientOnly>\n    </div>\n  </div>\n</template>\n"],"names":["props","__props","$sendCustomEvent","useNuxtApp","handleClick","id","dimens","space","rowCount","imageInfo","untypedImageInfo","localePath","useLocalePath","router","useRouter","prefersReducedMotion","useReducedMotion","columnCount","computed","gridDimens","el","ref","useResizeObserver","imageSet","item","imageList","image","idx","imageCount"],"mappings":"0yBAKA,MAAMA,EAAQC,EAYR,CAAE,iBAAAC,CAAiB,EAAIC,EAAW,EAClCC,EAAeC,GAAe,CAClCH,EAAiB,2BAA4B,CAC3C,IAAKF,EAAM,IACX,GAAAK,CAAA,CACD,CACH;;;;;g9JCYMC,EAAS,IACTC,EAAQ,GAERC,EAAW,qEArBjB,MAAMR,EAAQC,EAURQ,EAAYC,EAIZC,EAAaC,EAAc,EAC3BC,EAASC,EAAU,EACnBC,EAAuBC,EAAiB,EAMxCC,EAAcC,EAAS,IAC3B,KAAK,IACH,EACA,KAAK,OAAOC,EAAW,MAAM,MAAQZ,IAAUD,EAASC,EAAM,CAAA,CAElE,EAEMa,EAAKC,EAAwB,IAAI,EACjC,CAAE,OAAQF,GAAeG,EAAkBF,CAAE,EAE7CG,EAAWL,EAAS,IACxBlB,EAAM,MAAQ,SACVS,EAAU,KAAK,KAAK,MAAM,KAAK,SAAWA,EAAU,KAAK,MAAM,CAAC,EAC/DA,EAAU,KAAK,KAAMe,GAAUA,EAAK,IAAMxB,EAAM,GAAI,GACrDS,EAAU,KAAK,CAAC,CACtB,EACMgB,EAAYP,EAAS,IAClBK,EAAS,MAAM,OAAO,IAAI,CAACG,EAAOC,KAAS,CAChD,GAAGD,EACH,IAAK,oBAAoBH,EAAS,MAAM,GAAG,IAAII,EAAM,CAAC,OACtD,IAAKd,EAAO,QACVF,EAAW,CACT,KAAM,WACN,OAAQ,CAAE,GAAIe,EAAM,EAAG,CACxB,CAAA,CAAA,EACD,IAAA,EACF,CACH,EACKE,EAAaV,EAAS,IAAMD,EAAY,MAAQT,CAAQ"}