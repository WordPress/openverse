{"version":3,"mappings":"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","names":["localeCodes","localeLoaders","__vitePreload","vueI18nConfigs","normalizedLocales","NUXT_I18N_MODULE_ID","parallelPlugin","DEFAULT_DYNAMIC_PARAMS_KEY","DEFAULT_COOKIE_KEY","SWITCH_LOCALE_PATH_LINK_IDENTIFIER","inBrowser","getNormalizedLocales","locales","normalized","locale","isString","getRouteName","routeName","isSymbol","getLocaleRouteName","defaultLocale","strategy","routesNameSeparator","defaultLocaleRouteNameSuffix","differentDomains","localizedRoutes","name","resolveBaseUrl","baseUrl","context","isFunction","matchBrowserLocale","browserLocales","matchedLocales","index","browserCode","matchedLocale","l","languageCode","DefaultBrowserLocaleMatcher","compareBrowserLocale","a","b","DefaultBrowerLocaleComparer","findBrowserLocale","matcher","comparer","code","language","getLocalesRegex","localesPattern","regexpPath","createLocaleFromRouteGetter","useRuntimeConfig","defaultSuffixPattern","regexpName","route","matches"],"ignoreList":[1,2],"sources":["../../.nuxt/i18n.options.mjs","../../../node_modules/.pnpm/@nuxtjs+i18n@9.1.1_@vue+compiler-dom@3.5.13_eslint@9.13.0_jiti@2.4.2__magicast@0.3.5_rollup@4_tv4p5ybxhqqmvgowho4qvjjtmu/node_modules/@nuxtjs/i18n/dist/runtime/routing/utils.js","../../../node_modules/.pnpm/@nuxtjs+i18n@9.1.1_@vue+compiler-dom@3.5.13_eslint@9.13.0_jiti@2.4.2__magicast@0.3.5_rollup@4_tv4p5ybxhqqmvgowho4qvjjtmu/node_modules/@nuxtjs/i18n/dist/runtime/routing/extends/router.js"],"sourcesContent":["\n// @ts-nocheck\n\n\nexport const localeCodes =  [\n  \"en\",\n  \"ar\",\n  \"es\",\n  \"ru\"\n]\n\nexport const localeLoaders = {\n  \"en\": [{ key: \"../i18n/locales/en.json\", load: () => import(\"../i18n/locales/en.json\" /* webpackChunkName: \"locale__home_runner_work_openverse_openverse_frontend_i18n_locales_en_json\" */), cache: true }],\n  \"ar\": [{ key: \"../i18n/locales/ar.json\", load: () => import(\"../i18n/locales/ar.json\" /* webpackChunkName: \"locale__home_runner_work_openverse_openverse_frontend_i18n_locales_ar_json\" */), cache: true }],\n  \"es\": [{ key: \"../i18n/locales/es.json\", load: () => import(\"../i18n/locales/es.json\" /* webpackChunkName: \"locale__home_runner_work_openverse_openverse_frontend_i18n_locales_es_json\" */), cache: true }],\n  \"ru\": [{ key: \"../i18n/locales/ru.json\", load: () => import(\"../i18n/locales/ru.json\" /* webpackChunkName: \"locale__home_runner_work_openverse_openverse_frontend_i18n_locales_ru_json\" */), cache: true }]\n}\n\nexport const vueI18nConfigs = [\n  () => import(\"../i18n/vue-i18n.ts?hash=e45289f8&config=1\" /* webpackChunkName: \"__vue_i18n_e45289f8\" */)\n]\n\nexport const nuxtI18nOptions = {\n  \"restructureDir\": \"i18n\",\n  \"experimental\": {\n    \"localeDetector\": \"\",\n    \"switchLocalePathLinkSSR\": false,\n    \"autoImportTranslationFunctions\": false,\n    \"typedPages\": true,\n    \"typedOptionsAndMessages\": false,\n    \"generatedLocaleFilePathFormat\": \"absolute\"\n  },\n  \"bundle\": {\n    \"compositionOnly\": true,\n    \"runtimeOnly\": false,\n    \"fullInstall\": true,\n    \"dropMessageCompiler\": false,\n    \"optimizeTranslationDirective\": true\n  },\n  \"compilation\": {\n    \"jit\": true,\n    \"strictMessage\": true,\n    \"escapeHtml\": false\n  },\n  \"customBlocks\": {\n    \"defaultSFCLang\": \"json\",\n    \"globalSFCScope\": false\n  },\n  \"vueI18n\": \"./vue-i18n\",\n  \"locales\": [\n    {\n      \"code\": \"en\",\n      \"dir\": \"ltr\",\n      \"language\": \"en\",\n      \"isCatchallLocale\": true,\n      \"name\": \"English\",\n      \"nativeName\": \"English\",\n      \"files\": [\n        \"/home/runner/work/openverse/openverse/frontend/i18n/locales/en.json\"\n      ]\n    },\n    {\n      \"code\": \"ar\",\n      \"name\": \"Arabic\",\n      \"nativeName\": \"العربية\",\n      \"language\": \"ar\",\n      \"dir\": \"rtl\",\n      \"translated\": 100,\n      \"files\": [\n        \"/home/runner/work/openverse/openverse/frontend/i18n/locales/ar.json\"\n      ]\n    },\n    {\n      \"code\": \"es\",\n      \"name\": \"Spanish (Spain)\",\n      \"nativeName\": \"Español\",\n      \"language\": \"es\",\n      \"dir\": \"ltr\",\n      \"translated\": 100,\n      \"files\": [\n        \"/home/runner/work/openverse/openverse/frontend/i18n/locales/es.json\"\n      ]\n    },\n    {\n      \"code\": \"ru\",\n      \"name\": \"Russian\",\n      \"nativeName\": \"Русский\",\n      \"language\": \"ru\",\n      \"dir\": \"ltr\",\n      \"translated\": 48,\n      \"files\": [\n        \"/home/runner/work/openverse/openverse/frontend/i18n/locales/ru.json\"\n      ]\n    }\n  ],\n  \"defaultLocale\": \"en\",\n  \"defaultDirection\": \"ltr\",\n  \"routesNameSeparator\": \"___\",\n  \"trailingSlash\": false,\n  \"defaultLocaleRouteNameSuffix\": \"default\",\n  \"strategy\": \"prefix_except_default\",\n  \"lazy\": true,\n  \"langDir\": \"locales\",\n  \"detectBrowserLanguage\": false,\n  \"differentDomains\": false,\n  \"baseUrl\": \"\",\n  \"customRoutes\": \"page\",\n  \"pages\": {},\n  \"skipSettingLocaleOnNavigate\": false,\n  \"types\": \"composition\",\n  \"debug\": false,\n  \"parallelPlugin\": false,\n  \"multiDomainLocales\": false,\n  \"i18nModules\": []\n}\n\nexport const normalizedLocales = [\n  {\n    \"code\": \"en\",\n    \"dir\": \"ltr\",\n    \"language\": \"en\",\n    \"isCatchallLocale\": true,\n    \"name\": \"English\",\n    \"nativeName\": \"English\",\n    \"files\": [\n      {\n        \"path\": \"/home/runner/work/openverse/openverse/frontend/i18n/locales/en.json\"\n      }\n    ]\n  },\n  {\n    \"code\": \"ar\",\n    \"name\": \"Arabic\",\n    \"nativeName\": \"العربية\",\n    \"language\": \"ar\",\n    \"dir\": \"rtl\",\n    \"translated\": 100,\n    \"files\": [\n      {\n        \"path\": \"/home/runner/work/openverse/openverse/frontend/i18n/locales/ar.json\"\n      }\n    ]\n  },\n  {\n    \"code\": \"es\",\n    \"name\": \"Spanish (Spain)\",\n    \"nativeName\": \"Español\",\n    \"language\": \"es\",\n    \"dir\": \"ltr\",\n    \"translated\": 100,\n    \"files\": [\n      {\n        \"path\": \"/home/runner/work/openverse/openverse/frontend/i18n/locales/es.json\"\n      }\n    ]\n  },\n  {\n    \"code\": \"ru\",\n    \"name\": \"Russian\",\n    \"nativeName\": \"Русский\",\n    \"language\": \"ru\",\n    \"dir\": \"ltr\",\n    \"translated\": 48,\n    \"files\": [\n      {\n        \"path\": \"/home/runner/work/openverse/openverse/frontend/i18n/locales/ru.json\"\n      }\n    ]\n  }\n]\n\nexport const NUXT_I18N_MODULE_ID = \"@nuxtjs/i18n\"\nexport const parallelPlugin = false\nexport const isSSG = false\n\nexport const DEFAULT_DYNAMIC_PARAMS_KEY = \"nuxtI18nInternal\"\nexport const DEFAULT_COOKIE_KEY = \"i18n_redirected\"\nexport const SWITCH_LOCALE_PATH_LINK_IDENTIFIER = \"nuxt-i18n-slp\"\n","import { isString, isSymbol, isFunction } from \"@intlify/shared\";\nexport const inBrowser = typeof window !== \"undefined\";\nexport function getNormalizedLocales(locales) {\n  locales = locales || [];\n  const normalized = [];\n  for (const locale of locales) {\n    if (isString(locale)) {\n      normalized.push({ code: locale });\n    } else {\n      normalized.push(locale);\n    }\n  }\n  return normalized;\n}\nexport function adjustRoutePathForTrailingSlash(pagePath, trailingSlash, isChildWithRelativePath) {\n  return pagePath.replace(/\\/+$/, \"\") + (trailingSlash ? \"/\" : \"\") || (isChildWithRelativePath ? \"\" : \"/\");\n}\nexport function getRouteName(routeName) {\n  if (isString(routeName)) return routeName;\n  if (isSymbol(routeName)) return routeName.toString();\n  return \"(null)\";\n}\nexport function getLocaleRouteName(routeName, locale, {\n  defaultLocale,\n  strategy,\n  routesNameSeparator,\n  defaultLocaleRouteNameSuffix,\n  differentDomains\n}) {\n  const localizedRoutes = strategy !== \"no_prefix\" || differentDomains;\n  let name = getRouteName(routeName) + (localizedRoutes ? routesNameSeparator + locale : \"\");\n  if (locale === defaultLocale && strategy === \"prefix_and_default\") {\n    name += routesNameSeparator + defaultLocaleRouteNameSuffix;\n  }\n  return name;\n}\nexport function resolveBaseUrl(baseUrl, context) {\n  if (isFunction(baseUrl)) {\n    return baseUrl(context);\n  }\n  return baseUrl;\n}\nfunction matchBrowserLocale(locales, browserLocales) {\n  const matchedLocales = [];\n  for (const [index, browserCode] of browserLocales.entries()) {\n    const matchedLocale = locales.find((l) => l.language.toLowerCase() === browserCode.toLowerCase());\n    if (matchedLocale) {\n      matchedLocales.push({ code: matchedLocale.code, score: 1 - index / browserLocales.length });\n      break;\n    }\n  }\n  for (const [index, browserCode] of browserLocales.entries()) {\n    const languageCode = browserCode.split(\"-\")[0].toLowerCase();\n    const matchedLocale = locales.find((l) => l.language.split(\"-\")[0].toLowerCase() === languageCode);\n    if (matchedLocale) {\n      matchedLocales.push({ code: matchedLocale.code, score: 0.999 - index / browserLocales.length });\n      break;\n    }\n  }\n  return matchedLocales;\n}\nexport const DefaultBrowserLocaleMatcher = matchBrowserLocale;\nfunction compareBrowserLocale(a, b) {\n  if (a.score === b.score) {\n    return b.code.length - a.code.length;\n  }\n  return b.score - a.score;\n}\nexport const DefaultBrowerLocaleComparer = compareBrowserLocale;\nexport function findBrowserLocale(locales, browserLocales, { matcher = DefaultBrowserLocaleMatcher, comparer = DefaultBrowerLocaleComparer } = {}) {\n  const normalizedLocales = [];\n  for (const l of locales) {\n    const { code } = l;\n    const language = l.language || code;\n    normalizedLocales.push({ code, language });\n  }\n  const matchedLocales = matcher(normalizedLocales, browserLocales);\n  if (matchedLocales.length > 1) {\n    matchedLocales.sort(comparer);\n  }\n  return matchedLocales.length ? matchedLocales[0].code : \"\";\n}\nexport function getLocalesRegex(localeCodes) {\n  return new RegExp(`^/(${localeCodes.join(\"|\")})(?:/|$)`, \"i\");\n}\n","import { getLocalesRegex, getRouteName } from \"../utils.js\";\nimport { localeCodes } from \"#build/i18n.options.mjs\";\nimport { useRuntimeConfig } from \"#imports\";\nconst localesPattern = `(${localeCodes.join(\"|\")})`;\nconst regexpPath = getLocalesRegex(localeCodes);\nexport function createLocaleFromRouteGetter() {\n  const { routesNameSeparator, defaultLocaleRouteNameSuffix } = useRuntimeConfig().public.i18n;\n  const defaultSuffixPattern = `(?:${routesNameSeparator}${defaultLocaleRouteNameSuffix})?`;\n  const regexpName = new RegExp(`${routesNameSeparator}${localesPattern}${defaultSuffixPattern}$`, \"i\");\n  const getLocaleFromRoute = (route) => {\n    let matches = null;\n    if (typeof route === \"string\") {\n      matches = route.match(regexpPath);\n      return matches?.[1] ?? \"\";\n    }\n    if (route.name) {\n      matches = getRouteName(route.name).match(regexpName);\n    } else if (route.path) {\n      matches = route.path.match(regexpPath);\n    }\n    return matches?.[1] ?? \"\";\n  };\n  return getLocaleFromRoute;\n}\n"],"file":"_nuxt/BCWuNC2L.js"}