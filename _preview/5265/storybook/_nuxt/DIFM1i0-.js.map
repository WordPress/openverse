{"version":3,"file":"DIFM1i0-.js","sources":["../../shared/utils/attribution-html.ts"],"sourcesContent":["/*\n * This module highly mirrors the Python code present in the backend repository.\n * For any changes made here, please make the corresponding changes in the\n * backend, or open an issue to track it.\n */\nimport enJson from \"~~/i18n/locales/en.json\"\n\nimport type { LicenseElement } from \"#shared/constants/license\"\nimport {\n  getElements,\n  getFullLicenseName,\n  isPublicDomain,\n} from \"#shared/utils/license\"\nimport type { Media } from \"#shared/types/media\"\n\nimport type { Composer } from \"vue-i18n\"\n\n/* Helper functions */\n\n/**\n * Escape characters that have special meaning in HTML to break script injection\n * attacks.\n *\n * @param unsafe - the unsafe text to sanitise\n * @returns the sanitised text content\n */\nconst escapeHtml = (unsafe: string) =>\n  unsafe\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/\"/g, \"&quot;\")\n    .replace(/'/g, \"&#039;\")\n\n/**\n * Create an HTML tag with the given name, attributes and children.\n *\n * @param name - the tag name\n * @param attrs - the attributes associated with the tag\n * @param children - the tags children\n * @returns the HTML markup of the tag\n */\nconst h = (\n  name: string,\n  attrs: Record<string, string>,\n  children: string[] | null = null\n): string => {\n  const selfClosingTags = [\n    \"area\",\n    \"base\",\n    \"br\",\n    \"col\",\n    \"embed\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n  ]\n\n  const map = Object.entries(attrs)\n    .map(([key, value]) => `${key}=\"${value}\"`)\n    .join(\" \")\n\n  if (selfClosingTags.includes(name)) {\n    return map ? `<${name} ${map} />` : `<${name} />`\n  }\n\n  const opening = map ? `<${name} ${map}>` : `<${name}>`\n  const closing = `</${name}>`\n  return `${opening}${(children ?? []).join(\"\\n\")}${closing}`\n}\n\n/**\n * Format the given string by replacing all placeholder keys with their values.\n * The pairs of placeholders and values are passed as a dictionary.\n *\n * @param text - the string in which to perform the formatting\n * @param replacements - the mapping of placeholders to values\n * @returns the formatted string\n */\nconst fmt = (text: string, replacements: Record<string, string>): string => {\n  Object.entries(replacements).forEach(([key, value]) => {\n    text = text.replace(`{${key}}`, value)\n  })\n  return text\n}\n\nconst isObject = (value: unknown): value is Record<string, unknown> => {\n  return typeof value === \"object\" && value !== null\n}\n\nconst isBabelValue = (value: unknown): value is { loc: { source: string } } => {\n  return (\n    isObject(value) &&\n    \"loc\" in value &&\n    isObject(value.loc) &&\n    \"source\" in value.loc &&\n    typeof value.loc.source === \"string\"\n  )\n}\n\n/**\n * Perform the same role as `i18n.t` except that it's restricted to reading\n * English from `en.json`. In unit tests, the json file is parsed by babel,\n * so we handle the parsed objects, too.\n *\n * @param path - the key to the JSON value to read\n * @param replacements - the pair of placeholders and their replacement strings\n * @returns the English string with placeholders substituted\n */\nconst fakeT = (\n  path: string,\n  replacements: Record<string, string> = {}\n): string => {\n  // enJson is parsed by babel in unit tests, so it returns a parsed object\n  const jsonValue = enJson[path as keyof typeof enJson]\n  if (isBabelValue(jsonValue)) {\n    return fmt(jsonValue.loc.source, replacements)\n  } else if (typeof jsonValue === \"string\") {\n    return fmt(jsonValue, replacements)\n  } else {\n    return \"\"\n  }\n}\n\n/**\n * Get an `<img>` tag corresponding to a license element.\n *\n * @param licenseElement - the license element for which to get the `<img>` tag\n * @returns the HTML markup of the `<img>` tag\n */\nconst licenseElementImg = (licenseElement: LicenseElement): string => {\n  const filename = licenseElement.replace(\"-\", \".\")\n  const src = `https://mirrors.creativecommons.org/presskit/icons/${filename}.svg`\n  return h(\"img\", {\n    src,\n    style: \"height: 1em; margin-right: 0.125em; display: inline;\",\n  })\n}\n\n/**\n * Get an HTML `<a>` tag set up with the `target` and `rel` attributes.\n *\n * @param href - the link that the anchor tag should point to\n * @param text - the textual content of the anchor tag\n * @returns the HTML markup of the `<a>` tag\n */\nconst extLink = (href: string, text: string) =>\n  h(\"a\", { rel: \"noopener noreferrer\", href }, [text])\n\n/**\n * Generate a Dublin Core conforming XML attribution snippet.\n *\n * @param mediaItem - the media item being attributed\n * @returns the XML markup of the attribution\n */\nconst xmlAttribution = (mediaItem: Record<string, string>) =>\n  `<attribution xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t<dc:creator>${mediaItem.creator}</dc:creator>\n\t<dc:title>${mediaItem.title}</dc:title>\n\t<dc:rights>${mediaItem.license_url}</dc:rights>\n\t<dc:identifier>${mediaItem.foreign_landing_url}</dc:identifier>\n\t<dc:type>${mediaItem.type}</dc:type>\n</attribution>`\n\n/* Interfaces */\n\n/**\n * This interface describes a subset of media that contains fields necessary\n * for generating a proper attribution.\n */\nexport type AttributableMedia = Pick<\n  Media,\n  | \"originalTitle\"\n  | \"foreign_landing_url\"\n  | \"creator\"\n  | \"creator_url\"\n  | \"license\"\n  | \"license_version\"\n  | \"license_url\"\n  | \"frontendMediaType\"\n  | \"attribution\"\n>\n\n/**\n * This interface describes the options that the `getAttribution` function can\n * take to customise its output.\n */\nexport interface AttributionOptions {\n  includeIcons?: boolean\n  isPlaintext?: boolean\n  isXml?: boolean\n}\n\n/* Actual util */\n\n/**\n * Get the HTML markup for properly attributing the given media item.\n *\n * @param mediaItem - the media item being attributed\n * @param t - the i18n `t` function to access translations\n * @param includePreview - whether to include the preview markup in the HTML\n * @returns the HTML markup of the attribution\n */\nexport const getAttribution = (\n  mediaItem: AttributableMedia,\n  t: Composer[\"t\"] | null = null,\n  { includeIcons, isPlaintext, isXml }: AttributionOptions = {\n    isPlaintext: false,\n    includeIcons: true,\n    isXml: false,\n  }\n): string => {\n  if (!mediaItem) {\n    return \"\"\n  }\n\n  const isPd = isPublicDomain(mediaItem.license)\n\n  const i18nBase = \"mediaDetails.reuse.credit\"\n\n  const tFn = t\n    ? (key: string, values?: Record<string, unknown>) =>\n        values\n          ? t(`${i18nBase}.${key}`, values as Record<string, unknown>)\n          : t(`${i18nBase}.${key}`)\n    : (key: string, values?: Record<string, unknown>) =>\n        fakeT(`${i18nBase}.${key}`, values as Record<string, string>)\n\n  /* Title */\n\n  let title = mediaItem.originalTitle || tFn(\"genericTitle\")\n  if (!isPlaintext) {\n    title = escapeHtml(title)\n  }\n  if (!isPlaintext && mediaItem.foreign_landing_url) {\n    title = extLink(mediaItem.foreign_landing_url, title)\n  }\n  if (mediaItem.originalTitle) {\n    title = tFn(\"actualTitle\", { title })\n  }\n\n  /* License */\n\n  const fullLicenseName = getFullLicenseName(\n    mediaItem.license,\n    mediaItem.license_version,\n    t\n  )\n  let licenseIcons = \"\"\n  if (includeIcons && mediaItem.license) {\n    const elements = getElements(mediaItem.license)\n    const icons = elements.map((element) => licenseElementImg(element))\n    // Icons are only rendered if present for every element\n    if (!icons.includes(\"\")) {\n      licenseIcons = icons.join(\"\")\n    }\n  }\n  let license = `${fullLicenseName} ${licenseIcons}`.trim()\n  if (!isPlaintext && mediaItem.license_url) {\n    license = extLink(`${mediaItem.license_url}?ref=openverse`, license)\n  }\n\n  /* Attribution */\n\n  const attributionParts: Record<string, string> = {\n    title,\n    markedLicensed: tFn(isPd ? \"marked\" : \"licensed\"),\n    license: license,\n    viewLegal: \"\",\n    creator: \"\",\n  }\n\n  if (isPlaintext && mediaItem.license_url) {\n    attributionParts[\"viewLegal\"] = tFn(\"viewLegalText\", {\n      termsCopy: tFn(isPd ? \"termsText\" : \"copyText\"),\n      url: `${mediaItem.license_url}?ref=openverse`,\n    })\n  }\n\n  if (mediaItem.creator) {\n    let creator = mediaItem.creator\n    if (!isPlaintext) {\n      creator = escapeHtml(creator)\n    }\n    if (!isPlaintext && mediaItem.creator_url) {\n      creator = extLink(mediaItem.creator_url, creator)\n    }\n    attributionParts.creator = tFn(\"creatorText\", {\n      creatorName: creator,\n    })\n  }\n\n  const attribution = tFn(\"text\", attributionParts)\n    .replace(/\\s{2}/g, \" \")\n    .trim()\n\n  if (isXml) {\n    const { frontendMediaType, ...restMediaItem } = mediaItem\n\n    const xmlAttributionParts = {\n      ...restMediaItem,\n      type: frontendMediaType === \"audio\" ? \"Sound\" : \"StillImage\",\n    }\n\n    return xmlAttribution(xmlAttributionParts)\n  } else if (isPlaintext) {\n    return attribution\n  } else {\n    return h(\"p\", { class: \"attribution\" }, [attribution])\n  }\n}\n"],"names":["escapeHtml","unsafe","h","name","attrs","children","selfClosingTags","map","key","value","opening","closing","fmt","text","replacements","isObject","isBabelValue","fakeT","path","jsonValue","enJson","licenseElementImg","licenseElement","src","extLink","href","xmlAttribution","mediaItem","getAttribution","t","includeIcons","isPlaintext","isXml","isPd","isPublicDomain","i18nBase","tFn","values","title","fullLicenseName","getFullLicenseName","licenseIcons","icons","getElements","element","license","attributionParts","creator","attribution","frontendMediaType","restMediaItem","xmlAttributionParts"],"mappings":"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"}