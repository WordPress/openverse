{"version":3,"file":"BMSdkYuu.js","sources":["../../src/composables/use-collection-meta.ts","../../src/composables/use-collection.ts"],"sourcesContent":["import { computed } from \"vue\"\nimport type { ComputedRef } from \"vue\"\n\nimport type { SupportedMediaType } from \"#shared/constants/media\"\nimport type { CollectionParams } from \"#shared/types/search\"\nimport { useProviderStore } from \"~/stores/provider\"\n\nimport type { Composer } from \"vue-i18n\"\n\nexport const useCollectionMeta = ({\n  collectionParams,\n  mediaType,\n  t,\n}: {\n  collectionParams: ComputedRef<CollectionParams | null>\n  mediaType: SupportedMediaType\n  t: Composer[\"t\"]\n}) => {\n  const pageTitle = computed(() => {\n    const params = collectionParams.value\n\n    if (params) {\n      if (params.collection === \"creator\") {\n        return `${params.creator} | Openverse`\n      }\n\n      if (params.collection === \"source\") {\n        const sourceName = useProviderStore().getProviderName(\n          params.source,\n          mediaType\n        )\n        return `${t(`collection.pageTitle.source.${mediaType}`, { source: sourceName })} | Openverse`\n      }\n\n      if (params.collection === \"tag\") {\n        return `${t(`collection.pageTitle.tag.${mediaType}`, { tag: params.tag })} | Openverse`\n      }\n    }\n\n    return \"Openly Licensed Images, Audio and More | Openverse\"\n  })\n\n  return {\n    pageTitle,\n  }\n}\n","import { useI18n, useRoute } from \"#imports\"\nimport { computed, Ref, ref, watch } from \"vue\"\n\nimport type { SupportedMediaType } from \"#shared/constants/media\"\nimport type { AudioDetail, ImageDetail } from \"#shared/types/media\"\nimport { useMediaStore } from \"~/stores/media\"\nimport { useSearchStore } from \"~/stores/search\"\nimport { useCollectionMeta } from \"~/composables/use-collection-meta\"\n\nexport const useCollection = <T extends SupportedMediaType>({\n  mediaType,\n}: {\n  mediaType: T\n}) => {\n  type ResultType = T extends \"image\" ? ImageDetail : AudioDetail\n\n  const mediaStore = useMediaStore()\n  const searchStore = useSearchStore()\n\n  const collectionParams = computed(() => searchStore.collectionParams)\n  const isFetching = computed(() => mediaStore.fetchState.isFetching)\n\n  const media = ref(mediaStore.resultItems[mediaType]) as Ref<ResultType[]>\n  const creatorUrl = ref<string>()\n\n  const { t } = useI18n({ useScope: \"global\" })\n\n  const collectionLabel = computed(() => {\n    if (!collectionParams.value) {\n      return \"\"\n    }\n    const { collection, ...params } = collectionParams.value\n    return t(`collection.ariaLabel.${collection}.image`, { ...params })\n  })\n\n  const fetchMedia = async (\n    { shouldPersistMedia }: { shouldPersistMedia: boolean } = {\n      shouldPersistMedia: false,\n    }\n  ) => {\n    media.value = (await mediaStore.fetchMedia({\n      shouldPersistMedia,\n    })) as ResultType[]\n    creatorUrl.value =\n      media.value.length > 0 ? media.value[0].creator_url : undefined\n    return media.value\n  }\n  // `useAsyncData` is not triggered when the query changes, e.g. when the user navigates from\n  // a creator collection page to a source collection page.\n  const route = useRoute()\n  const routeQuery = computed(() => route.query)\n  watch(routeQuery, async () => {\n    await fetchMedia()\n  })\n\n  const loadMore = async () => {\n    await fetchMedia({ shouldPersistMedia: true })\n  }\n  const { pageTitle } = useCollectionMeta({\n    collectionParams,\n    mediaType,\n    t,\n  })\n\n  return {\n    collectionParams,\n    pageTitle,\n    collectionLabel,\n    creatorUrl,\n    isFetching,\n    media,\n    fetchMedia,\n    loadMore,\n  }\n}\n"],"names":["useCollectionMeta","collectionParams","mediaType","t","computed","params","sourceName","useProviderStore","useCollection","mediaStore","useMediaStore","searchStore","useSearchStore","isFetching","media","ref","creatorUrl","useI18n","collectionLabel","collection","fetchMedia","shouldPersistMedia","route","useRoute","routeQuery","watch","loadMore","pageTitle"],"mappings":"8sBASO,MAAMA,EAAoB,CAAC,CAChC,iBAAAC,EACA,UAAAC,EACA,EAAAC,CACF,KA6BS,CACL,UAzBgBC,EAAS,IAAM,CAC/B,MAAMC,EAASJ,EAAiB,MAEhC,GAAII,EAAQ,CACN,GAAAA,EAAO,aAAe,UACjB,MAAA,GAAGA,EAAO,OAAO,eAGtB,GAAAA,EAAO,aAAe,SAAU,CAC5B,MAAAC,EAAaC,IAAmB,gBACpCF,EAAO,OACPH,CACF,EACO,MAAA,GAAGC,EAAE,+BAA+BD,CAAS,GAAI,CAAE,OAAQI,EAAY,CAAC,cAAA,CAG7E,GAAAD,EAAO,aAAe,MACjB,MAAA,GAAGF,EAAE,4BAA4BD,CAAS,GAAI,CAAE,IAAKG,EAAO,GAAK,CAAA,CAAC,cAC3E,CAGK,MAAA,oDAAA,CACR,CAID,GCnCWG,EAAgB,CAA+B,CAC1D,UAAAN,CACF,IAEM,CAGJ,MAAMO,EAAaC,EAAc,EAC3BC,EAAcC,EAAe,EAE7BX,EAAmBG,EAAS,IAAMO,EAAY,gBAAgB,EAC9DE,EAAaT,EAAS,IAAMK,EAAW,WAAW,UAAU,EAE5DK,EAAQC,EAAIN,EAAW,YAAYP,CAAS,CAAC,EAC7Cc,EAAaD,EAAY,EAEzB,CAAE,EAAAZ,CAAE,EAAIc,EAAQ,CAAE,SAAU,SAAU,EAEtCC,EAAkBd,EAAS,IAAM,CACjC,GAAA,CAACH,EAAiB,MACb,MAAA,GAET,KAAM,CAAE,WAAAkB,EAAY,GAAGd,GAAWJ,EAAiB,MACnD,OAAOE,EAAE,wBAAwBgB,CAAU,SAAU,CAAE,GAAGd,EAAQ,CAAA,CACnE,EAEKe,EAAa,MACjB,CAAE,mBAAAC,GAAwD,CACxD,mBAAoB,EAAA,KAGhBP,EAAA,MAAS,MAAML,EAAW,WAAW,CACzC,mBAAAY,CAAA,CACD,EACUL,EAAA,MACTF,EAAM,MAAM,OAAS,EAAIA,EAAM,MAAM,CAAC,EAAE,YAAc,OACjDA,EAAM,OAITQ,EAAQC,EAAS,EACjBC,EAAapB,EAAS,IAAMkB,EAAM,KAAK,EAC7CG,EAAMD,EAAY,SAAY,CAC5B,MAAMJ,EAAW,CAAA,CAClB,EAED,MAAMM,EAAW,SAAY,CAC3B,MAAMN,EAAW,CAAE,mBAAoB,GAAM,CAC/C,EACM,CAAE,UAAAO,CAAU,EAAI3B,EAAkB,CACtC,iBAAAC,EACA,UAAAC,EACA,EAAAC,CAAA,CACD,EAEM,MAAA,CACL,iBAAAF,EACA,UAAA0B,EACA,gBAAAT,EACA,WAAAF,EACA,WAAAH,EACA,MAAAC,EACA,WAAAM,EACA,SAAAM,CACF,CACF"}