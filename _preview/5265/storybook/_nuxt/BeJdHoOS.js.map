{"version":3,"file":"BeJdHoOS.js","sources":["../../src/pages/audio/[id]/index.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport {\n  definePageMeta,\n  showError,\n  useAsyncData,\n  useHead,\n  useNuxtApp,\n  useRoute,\n  useSingleResultPageMeta,\n} from \"#imports\"\nimport { computed, ref, watch } from \"vue\"\n\nimport { AUDIO } from \"#shared/constants/media\"\nimport { skipToContentTargetId } from \"#shared/constants/window\"\nimport { firstParam, validateUUID } from \"#shared/utils/query-utils\"\nimport { handledClientSide } from \"#shared/utils/errors\"\nimport type { AudioDetail } from \"#shared/types/media\"\nimport type { AudioInteractionData } from \"#shared/types/analytics\"\nimport singleResultMiddleware from \"~/middleware/single-result\"\nimport { useSingleResultStore } from \"~/stores/media/single-result\"\nimport { useAnalytics } from \"~/composables/use-analytics\"\nimport { useSensitiveMedia } from \"~/composables/use-sensitive-media\"\nimport { usePageRobotsRule } from \"~/composables/use-page-robots-rule\"\n\nimport VAudioTrack from \"~/components/VAudioTrack/VAudioTrack.vue\"\nimport VMediaReuse from \"~/components/VMediaInfo/VMediaReuse.vue\"\nimport VRelatedMedia from \"~/components/VMediaInfo/VRelatedMedia.vue\"\nimport VMediaDetails from \"~/components/VMediaInfo/VMediaDetails.vue\"\nimport VSafetyWall from \"~/components/VSafetyWall/VSafetyWall.vue\"\nimport VSingleResultControls from \"~/components/VSingleResultControls.vue\"\nimport VAudioThumbnail from \"~/components/VAudioThumbnail/VAudioThumbnail.vue\"\nimport VErrorSection from \"~/components/VErrorSection/VErrorSection.vue\"\n\ndefineOptions({\n  name: \"AudioDetailPage\",\n})\n\ndefinePageMeta({\n  layout: \"content-layout\",\n  middleware: singleResultMiddleware,\n})\n\nusePageRobotsRule(\"single-result\")\n\nconst singleResultStore = useSingleResultStore()\n\nconst route = useRoute()\nconst mediaId = computed(() => firstParam(route?.params.id))\n\nconst nuxtApp = useNuxtApp()\n\nif (!mediaId.value || !validateUUID(mediaId.value)) {\n  showError({\n    statusCode: 404,\n    message: `Invalid audio id: \"${mediaId.value}\".`,\n    fatal: true,\n  })\n}\n\nconst audio = ref<AudioDetail | null>(\n  singleResultStore.audio?.id &&\n    mediaId.value &&\n    singleResultStore.audio.id === mediaId.value\n    ? singleResultStore.audio\n    : null\n)\nconst fetchingError = computed(() => singleResultStore.fetchState.fetchingError)\n\nconst { isHidden, reveal } = useSensitiveMedia(audio.value)\n\nconst { pageTitle, detailPageMeta } = useSingleResultPageMeta(audio)\n\nuseHead(() => ({\n  ...detailPageMeta,\n  title: pageTitle.value,\n}))\n\nconst { sendCustomEvent } = useAnalytics()\nconst sendAudioEvent = (\n  data: Omit<AudioInteractionData, \"component\">,\n  component: \"AudioDetailPage\" | \"VRelatedAudio\"\n) => {\n  sendCustomEvent(\"AUDIO_INTERACTION\", {\n    ...data,\n    component,\n  })\n}\n\nconst fetchAudio = async () => {\n  if (nuxtApp.isHydrating) {\n    return audio.value\n  }\n\n  const fetchedAudio = await singleResultStore.fetch(AUDIO, mediaId.value)\n  if (fetchedAudio) {\n    audio.value = fetchedAudio\n    return fetchedAudio\n  }\n  throw new Error(`Could not fetch audio with id ${mediaId.value}`)\n}\n\nconst { error } = await useAsyncData(\n  \"single-audio\",\n  async () => {\n    return await fetchAudio()\n  },\n  { lazy: true, server: false }\n)\n\nconst handleError = (error: Error) => {\n  if ([\"Audio not found\", \"Audio ID not found\"].includes(error.message)) {\n    showError({\n      statusCode: 404,\n      message: \"Audio ID not found\",\n      fatal: true,\n    })\n  }\n  if (fetchingError.value && !handledClientSide(fetchingError.value)) {\n    showError({\n      ...(fetchingError.value ?? {}),\n      fatal: true,\n    })\n  }\n}\n\nif (error.value) {\n  handleError(error.value)\n}\nwatch(error, (err) => {\n  if (err) {\n    handleError(err)\n  }\n})\n</script>\n\n<template>\n  <main :id=\"skipToContentTargetId\" tabindex=\"-1\" class=\"relative flex-grow\">\n    <VErrorSection\n      v-if=\"fetchingError\"\n      :fetching-error=\"fetchingError\"\n      class=\"px-6 py-10 lg:px-10\"\n    />\n    <template v-else-if=\"audio\">\n      <VSafetyWall v-if=\"isHidden\" v-bind=\"audio\" @reveal=\"reveal\" />\n      <template v-else>\n        <VSingleResultControls :media=\"audio\" />\n        <VAudioTrack\n          layout=\"full\"\n          :audio=\"audio\"\n          class=\"main-track\"\n          @interacted=\"sendAudioEvent($event, 'AudioDetailPage')\"\n        />\n        <div\n          class=\"mx-auto mt-10 flex flex-col gap-10 px-6 lg:mt-16 lg:max-w-5xl lg:gap-16\"\n        >\n          <VMediaReuse :media=\"audio\" />\n          <VMediaDetails :media=\"audio\">\n            <template #thumbnail>\n              <div\n                class=\"h-[75px] w-[75px] flex-none overflow-hidden rounded-sm lg:h-30 lg:w-30\"\n              >\n                <VAudioThumbnail :audio=\"audio\" />\n              </div>\n            </template>\n          </VMediaDetails>\n          <VRelatedMedia\n            v-if=\"audio\"\n            media-type=\"audio\"\n            :related-to=\"audio.id\"\n            class=\"mb-12\"\n          />\n        </div>\n      </template>\n    </template>\n  </main>\n</template>\n"],"names":["usePageRobotsRule","singleResultStore","useSingleResultStore","route","useRoute","mediaId","computed","firstParam","nuxtApp","useNuxtApp","validateUUID","showError","audio","ref","_a","fetchingError","isHidden","reveal","useSensitiveMedia","pageTitle","detailPageMeta","useSingleResultPageMeta","useHead","sendCustomEvent","useAnalytics","sendAudioEvent","data","component","fetchAudio","fetchedAudio","AUDIO","error","__temp","__restore","_withAsyncContext","useAsyncData","handleError","handledClientSide","watch","err"],"mappings":"+yFA0CAA,EAAiC,EAEjC,MAAMC,EAAoBC,EAAqB,EAEzCC,EAAQC,GAAS,EACjBC,EAAUC,EAAS,IAAMC,EAAWJ,GAAA,YAAAA,EAAO,OAAO,EAAE,CAAC,EAErDK,EAAUC,GAAW,GAEvB,CAACJ,EAAQ,OAAS,CAACK,EAAaL,EAAQ,KAAK,IACrCM,EAAA,CACR,WAAY,IACZ,QAAS,sBAAsBN,EAAQ,KAAK,KAC5C,MAAO,EAAA,CACR,EAGH,MAAMO,EAAQC,GACZC,EAAAb,EAAkB,QAAlB,MAAAa,EAAyB,IACvBT,EAAQ,OACRJ,EAAkB,MAAM,KAAOI,EAAQ,MACrCJ,EAAkB,MAClB,IACN,EACMc,EAAgBT,EAAS,IAAML,EAAkB,WAAW,aAAa,EAEzE,CAAE,SAAAe,EAAU,OAAAC,CAAA,EAAWC,EAAkBN,EAAM,KAAK,EAEpD,CAAE,UAAAO,EAAW,eAAAC,GAAmBC,EAAwBT,CAAK,EAEnEU,GAAQ,KAAO,CACb,GAAGF,EACH,MAAOD,EAAU,KAAA,EACjB,EAEI,KAAA,CAAE,gBAAAI,CAAgB,EAAIC,EAAa,EACnCC,EAAiB,CACrBC,EACAC,IACG,CACHJ,EAAgB,oBAAqB,CACnC,GAAGG,EACH,UAAAC,CAAA,CACD,CACH,EAEMC,EAAa,SAAY,CAC7B,GAAIpB,EAAQ,YACV,OAAOI,EAAM,MAGf,MAAMiB,EAAe,MAAM5B,EAAkB,MAAM6B,EAAOzB,EAAQ,KAAK,EACvE,GAAIwB,EACF,OAAAjB,EAAM,MAAQiB,EACPA,EAET,MAAM,IAAI,MAAM,iCAAiCxB,EAAQ,KAAK,EAAE,CAClE,EAEM,CAAE,MAAA0B,IAAgB,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAAC,GACtB,eACA,SACS,MAAMP,EAAW,EAE1B,CAAE,KAAM,GAAM,OAAQ,EAAM,CAC9B,CAAA,mBAEMQ,EAAeL,GAAiB,CAChC,CAAC,kBAAmB,oBAAoB,EAAE,SAASA,EAAM,OAAO,GACxDpB,EAAA,CACR,WAAY,IACZ,QAAS,qBACT,MAAO,EAAA,CACR,EAECI,EAAc,OAAS,CAACsB,EAAkBtB,EAAc,KAAK,GACrDJ,EAAA,CACR,GAAII,EAAc,OAAS,CAAC,EAC5B,MAAO,EAAA,CACR,CAEL,EAEA,OAAIgB,EAAM,OACRK,EAAYL,EAAM,KAAK,EAEnBO,EAAAP,EAAQQ,GAAQ,CAChBA,GACFH,EAAYG,CAAG,CACjB,CACD"}