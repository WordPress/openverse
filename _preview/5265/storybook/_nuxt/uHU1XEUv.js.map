{"version":3,"file":"uHU1XEUv.js","sources":["../../src/components/VFilters/VFilterChecklist.vue","../../src/components/VFilters/VSearchGridFilter.vue","../../src/components/VHeader/VHeaderMobile/VContentSettingsModalContent.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { useI18n } from \"#imports\"\n\nimport type { FilterItem, FilterCategory } from \"#shared/constants/filters\"\nimport type { License } from \"#shared/constants/license\"\nimport { getElements } from \"#shared/utils/license\"\nimport { useSearchStore } from \"~/stores/search\"\n\nimport VButton from \"~/components/VButton.vue\"\nimport VCheckbox from \"~/components/VCheckbox/VCheckbox.vue\"\nimport VIcon from \"~/components/VIcon/VIcon.vue\"\nimport VLicense from \"~/components/VLicense/VLicense.vue\"\nimport VLicenseExplanation from \"~/components/VFilters/VLicenseExplanation.vue\"\nimport VIconButton from \"~/components/VIconButton/VIconButton.vue\"\n\ntype toggleFilterPayload = {\n  filterType: FilterCategory\n  code: string\n}\n\nconst props = withDefaults(\n  defineProps<{\n    options?: FilterItem[]\n    title?: string\n    filterType: FilterCategory\n    disabled?: boolean\n  }>(),\n  {\n    disabled: false,\n  }\n)\n\nconst emit = defineEmits<{\n  \"toggle-filter\": [toggleFilterPayload]\n}>()\n\nconst { t } = useI18n({ useScope: \"global\" })\n\nconst itemLabel = (item: FilterItem) =>\n  [\"audioProviders\", \"imageProviders\"].indexOf(props.filterType) > -1\n    ? item.name\n    : t(item.name)\n\nconst onValueChange = ({ value }: { value: string }) => {\n  emit(\"toggle-filter\", {\n    code: value,\n    filterType: props.filterType,\n  })\n}\nconst getLicenseExplanationCloseAria = (license: License) => {\n  const elements = getElements(license).filter((icon) => icon !== \"cc\")\n  const descriptions = elements\n    .map((element) => t(`browsePage.licenseDescription.${element}`))\n    .join(\" \")\n  const close = t(\"modal.closeNamed\", {\n    name: t(\"browsePage.aria.licenseExplanation\"),\n  })\n  return `${descriptions} - ${close}`\n}\n\nconst isDisabled = (item: FilterItem) =>\n  useSearchStore().isFilterDisabled(item, props.filterType) ?? props.disabled\n\nconst isLicense = (code: string): code is License => {\n  // Quick check that also prevents \"`code` is declared but its value is never read\" warning.\n  return !!code && props.filterType === \"licenses\"\n}\n\nconst getTitle = (code: string) => {\n  return isLicense(code)\n    ? t(\"filters.licenseExplanation.licenseDefinition\")\n    : t(\"filters.licenseExplanation.markDefinition\", {\n        mark: code.toUpperCase(),\n      })\n}\n</script>\n\n<template>\n  <fieldset class=\"mb-8\">\n    <legend class=\"label-bold\">{{ title }}</legend>\n    <div\n      v-for=\"item in options\"\n      :key=\"item.code\"\n      class=\"mt-4 flex items-center justify-between\"\n    >\n      <VCheckbox\n        :id=\"item.code\"\n        :key=\"item.code\"\n        :checked=\"item.checked\"\n        :name=\"title\"\n        :value=\"item.code\"\n        :disabled=\"isDisabled(item)\"\n        @change=\"onValueChange\"\n      >\n        <VLicense v-if=\"isLicense(item.code)\" :license=\"item.code\" />\n        <template v-else>{{ itemLabel(item) }}</template>\n      </VCheckbox>\n\n      <!-- License explanation -->\n      <VModal\n        v-if=\"isLicense(item.code)\"\n        :id=\"item.code\"\n        variant=\"centered\"\n        :hide-on-click-outside=\"true\"\n        :label=\"$t('browsePage.aria.licenseExplanation')\"\n      >\n        <template #trigger=\"{ a11yProps }\">\n          <VButton\n            v-bind=\"a11yProps\"\n            variant=\"transparent-tx\"\n            size=\"disabled\"\n            :aria-label=\"$t('browsePage.aria.licenseExplanation')\"\n            class=\"h-6 w-6\"\n          >\n            <VIcon name=\"help\" />\n          </VButton>\n        </template>\n        <template #title>\n          <h5 class=\"text-base font-semibold\">\n            {{ getTitle(item.code) }}\n          </h5>\n        </template>\n        <template #close-button=\"{ close }\">\n          <VIconButton\n            :label=\"getLicenseExplanationCloseAria(item.code)\"\n            :icon-props=\"{ name: 'close' }\"\n            variant=\"transparent-gray\"\n            size=\"small\"\n            @click=\"close\"\n          />\n        </template>\n        <template #default>\n          <VLicenseExplanation :license=\"item.code\" />\n        </template>\n      </VModal>\n    </div>\n  </fieldset>\n</template>\n","<script setup lang=\"ts\">\nimport { useI18n, useNuxtApp } from \"#imports\"\nimport { computed } from \"vue\"\n\nimport { storeToRefs } from \"pinia\"\n\nimport type { FilterCategory } from \"#shared/constants/filters\"\nimport { useSearchStore } from \"~/stores/search\"\n\nimport VFilterChecklist from \"~/components/VFilters/VFilterChecklist.vue\"\nimport VButton from \"~/components/VButton.vue\"\n\nwithDefaults(\n  defineProps<{\n    /**\n     * Whether to show the header with the title and the clear button.\n     */\n    showFilterHeader?: boolean\n    /**\n     * When the filters are in the sidebar, we change the keyboard tabbing order:\n     * the focus moves from the Filters button to the filter,\n     * and from the last tabbable element to the main content on Tab,\n     * and from the filters to the filters button on Shift Tab.\n     */\n    changeTabOrder?: boolean\n  }>(),\n  {\n    showFilterHeader: true,\n    changeTabOrder: true,\n  }\n)\n\nconst searchStore = useSearchStore()\n\nconst { t } = useI18n({ useScope: \"global\" })\n\nconst { $sendCustomEvent } = useNuxtApp()\n\nconst {\n  isAnyFilterApplied,\n  searchTerm,\n  searchType,\n  searchFilters: filters,\n} = storeToRefs(searchStore)\n\nconst filterTypes = computed(\n  () => Object.keys(filters.value) as FilterCategory[]\n)\nconst filterTypeTitle = (filterType: FilterCategory) => {\n  return t(`filters.${filterType}.title`)\n}\n\nconst toggleFilter = ({\n  filterType,\n  code,\n}: {\n  filterType: FilterCategory\n  code: string\n}) => {\n  const checked = searchStore.toggleFilter({ filterType, code })\n  $sendCustomEvent(\"APPLY_FILTER\", {\n    category: filterType,\n    key: code,\n    checked,\n    searchType: searchType.value,\n    query: searchTerm.value,\n  })\n}\n\nconst clearFilters = () => searchStore.clearFilters()\n</script>\n\n<template>\n  <section id=\"filters\" aria-labelledby=\"filters-heading\" class=\"filters\">\n    <header\n      v-if=\"showFilterHeader\"\n      class=\"relative mb-6 flex items-center justify-between\"\n    >\n      <h4 id=\"filters-heading\" class=\"caption-bold uppercase\">\n        {{ $t(\"filterList.filterBy\") }}\n      </h4>\n      <VButton\n        v-show=\"isAnyFilterApplied\"\n        id=\"clear-filter-button\"\n        variant=\"transparent-gray\"\n        size=\"small\"\n        class=\"label-bold absolute end-0 !text-link\"\n        @click=\"clearFilters\"\n      >\n        {{ $t(\"filterList.clear\") }}\n      </VButton>\n    </header>\n    <form class=\"filters-form\">\n      <VFilterChecklist\n        v-for=\"filterType in filterTypes\"\n        :key=\"filterType\"\n        :options=\"filters[filterType]\"\n        :title=\"filterTypeTitle(filterType)\"\n        :filter-type=\"filterType\"\n        @toggle-filter=\"toggleFilter\"\n      />\n    </form>\n  </section>\n</template>\n","<script setup lang=\"ts\">\nimport { computed, ref } from \"vue\"\n\nimport { SearchType } from \"#shared/constants/media\"\nimport { CONTENT_SETTINGS_DIALOG } from \"#shared/constants/dialogs\"\nimport { useSearchStore } from \"~/stores/search\"\nimport useSearchType from \"~/composables/use-search-type\"\n\nimport VButton from \"~/components/VButton.vue\"\nimport VFilterTab from \"~/components/VHeader/VHeaderMobile/VFilterTab.vue\"\nimport VIcon from \"~/components/VIcon/VIcon.vue\"\nimport VModalContent from \"~/components/VModal/VModalContent.vue\"\nimport VSearchGridFilter from \"~/components/VFilters/VSearchGridFilter.vue\"\nimport VSearchTypes from \"~/components/VContentSwitcher/VSearchTypes.vue\"\nimport VShowResultsButton from \"~/components/VHeader/VHeaderMobile/VShowResultsButton.vue\"\nimport VTab from \"~/components/VTabs/VTab.vue\"\nimport VTabPanel from \"~/components/VTabs/VTabPanel.vue\"\nimport VTabs from \"~/components/VTabs/VTabs.vue\"\nimport VSafeBrowsing from \"~/components/VSafeBrowsing/VSafeBrowsing.vue\"\nimport VIconButton from \"~/components/VIconButton/VIconButton.vue\"\n\ntype ContentSettingsTab = \"content-settings\" | \"filters\"\n\nconst props = withDefaults(\n  defineProps<{\n    triggerElement?: HTMLElement | null\n    variant?: \"fit-content\" | \"two-thirds\"\n    isFetching?: boolean\n    close: () => void\n    visible?: boolean\n    showFilters?: boolean\n    useLinks?: boolean\n  }>(),\n  {\n    triggerElement: null,\n    variant: \"fit-content\",\n    isFetching: false,\n    visible: false,\n    showFilters: true,\n    useLinks: true,\n  }\n)\n\ndefineEmits<{ select: [SearchType] }>()\n\nconst searchStore = useSearchStore()\nconst content = useSearchType({ component: \"VContentSettingsModalContent\" })\nconst selectedTab = ref<ContentSettingsTab>(\"content-settings\")\nconst changeSelectedTab = (tab: string) => {\n  selectedTab.value = tab as ContentSettingsTab\n}\n\nconst showClearFiltersButton = computed(\n  () => props.showFilters && selectedTab.value === \"filters\"\n)\nconst isClearButtonDisabled = computed(() => !searchStore.isAnyFilterApplied)\nconst appliedFilterCount = computed<number>(\n  () => searchStore.appliedFilterCount\n)\n\nconst searchType = computed(() => content.getSearchTypeProps())\n\nconst clearFilters = () => {\n  searchStore.clearFilters()\n}\n</script>\n\n<template>\n  <VModalContent\n    :id=\"CONTENT_SETTINGS_DIALOG\"\n    :aria-label=\"$t('header.aria.menu')\"\n    :hide-on-click-outside=\"true\"\n    :hide=\"close\"\n    :visible=\"visible\"\n    :variant=\"variant\"\n    :trigger-element=\"triggerElement\"\n    class=\"flex items-center\"\n  >\n    <VTabs\n      :selected-id=\"selectedTab\"\n      tablist-style=\"ps-4 pe-2\"\n      variant=\"plain\"\n      label=\"content-settings\"\n      class=\"flex min-h-0 flex-col\"\n      @change=\"changeSelectedTab\"\n    >\n      <template #tabs>\n        <VTab\n          v-if=\"showFilters\"\n          id=\"content-settings\"\n          size=\"medium\"\n          class=\"me-4 gap-x-2\"\n          ><VIcon :name=\"searchType.searchType\" />\n          <h2 class=\"label-regular\">{{ $t(\"searchType.heading\") }}</h2></VTab\n        >\n        <h2\n          v-else\n          class=\"label-regular relative my-2 me-4 flex h-12 items-center gap-x-2 px-2 after:absolute after:bottom-[-0.625rem] after:right-1/2 after:h-0.5 after:w-full after:translate-x-1/2 after:translate-y-[-50%] after:bg-tertiary\"\n        >\n          <VIcon :name=\"searchType.searchType\" />\n          {{ $t(\"searchType.heading\") }}\n        </h2>\n        <VFilterTab\n          v-if=\"showFilters\"\n          :applied-filter-count=\"appliedFilterCount\"\n        />\n        <VIconButton\n          :label=\"$t('modal.closeContentSettings')\"\n          :icon-props=\"{ name: 'close' }\"\n          variant=\"transparent-gray\"\n          size=\"large\"\n          class=\"ms-auto self-center\"\n          @click=\"close\"\n        />\n      </template>\n      <VTabPanel id=\"content-settings\" class=\"border-overlay\">\n        <VSearchTypes\n          size=\"medium\"\n          :use-links=\"useLinks\"\n          @select=\"$emit('select', $event)\"\n        />\n      </VTabPanel>\n      <!-- Horizontal padding removed to display divider. -->\n      <VTabPanel v-if=\"showFilters\" id=\"filters\" class=\"border-overlay px-0\">\n        <VSearchGridFilter\n          class=\"px-6\"\n          :show-filter-header=\"false\"\n          :change-tab-order=\"false\"\n        />\n        <VSafeBrowsing class=\"border-t border-default px-6 pt-6\" />\n      </VTabPanel>\n    </VTabs>\n    <footer\n      v-if=\"showFilters\"\n      class=\"mt-auto flex h-20 flex-shrink-0 items-center justify-between border-t border-t-default p-4\"\n    >\n      <VButton\n        v-show=\"showClearFiltersButton\"\n        variant=\"transparent-gray\"\n        class=\"label-bold !text-link disabled:!text-disabled\"\n        :disabled=\"isClearButtonDisabled\"\n        size=\"large\"\n        @click=\"clearFilters\"\n        >{{ $t(\"filterList.clear\") }}\n      </VButton>\n      <VShowResultsButton :is-fetching=\"isFetching\" @click=\"close\" />\n    </footer>\n  </VModalContent>\n</template>\n"],"names":["props","__props","emit","__emit","t","useI18n","itemLabel","item","onValueChange","value","getLicenseExplanationCloseAria","license","descriptions","getElements","icon","element","close","isDisabled","useSearchStore","isLicense","code","getTitle","searchStore","$sendCustomEvent","useNuxtApp","isAnyFilterApplied","searchTerm","searchType","filters","storeToRefs","filterTypes","computed","filterTypeTitle","filterType","toggleFilter","checked","clearFilters","content","useSearchType","selectedTab","ref","changeSelectedTab","tab","showClearFiltersButton","isClearButtonDisabled","appliedFilterCount"],"mappings":"k5CAoBA,MAAMA,EAAQC,EAYRC,EAAOC,EAIP,CAAE,EAAAC,CAAE,EAAIC,EAAQ,CAAE,SAAU,SAAU,EAEtCC,EAAaC,GACjB,CAAC,iBAAkB,gBAAgB,EAAE,QAAQP,EAAM,UAAU,EAAI,GAC7DO,EAAK,KACLH,EAAEG,EAAK,IAAI,EAEXC,EAAgB,CAAC,CAAE,MAAAC,KAA+B,CACtDP,EAAK,gBAAiB,CACpB,KAAMO,EACN,WAAYT,EAAM,UAAA,CACnB,CACH,EACMU,EAAkCC,GAAqB,CAE3D,MAAMC,EADWC,EAAYF,CAAO,EAAE,OAAQG,GAASA,IAAS,IAAI,EAEjE,IAAKC,GAAYX,EAAE,iCAAiCW,CAAO,EAAE,CAAC,EAC9D,KAAK,GAAG,EACLC,EAAQZ,EAAE,mBAAoB,CAClC,KAAMA,EAAE,oCAAoC,CAAA,CAC7C,EACM,MAAA,GAAGQ,CAAY,MAAMI,CAAK,EACnC,EAEMC,EAAcV,GAClBW,IAAiB,iBAAiBX,EAAMP,EAAM,UAAU,GAAKA,EAAM,SAE/DmB,EAAaC,GAEV,CAAC,CAACA,GAAQpB,EAAM,aAAe,WAGlCqB,EAAYD,GACTD,EAAUC,CAAI,EACjBhB,EAAE,8CAA8C,EAChDA,EAAE,4CAA6C,CAC7C,KAAMgB,EAAK,YAAY,CAAA,CACxB,kgECzCP,MAAME,EAAcJ,EAAe,EAE7B,CAAE,EAAAd,CAAE,EAAIC,EAAQ,CAAE,SAAU,SAAU,EAEtC,CAAE,iBAAAkB,CAAiB,EAAIC,EAAW,EAElC,CACJ,mBAAAC,EACA,WAAAC,EACA,WAAAC,EACA,cAAeC,CAAA,EACbC,EAAYP,CAAW,EAErBQ,EAAcC,EAClB,IAAM,OAAO,KAAKH,EAAQ,KAAK,CACjC,EACMI,EAAmBC,GAChB7B,EAAE,WAAW6B,CAAU,QAAQ,EAGlCC,EAAe,CAAC,CACpB,WAAAD,EACA,KAAAb,CAAA,IAII,CACJ,MAAMe,EAAUb,EAAY,aAAa,CAAE,WAAAW,EAAY,KAAAb,EAAM,EAC7DG,EAAiB,eAAgB,CAC/B,SAAUU,EACV,IAAKb,EACL,QAAAe,EACA,WAAYR,EAAW,MACvB,MAAOD,EAAW,KAAA,CACnB,CACH,EAEMU,EAAe,IAAMd,EAAY,aAAa;;;84BC9CpD,MAAMtB,EAAQC,EAsBRqB,EAAcJ,EAAe,EAC7BmB,EAAUC,EAAc,CAAE,UAAW,+BAAgC,EACrEC,EAAcC,EAAwB,kBAAkB,EACxDC,EAAqBC,GAAgB,CACzCH,EAAY,MAAQG,CACtB,EAEMC,EAAyBZ,EAC7B,IAAM/B,EAAM,aAAeuC,EAAY,QAAU,SACnD,EACMK,EAAwBb,EAAS,IAAM,CAACT,EAAY,kBAAkB,EACtEuB,EAAqBd,EACzB,IAAMT,EAAY,kBACpB,EAEMK,EAAaI,EAAS,IAAMM,EAAQ,oBAAoB,EAExDD,EAAe,IAAM,CACzBd,EAAY,aAAa,CAC3B"}