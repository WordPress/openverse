{"version":3,"file":"CAa63J2U.js","sources":["../../shared/constants/media.ts"],"sourcesContent":["/* Media types */\n\nexport const IMAGE = \"image\"\nexport const AUDIO = \"audio\"\nexport const VIDEO = \"video\"\nexport const MODEL_3D = \"model-3d\"\nexport const ALL_MEDIA = \"all\"\n\n/**\n * all existing media types\n */\nexport const mediaTypes = [IMAGE, AUDIO, VIDEO, MODEL_3D] as const\n\nexport type MediaType = (typeof mediaTypes)[number]\n\n/**\n * real media types that the API supports;\n * - `ALL_MEDIA` is not an option here.\n * - These types also support custom filters.\n * - `IMAGE` should always be first here.\n */\nexport const supportedMediaTypes = [IMAGE, AUDIO] as const\n\nexport type SupportedMediaType = (typeof supportedMediaTypes)[number]\n\nexport const searchTypes = [ALL_MEDIA, ...mediaTypes] as const\n\nexport type SearchType = (typeof searchTypes)[number]\n\n/**\n * the types of content that users can search; `ALL_MEDIA` is also a valid\n * option here.\n */\nexport const supportedSearchTypes = [ALL_MEDIA, ...supportedMediaTypes] as const\n\nexport type SupportedSearchType = (typeof supportedSearchTypes)[number]\n\nexport type AdditionalSearchType = Exclude<SearchType, SupportedSearchType>\n\nexport const additionalSearchTypes: readonly AdditionalSearchType[] = [\n  VIDEO,\n  MODEL_3D,\n] as const\n\nexport function isAdditionalSearchType(\n  searchType: SearchType\n): searchType is AdditionalSearchType {\n  return (additionalSearchTypes as readonly string[]).includes(searchType)\n}\n\nexport function isSupportedMediaType(\n  searchType: string\n): searchType is SupportedMediaType {\n  return supportedMediaTypes.includes(searchType as SupportedMediaType)\n}\n/* Media support */\n\nexport const SUPPORTED = \"supported\" // Native search\nexport const BETA = \"beta\" // Native but incomplete search\nexport const ADDITIONAL = \"additional\" // Meta search\n\nexport const contentStatus = Object.freeze({\n  [ALL_MEDIA]: SUPPORTED,\n  [IMAGE]: SUPPORTED,\n  [AUDIO]: SUPPORTED,\n  [VIDEO]: ADDITIONAL,\n  [MODEL_3D]: ADDITIONAL,\n} as const)\n\nexport const searchPath = (type: SearchType) => {\n  return `/search${type === ALL_MEDIA ? \"\" : \"/\" + type}`\n}\n"],"names":["IMAGE","AUDIO","VIDEO","MODEL_3D","ALL_MEDIA","mediaTypes","supportedMediaTypes","searchTypes","supportedSearchTypes","additionalSearchTypes","isAdditionalSearchType","searchType","isSupportedMediaType","SUPPORTED","BETA","ADDITIONAL","contentStatus","searchPath","type"],"mappings":"+UAEO,MAAMA,EAAQ,QACRC,EAAQ,QACRC,EAAQ,QACRC,EAAW,WACXC,EAAY,MAKZC,EAAa,CAACL,EAAOC,EAAOC,EAAOC,CAAQ,EAU3CG,EAAsB,CAACN,EAAOC,CAAK,EAInCM,EAAc,CAACH,EAAW,GAAGC,CAAU,EAQvCG,EAAuB,CAACJ,EAAW,GAAGE,CAAmB,EAMzDG,EAAyD,CACpEP,EACAC,CACF,EAEO,SAASO,EACdC,EACoC,CAC5B,OAAAF,EAA4C,SAASE,CAAU,CACzE,CAEO,SAASC,EACdD,EACkC,CAC3B,OAAAL,EAAoB,SAASK,CAAgC,CACtE,CAGO,MAAME,EAAY,YACZC,EAAO,OACPC,EAAa,aAEbC,EAAgB,OAAO,OAAO,CACzC,CAACZ,CAAS,EAAGS,EACb,CAACb,CAAK,EAAGa,EACT,CAACZ,CAAK,EAAGY,EACT,CAACX,CAAK,EAAGa,EACT,CAACZ,CAAQ,EAAGY,CACd,CAAU,EAEGE,EAAcC,GAClB,UAAUA,IAASd,EAAY,GAAK,IAAMc,CAAI"}