{"version":3,"file":"spf4UVqw.js","sources":["../../src/components/VLoadMore.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { useI18n, useNuxtApp, useRoute } from \"#imports\"\nimport { computed, onMounted, ref, watch } from \"vue\"\n\nimport { storeToRefs } from \"pinia\"\nimport { useElementVisibility } from \"@vueuse/core\"\n\nimport type { SupportedSearchType } from \"#shared/constants/media\"\nimport type { SingleResultProps } from \"#shared/types/collection-component-props\"\nimport { useMediaStore } from \"~/stores/media\"\nimport { useSearchStore } from \"~/stores/search\"\n\nimport VButton from \"~/components/VButton.vue\"\n\nconst props = defineProps<\n  SingleResultProps & {\n    searchType: SupportedSearchType\n    isFetching: boolean\n  }\n>()\n\nconst emit = defineEmits<{\n  \"load-more\": []\n}>()\n\nconst loadMoreSectionRef = ref(null)\nconst route = useRoute()\nconst { t } = useI18n({ useScope: \"global\" })\nconst mediaStore = useMediaStore()\nconst searchStore = useSearchStore()\nconst { $sendCustomEvent } = useNuxtApp()\n\nconst { currentPage } = storeToRefs(mediaStore)\n\nconst eventPayload = computed(() => {\n  return {\n    ...searchStore.searchParamsForEvent,\n    resultPage: currentPage.value || 1,\n  }\n})\n\n/**\n * Whether we should show the \"Load more\" button.\n * If the fetching for the current query has started, there is at least\n * 1 page of results, there has been no fetching error, and there are\n * more results to fetch, we show the button.\n */\nconst canLoadMore = computed(() => mediaStore.canLoadMore)\n\nconst reachResultEndEventSent = ref(false)\n/**\n * On button click, send the analytics events and emit `load-more` event.\n *\n * The button is disabled when we are fetching, but we still check\n * whether we are currently fetching to be sure we don't fetch multiple times.\n *\n */\nconst onLoadMore = async () => {\n  if (props.isFetching) {\n    return\n  }\n\n  reachResultEndEventSent.value = false\n\n  $sendCustomEvent(\"LOAD_MORE_RESULTS\", eventPayload.value)\n\n  emit(\"load-more\")\n}\n\nconst sendReachResultEnd = () => {\n  // This function can be called before the media is fetched and\n  // currentPage is updated from 0, so we use the value or 1.\n  // The currentPage can never be 0 here because then the loadMore\n  // button would not be visible.\n  $sendCustomEvent(\"REACH_RESULT_END\", eventPayload.value)\n}\n\nconst buttonLabel = computed(() =>\n  props.isFetching ? t(\"browsePage.loading\") : t(\"browsePage.load\")\n)\nconst mainPageElement = ref<HTMLElement | null>(null)\nonMounted(() => {\n  mainPageElement.value = document.getElementById(\"main-page\")\n})\nconst isLoadMoreButtonVisible = useElementVisibility(loadMoreSectionRef, {\n  scrollTarget: mainPageElement,\n})\n\n// Reset the reachResultEndEvent whenever the route changes,\n// to make sure the result end is tracked properly whenever\n// the search query or content type changes\nwatch(route, () => {\n  reachResultEndEventSent.value = false\n})\n\nwatch(isLoadMoreButtonVisible, (isVisible) => {\n  if (isVisible) {\n    if (reachResultEndEventSent.value) {\n      return\n    }\n    sendReachResultEnd()\n    reachResultEndEventSent.value = true\n  }\n})\n</script>\n\n<template>\n  <div ref=\"loadMoreSectionRef\" class=\"w-full\">\n    <VButton\n      v-show=\"canLoadMore\"\n      class=\"label-bold lg:description-bold h-16 w-full lg:h-18\"\n      variant=\"filled-gray\"\n      size=\"disabled\"\n      :disabled=\"isFetching\"\n      data-testid=\"load-more\"\n      @click=\"onLoadMore\"\n    >\n      {{ buttonLabel }}\n    </VButton>\n  </div>\n</template>\n"],"names":["props","__props","emit","__emit","loadMoreSectionRef","ref","route","useRoute","t","useI18n","mediaStore","useMediaStore","searchStore","useSearchStore","$sendCustomEvent","useNuxtApp","currentPage","storeToRefs","eventPayload","computed","canLoadMore","reachResultEndEventSent","onLoadMore","sendReachResultEnd","buttonLabel","mainPageElement","onMounted","isLoadMoreButtonVisible","useElementVisibility","watch","isVisible"],"mappings":"u0BAcA,MAAMA,EAAQC,EAORC,EAAOC,EAIPC,EAAqBC,EAAI,IAAI,EAC7BC,EAAQC,EAAS,EACjB,CAAE,EAAAC,CAAE,EAAIC,EAAQ,CAAE,SAAU,SAAU,EACtCC,EAAaC,EAAc,EAC3BC,EAAcC,EAAe,EAC7B,CAAE,iBAAAC,CAAiB,EAAIC,EAAW,EAElC,CAAE,YAAAC,CAAA,EAAgBC,EAAYP,CAAU,EAExCQ,EAAeC,EAAS,KACrB,CACL,GAAGP,EAAY,qBACf,WAAYI,EAAY,OAAS,CACnC,EACD,EAQKI,EAAcD,EAAS,IAAMT,EAAW,WAAW,EAEnDW,EAA0BhB,EAAI,EAAK,EAQnCiB,EAAa,SAAY,CACzBtB,EAAM,aAIVqB,EAAwB,MAAQ,GAEfP,EAAA,oBAAqBI,EAAa,KAAK,EAExDhB,EAAK,WAAW,EAClB,EAEMqB,EAAqB,IAAM,CAKdT,EAAA,mBAAoBI,EAAa,KAAK,CACzD,EAEMM,EAAcL,EAAS,IAC3BnB,EAAM,WAAaQ,EAAE,oBAAoB,EAAIA,EAAE,iBAAiB,CAClE,EACMiB,EAAkBpB,EAAwB,IAAI,EACpDqB,EAAU,IAAM,CACED,EAAA,MAAQ,SAAS,eAAe,WAAW,CAAA,CAC5D,EACK,MAAAE,EAA0BC,EAAqBxB,EAAoB,CACvE,aAAcqB,CAAA,CACf,EAKD,OAAAI,EAAMvB,EAAO,IAAM,CACjBe,EAAwB,MAAQ,EAAA,CACjC,EAEKQ,EAAAF,EAA0BG,GAAc,CAC5C,GAAIA,EAAW,CACb,GAAIT,EAAwB,MAC1B,OAEiBE,EAAA,EACnBF,EAAwB,MAAQ,EAAA,CAClC,CACD"}