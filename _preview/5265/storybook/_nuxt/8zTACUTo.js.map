{"version":3,"file":"8zTACUTo.js","sources":["../../src/composables/use-popover-content.ts","../../src/components/VPopover/VPopoverContent.vue"],"sourcesContent":["import { computed, ref } from \"vue\"\nimport type { Ref, ToRefs, SetupContext } from \"vue\"\n\nimport { useFloatingUi } from \"~/composables/use-floating-ui\"\nimport { useDialogContent } from \"~/composables/use-dialog-content\"\n\nimport type { Properties as CSSProperties } from \"csstype\"\nimport type { Placement, Strategy } from \"@floating-ui/dom\"\n\nexport type PopoverContentProps = {\n  id: string\n  visible: boolean\n  hide: () => void\n  hideOnEsc: boolean\n  hideOnClickOutside: boolean\n  autoFocusOnShow: boolean\n  autoFocusOnHide: boolean\n  triggerElement: HTMLElement | null\n  placement: Placement\n  strategy: Strategy\n  clippable: boolean\n  trapFocus: boolean\n  zIndex: number | string\n}\ntype Props = {\n  popoverRef: Ref<HTMLElement | null>\n  popoverPropsRefs: ToRefs<PopoverContentProps>\n  emit: SetupContext[\"emit\"]\n  attrs: SetupContext[\"attrs\"]\n}\n\nexport function usePopoverContent({\n  popoverRef,\n  popoverPropsRefs,\n  emit,\n  attrs,\n}: Props) {\n  const { onKeyDown, onBlur } = useDialogContent({\n    visibleRef: popoverPropsRefs.visible,\n    hideRef: popoverPropsRefs.hide,\n    dialogElements: {\n      dialogRef: popoverRef,\n      triggerElementRef: popoverPropsRefs.triggerElement,\n      initialFocusElementRef: ref(null),\n    },\n    dialogOptions: {\n      autoFocusOnShowRef: popoverPropsRefs.autoFocusOnShow,\n      autoFocusOnHideRef: popoverPropsRefs.autoFocusOnHide,\n      hideOnClickOutsideRef: popoverPropsRefs.hideOnClickOutside,\n      hideOnEscRef: popoverPropsRefs.hideOnEsc,\n      trapFocusRef: popoverPropsRefs.trapFocus,\n    },\n    emit,\n    attrs,\n  })\n\n  const { style, maxHeightRef } = useFloatingUi({\n    floatingElRef: popoverRef,\n    floatingPropsRefs: popoverPropsRefs,\n  })\n\n  const heightProperties = computed(() => {\n    // extracting this to ensure that computed is updated when the value changes\n    const maxHeight = maxHeightRef.value\n\n    return maxHeight && popoverPropsRefs.clippable\n      ? ({ \"--popover-height\": `${maxHeight}px` } as CSSProperties)\n      : ({} as CSSProperties)\n  })\n\n  return { onKeyDown, onBlur, style, heightProperties }\n}\n","<script setup lang=\"ts\">\nimport { provide, ref, toRefs, useAttrs } from \"vue\"\nimport type { SetupContext } from \"vue\"\n\nimport type { ZIndex } from \"#shared/constants/z-indices\"\nimport { VPopoverContentContextKey } from \"#shared/types/provides\"\nimport { usePopoverContent } from \"~/composables/use-popover-content\"\n\nimport type { Placement, Strategy } from \"@floating-ui/dom\"\n\nconst props = withDefaults(\n  defineProps<{\n    id: string\n    visible: boolean\n    hide: () => void\n    hideOnEsc?: boolean\n    hideOnClickOutside?: boolean\n    autoFocusOnShow?: boolean\n    autoFocusOnHide?: boolean\n    triggerElement: HTMLElement | null\n    placement?: Placement\n    strategy?: Strategy\n    zIndex: ZIndex\n    clippable?: boolean\n    trapFocus?: boolean\n  }>(),\n  {\n    hideOnEsc: true,\n    hideOnClickOutside: true,\n    autoFocusOnShow: true,\n    autoFocusOnHide: true,\n    placement: \"bottom-end\",\n    strategy: \"absolute\",\n    clippable: false,\n    trapFocus: true,\n  }\n)\n\n/**\n * This is the only documented emitted event but in reality we pass through `$listeners`\n * to the underlying element so anything and everything is emitted. `@keydown` is the\n * only one this component overrides and controls (but ultimately still emits).\n */\nconst emit = defineEmits<{ keydown: []; blur: [] }>()\n\nconst attrs = useAttrs()\n\nprovide(VPopoverContentContextKey, true)\n\nconst propsRefs = toRefs(props)\nconst popoverRef = ref<HTMLElement | null>(null)\n\nconst { onKeyDown, onBlur, heightProperties, style } = usePopoverContent({\n  popoverRef,\n  popoverPropsRefs: propsRefs,\n  emit: emit as SetupContext[\"emit\"],\n  attrs,\n})\n</script>\n\n<template>\n  <div\n    v-show=\"visible\"\n    :id=\"id\"\n    ref=\"popoverRef\"\n    role=\"dialog\"\n    aria-modal=\"true\"\n    class=\"popover-content w-max-content absolute left-0 top-0 overflow-y-auto overflow-x-hidden rounded-sm border border-overlay bg-overlay shadow\"\n    :class=\"`z-${zIndex}`\"\n    :style=\"{ ...heightProperties, ...style }\"\n    :tabindex=\"-1\"\n    :aria-hidden=\"!visible\"\n    @blur=\"onBlur\"\n    @keydown=\"onKeyDown\"\n  >\n    <slot />\n  </div>\n</template>\n\n<style>\n.popover-content {\n  height: var(--popover-height, auto);\n}\n</style>\n"],"names":["usePopoverContent","popoverRef","popoverPropsRefs","emit","attrs","onKeyDown","onBlur","useDialogContent","ref","style","maxHeightRef","useFloatingUi","heightProperties","computed","maxHeight","props","__props","__emit","useAttrs","provide","VPopoverContentContextKey","propsRefs","toRefs"],"mappings":"mjBA+BO,SAASA,EAAkB,CAChC,WAAAC,EACA,iBAAAC,EACA,KAAAC,EACA,MAAAC,CACF,EAAU,CACR,KAAM,CAAE,UAAAC,EAAW,OAAAC,CAAO,EAAIC,EAAiB,CAC7C,WAAYL,EAAiB,QAC7B,QAASA,EAAiB,KAC1B,eAAgB,CACd,UAAWD,EACX,kBAAmBC,EAAiB,eACpC,uBAAwBM,EAAI,IAAI,CAClC,EACA,cAAe,CACb,mBAAoBN,EAAiB,gBACrC,mBAAoBA,EAAiB,gBACrC,sBAAuBA,EAAiB,mBACxC,aAAcA,EAAiB,UAC/B,aAAcA,EAAiB,SACjC,EACA,KAAAC,EACA,MAAAC,CAAA,CACD,EAEK,CAAE,MAAAK,EAAO,aAAAC,CAAa,EAAIC,EAAc,CAC5C,cAAeV,EACf,kBAAmBC,CAAA,CACpB,EAEKU,EAAmBC,EAAS,IAAM,CAEtC,MAAMC,EAAYJ,EAAa,MAExB,OAAAI,GAAaZ,EAAiB,UAChC,CAAE,mBAAoB,GAAGY,CAAS,IAAK,EACvC,CAAC,CAAA,CACP,EAED,MAAO,CAAE,UAAAT,EAAW,OAAAC,EAAQ,MAAAG,EAAO,iBAAAG,CAAiB,CACtD,4dC7DA,MAAMG,EAAQC,EAiCRb,EAAOc,EAEPb,EAAQc,EAAS,EAEvBC,EAAQC,EAA2B,EAAI,EAEjC,MAAAC,EAAYC,EAAOP,CAAK,EACxBd,EAAaO,EAAwB,IAAI,EAEzC,CAAE,UAAAH,EAAW,OAAAC,EAAQ,iBAAAM,EAAkB,MAAAH,CAAA,EAAUT,EAAkB,CACvE,WAAAC,EACA,iBAAkBoB,EAClB,KAAAlB,EACA,MAAAC,CAAA,CACD"}