{"version":3,"file":"C3HtXTXt.js","sources":["../../src/components/VHeader/VHeaderMobile/VHeaderMobile.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { useNuxtApp, useRoute, useRouter } from \"#imports\"\nimport {\n  computed,\n  nextTick,\n  ref,\n  type SetupContext,\n  useTemplateRef,\n  watch,\n} from \"vue\"\n\nimport { onClickOutside } from \"@vueuse/core\"\n\nimport {\n  CONTENT_SETTINGS_DIALOG,\n  RECENT_SEARCHES_DIALOG,\n} from \"#shared/constants/dialogs\"\nimport { skipToContentTargetId } from \"#shared/constants/window\"\nimport { firstParam } from \"#shared/utils/query-utils\"\nimport {\n  ensureFocus,\n  getAllTabbableIn,\n  getFirstTabbableIn,\n} from \"~/utils/reakit-utils/focus\"\nimport { focusIn } from \"~/utils/focus-management\"\nimport { useMediaStore } from \"~/stores/media\"\nimport { useSearchStore } from \"~/stores/search\"\nimport { useDialogControl } from \"~/composables/use-dialog-control\"\nimport { useSearch } from \"~/composables/use-search\"\nimport { useHydrating } from \"~/composables/use-hydrating\"\nimport { useRecentSearches } from \"~/composables/use-recent-searches\"\n\nimport VLogoButton from \"~/components/VHeader/VLogoButton.vue\"\nimport VContentSettingsModalContent from \"~/components/VHeader/VHeaderMobile/VContentSettingsModalContent.vue\"\nimport VContentSettingsButton from \"~/components/VHeader/VHeaderMobile/VContentSettingsButton.vue\"\nimport VRecentSearches from \"~/components/VRecentSearches/VRecentSearches.vue\"\nimport VSearchBarButton from \"~/components/VHeader/VHeaderMobile/VSearchBarButton.vue\"\n\n/**\n * Displays a text field for a search query and is attached to an action button\n * that fires a search request. The loading state and number of hits are also\n * displayed in the bar itself.\n */\n\nconst searchInputRef = useTemplateRef(\"searchInputRef\")\nconst headerRef = useTemplateRef(\"headerRef\")\nconst recentSearchesRef =\n  useTemplateRef<InstanceType<typeof VRecentSearches>>(\"recentSearchesRef\")\nconst contentSettingsButtonRef = useTemplateRef<\n  InstanceType<typeof VContentSettingsButton>\n>(\"contentSettingsButtonRef\")\nconst contentSettingsButton = computed(\n  () => (contentSettingsButtonRef.value?.$el as HTMLElement) ?? undefined\n)\nconst clearButtonRef =\n  useTemplateRef<InstanceType<typeof VSearchBarButton>>(\"clearButtonRef\")\n\nconst mediaStore = useMediaStore()\nconst searchStore = useSearchStore()\n\nconst isSearchBarActive = ref(false)\nconst isInputFocused = ref(false)\nconst contentSettingsOpen = ref(false)\n\nconst appliedFilterCount = computed(() => searchStore.appliedFilterCount)\nconst isFetching = computed(() => mediaStore.fetchState.isFetching)\n\n/**\n * The selection range of the input field. Used to make sure that the cursor\n * is at the correct position when the search bar is clicked on.\n */\nconst selection = ref<{ start: number; end: number }>({ start: 0, end: 0 })\n\nconst { $sendCustomEvent } = useNuxtApp()\nconst { updateSearchState, searchTerm, searchStatus } =\n  useSearch($sendCustomEvent)\nconst localSearchTerm = ref(searchTerm.value)\n\nconst focusInput = () => {\n  const input = searchInputRef.value\n  if (!input) {\n    return\n  }\n  ensureFocus(input)\n  input.selectionStart = selection.value.start\n  input.selectionEnd = selection.value.end\n}\n\nconst handleFormSubmit = () => {\n  if (localSearchTerm.value && localSearchTerm.value !== searchTerm.value) {\n    searchTerm.value = localSearchTerm.value\n  }\n  hideRecentSearches()\n  handleSearch()\n}\nconst handleSearch = () => {\n  window.scrollTo({ top: 0, left: 0, behavior: \"auto\" })\n  updateSearchState()\n}\n\n/**\n * Activate the search bar and open the recent searches modal.\n */\nconst activate = () => {\n  isInputFocused.value = true\n  isSearchBarActive.value = true\n  if (!isRecentVisible.value) {\n    showRecentSearches()\n  }\n}\n\n/** Deactivate the search bar */\nconst deactivate = () => {\n  isInputFocused.value = false\n  isSearchBarActive.value = false\n}\n\n/**\n * Set the selection range of the input field to the saved value.\n * This is necessary because when opening the recent search modal,\n * the input field is blurred and focused again.\n */\nconst updateSelection = () => {\n  const inputElement = searchInputRef.value\n  if (!inputElement) {\n    return\n  }\n  const lastPos =\n    inputElement.value.length > 0 ? inputElement.value.length - 1 : 0\n  selection.value = {\n    start: inputElement.selectionStart ?? lastPos,\n    end: inputElement.selectionEnd ?? lastPos,\n  }\n}\n\n/**\n * When the user tabs into the input field, the `isInputFocused` is set to true,\n * but the search bar is not activated until the user types something.\n *\n * On the `input` event, update the search term and the selection range,\n * and activate the search bar.\n */\nconst updateSearchText = () => {\n  const inputElement = searchInputRef.value\n  if (!inputElement) {\n    return\n  }\n  localSearchTerm.value = inputElement.value\n  updateSelection()\n  if (isInputFocused.value && !isSearchBarActive.value) {\n    activate()\n  }\n}\n\nconst clearSearchText = () => {\n  localSearchTerm.value = \"\"\n  focusInput()\n}\n\nconst {\n  handleKeydown: handleInputKeydown,\n  handleSelect,\n  handleClear,\n  recent: {\n    isVisible: isRecentVisible,\n    show: showRecentSearches,\n    hide: hideRecentSearches,\n    entries,\n    selectedIdx,\n  },\n} = useRecentSearches({\n  focusInput,\n  term: localSearchTerm,\n  isMobile: true,\n  isInputFocused,\n})\n\nwatch(isRecentVisible, (isVisible) => {\n  if (!isVisible) {\n    deactivate()\n    if (localSearchTerm.value !== searchTerm.value) {\n      searchTerm.value = localSearchTerm.value\n      handleSearch()\n    }\n  }\n})\n\nconst handleInputFocus = () => (isInputFocused.value = true)\nconst handleInputBlur = () => {\n  if (!isRecentVisible.value && isInputFocused.value) {\n    deactivate()\n  }\n}\n\n/**\n * Deactivate the search bar when the user clicks outside the header,\n * but not when the click is inside the recent searches modal.\n */\nonClickOutside(headerRef, (event) => {\n  const clickInsideModal = recentSearchesRef.value?.$el?.contains(\n    event.target as Node\n  )\n  if (!clickInsideModal) {\n    isInputFocused.value = false\n  }\n})\n\n/**\n * When activating the search bar by clicking, preserve the cursor position.\n */\nconst handleInputClick = () => {\n  if (!isSearchBarActive.value) {\n    updateSelection()\n    activate()\n  }\n}\n\n/**\n * Special handling of focus order after leaving the search bar because\n * the input modal is inserted into the page and change the HTML elements order.\n * @param direction\n */\nconst handleTabOut = (direction: \"forward\" | \"backward\") => {\n  hideRecentSearches()\n  nextTick().then(() => {\n    const element =\n      direction === \"forward\"\n        ? document.getElementById(skipToContentTargetId)\n        : getAllTabbableIn(document.body)[1]\n    ensureFocus(element ?? (getFirstTabbableIn(document.body) as HTMLElement))\n  })\n}\n\nconst emit = defineEmits<{\n  open: []\n  close: []\n}>() as SetupContext[\"emit\"]\n\nconst {\n  close: closeContentSettings,\n  onTriggerClick: toggleContentSettings,\n  triggerA11yProps,\n} = useDialogControl({\n  id: CONTENT_SETTINGS_DIALOG,\n  visibleRef: contentSettingsOpen,\n  nodeRef: headerRef,\n  lockBodyScroll: true,\n  emit,\n})\n\nconst route = useRoute()\nconst routeSearchTerm = computed(() => firstParam(route?.query.q))\nwatch(routeSearchTerm, (newSearchTerm) => {\n  localSearchTerm.value = newSearchTerm ?? \"\"\n})\n\nconst { doneHydrating } = useHydrating()\n\nconst router = useRouter()\nrouter.beforeEach((to, from, next) => {\n  if (to.path !== from.path) {\n    closeContentSettings()\n    deactivate()\n  }\n  next()\n})\n\nconst handleTab = (\n  event: KeyboardEvent & { key: \"Tab\" },\n  button: \"content-settings\" | \"clear-input\"\n) => {\n  if (isRecentVisible.value) {\n    event.preventDefault()\n    const element = recentSearchesRef.value?.$el\n    if (element) {\n      focusIn(element, 1)\n    }\n  } else if (button === \"content-settings\") {\n    handleTabOut(\"forward\")\n  }\n}\n</script>\n\n<template>\n  <header\n    ref=\"headerRef\"\n    class=\"main-header z-30 flex w-full items-center px-6 py-4\"\n  >\n    <!-- Form action is a fallback for when JavaScript is disabled. -->\n    <form\n      action=\"/search\"\n      class=\"search-bar group flex h-12 w-full flex-row items-center overflow-hidden rounded-sm\"\n      :class=\"\n        isSearchBarActive || isInputFocused\n          ? 'bg-default ring ring-focus'\n          : 'bg-surface'\n      \"\n      @submit.prevent=\"handleFormSubmit\"\n    >\n      <slot name=\"start\">\n        <VLogoButton\n          v-show=\"!isRecentVisible\"\n          :is-fetching=\"isFetching\"\n          class=\"focus-visible:me-1.5px focus-visible:ms-1.5px focus-visible:!h-[45px] focus-visible:max-w-[45px]\"\n        />\n        <VSearchBarButton\n          v-show=\"isRecentVisible\"\n          icon=\"chevron-back\"\n          :label=\"$t('header.backButton')\"\n          :rtl-flip=\"true\"\n          variant=\"filled-gray\"\n          @click=\"hideRecentSearches\"\n          @keydown.shift.tab=\"handleTabOut('backward')\"\n        />\n      </slot>\n\n      <input\n        id=\"search-bar\"\n        ref=\"searchInputRef\"\n        name=\"q\"\n        :placeholder=\"$t('hero.search.placeholder')\"\n        type=\"search\"\n        class=\"search-field ms-1 h-full w-full flex-grow appearance-none rounded-none border-tx bg-tx text-2xl text-secondary placeholder-default hover:text-default focus-visible:outline-none\"\n        :value=\"localSearchTerm\"\n        :aria-label=\"\n          $t('search.searchBarLabel', {\n            openverse: 'Openverse',\n          })\n        \"\n        autocomplete=\"off\"\n        role=\"combobox\"\n        aria-autocomplete=\"list\"\n        :aria-expanded=\"isRecentVisible ? 'true' : 'false'\"\n        aria-controls=\"recent-searches-list\"\n        aria-haspopup=\"listbox\"\n        :aria-activedescendant=\"\n          selectedIdx === undefined ? undefined : `option-${selectedIdx}`\n        \"\n        @input=\"updateSearchText\"\n        @keydown=\"handleInputKeydown\"\n        @focus=\"handleInputFocus\"\n        @focusout=\"handleInputBlur\"\n        @click=\"handleInputClick\"\n      />\n      <VSearchBarButton\n        v-show=\"isRecentVisible && localSearchTerm\"\n        ref=\"clearButtonRef\"\n        icon=\"close-small\"\n        :label=\"$t('browsePage.searchForm.clear')\"\n        @click=\"clearSearchText\"\n        @keydown.tab.exact=\"handleTab($event, 'clear-input')\"\n      />\n      <span\n        v-show=\"!isSearchBarActive && searchStatus\"\n        class=\"info mx-4 hidden whitespace-nowrap text-xs group-hover:text-default group-focus:text-default md:flex\"\n      >\n        {{ searchStatus }}\n      </span>\n      <VContentSettingsButton\n        v-show=\"!isRecentVisible\"\n        ref=\"contentSettingsButtonRef\"\n        :is-pressed=\"contentSettingsOpen\"\n        :applied-filter-count=\"appliedFilterCount\"\n        v-bind=\"triggerA11yProps\"\n        :disabled=\"!doneHydrating\"\n        @click=\"toggleContentSettings\"\n        @keydown.tab.exact=\"handleTab($event, 'content-settings')\"\n      />\n      <VContentSettingsModalContent\n        variant=\"two-thirds\"\n        :visible=\"contentSettingsOpen\"\n        :is-fetching=\"isFetching\"\n        :close=\"closeContentSettings\"\n        :trigger-element=\"contentSettingsButton\"\n        labelledby=\"content-settings-button\"\n      />\n    </form>\n    <VModalContent\n      v-if=\"isRecentVisible\"\n      :id=\"RECENT_SEARCHES_DIALOG\"\n      :visible=\"true\"\n      :hide=\"deactivate\"\n      :trigger-element=\"searchInputRef\"\n      :trap-focus=\"false\"\n      :auto-focus-on-show=\"false\"\n      :auto-focus-on-hide=\"false\"\n      content-classes=\"px-3\"\n      :aria-label=\"$t('recentSearches.heading')\"\n      variant=\"mobile-input\"\n    >\n      <ClientOnly>\n        <VRecentSearches\n          ref=\"recentSearchesRef\"\n          class=\"w-[100dvw] px-3\"\n          :selected-idx=\"selectedIdx\"\n          :entries=\"entries\"\n          :bordered=\"false\"\n          @select=\"handleSelect\"\n          @clear=\"handleClear\"\n          @last-tab=\"handleTabOut('forward')\"\n        />\n      </ClientOnly>\n    </VModalContent>\n  </header>\n</template>\n"],"names":["searchInputRef","useTemplateRef","headerRef","recentSearchesRef","contentSettingsButtonRef","contentSettingsButton","computed","_a","clearButtonRef","mediaStore","useMediaStore","searchStore","useSearchStore","isSearchBarActive","ref","isInputFocused","contentSettingsOpen","appliedFilterCount","isFetching","selection","$sendCustomEvent","useNuxtApp","updateSearchState","searchTerm","searchStatus","useSearch","localSearchTerm","focusInput","input","ensureFocus","handleFormSubmit","hideRecentSearches","handleSearch","activate","isRecentVisible","showRecentSearches","deactivate","updateSelection","inputElement","lastPos","updateSearchText","clearSearchText","handleInputKeydown","handleSelect","handleClear","entries","selectedIdx","useRecentSearches","watch","isVisible","handleInputFocus","handleInputBlur","onClickOutside","event","_b","handleInputClick","handleTabOut","direction","nextTick","element","skipToContentTargetId","getAllTabbableIn","getFirstTabbableIn","emit","__emit","closeContentSettings","toggleContentSettings","triggerA11yProps","useDialogControl","CONTENT_SETTINGS_DIALOG","route","useRoute","routeSearchTerm","firstParam","newSearchTerm","doneHydrating","useHydrating","useRouter","to","from","next","handleTab","button","focusIn"],"mappings":"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"}