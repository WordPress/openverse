{"version":3,"file":"CYeZhaSj.js","sources":["../../src/composables/use-recent-searches.ts"],"sourcesContent":["import { computed, nextTick, ref, type Ref, watch } from \"vue\"\n\nimport { keycodes } from \"#shared/constants/key-codes\"\nimport { cyclicShift } from \"#shared/utils/math\"\nimport { useSearchStore } from \"~/stores/search\"\n\ntype VerticalArrow = typeof keycodes.ArrowUp | typeof keycodes.ArrowDown\ntype VerticalArrowEvent = KeyboardEvent & { key: VerticalArrow }\nexport const isVerticalArrowEvent = (\n  event: KeyboardEvent\n): event is VerticalArrowEvent => {\n  return event.key === keycodes.ArrowUp || event.key === keycodes.ArrowDown\n}\n\nexport const updateIndexOnVerticalArrow = (\n  key: VerticalArrow,\n  entriesCount: number,\n  selectedIdx: number | undefined\n) => {\n  const defaultValue = key === keycodes.ArrowUp ? 0 : -1\n  const offset = key === keycodes.ArrowUp ? -1 : 1\n  return cyclicShift(selectedIdx ?? defaultValue, offset, 0, entriesCount)\n}\n\nexport const useRecentSearches = ({\n  focusInput,\n  term,\n  isMobile,\n  isInputFocused,\n}: {\n  focusInput: () => void\n  term: Ref<string>\n  isMobile: boolean\n  isInputFocused?: Ref<boolean> | undefined\n}) => {\n  const searchStore = useSearchStore()\n  const isRecentVisible = ref(false)\n  /**\n   * Refers to the current suggestion that has visual focus (not DOM focus)\n   * and is the active descendant. This should be set to `undefined` when the\n   * visual focus is on the input field.\n   */\n  const selectedIdx = ref<number | undefined>(undefined)\n  const entries = computed(() => searchStore.recentSearches)\n\n  /**\n   * Revert the search term to the existing value if the entered value is blank.\n   */\n  const hideRecentSearches = () => {\n    isRecentVisible.value = false\n    if (term.value === \"\" && searchStore.searchTerm !== \"\") {\n      term.value = searchStore.searchTerm\n    }\n  }\n\n  /**\n   * Focus the search bar when opening the modal.\n   * `nextTick` is necessary to ensure focus in Firefox\n   */\n  const showRecentSearches = () => {\n    isRecentVisible.value = true\n    nextTick(() => focusInput())\n  }\n\n  const recent = {\n    isVisible: isRecentVisible,\n    hide: hideRecentSearches,\n    show: showRecentSearches,\n    selectedIdx,\n    entries,\n  }\n\n  const handleVerticalArrows = (event: VerticalArrowEvent) => {\n    event.preventDefault() // Prevent the cursor from moving horizontally.\n    const { key, altKey } = event\n    showRecentSearches()\n    if (altKey) {\n      return\n    }\n    // Shift selection (if Alt was not pressed with arrow keys)\n    selectedIdx.value = updateIndexOnVerticalArrow(\n      key,\n      entries.value.length,\n      selectedIdx.value\n    )\n  }\n\n  const shouldHideOnEvent = (event: KeyboardEvent, isMobile: boolean) => {\n    // Always hide when the user presses Escape.\n    if (event.key === keycodes.Escape) {\n      return true\n    }\n    // Hide the recent searches popover when the user presses Enter or Shift+Tab on the input.\n    return (\n      !isMobile &&\n      (event.key === keycodes.Enter ||\n        (event.key === keycodes.Tab && event.shiftKey))\n    )\n  }\n\n  const handleOtherKeys = (event: KeyboardEvent) => {\n    const { key } = event\n    if (key === keycodes.Enter && selectedIdx.value) {\n      // If a recent search is selected, populate its value into the input.\n      term.value = entries.value[selectedIdx.value]\n    }\n    if (shouldHideOnEvent(event, isMobile)) {\n      hideRecentSearches()\n    }\n    if (\n      isMobile &&\n      !isRecentVisible.value &&\n      isVerticalArrowEvent(event) &&\n      isInputFocused\n    ) {\n      isInputFocused.value = false\n    }\n    selectedIdx.value = undefined // Lose visual focus from entries.\n  }\n\n  const handleKeydown = (event: KeyboardEvent) => {\n    return isVerticalArrowEvent(event)\n      ? handleVerticalArrows(event)\n      : handleOtherKeys(event)\n  }\n\n  /**\n   * Populate the input with the clicked entry and execute the search.\n   */\n  const handleSelect = (idx: number) => {\n    term.value = entries.value[idx]\n    hideRecentSearches()\n    selectedIdx.value = undefined // Lose visual focus from entries.\n  }\n\n  /**\n   * Clear recent searches from the store. Removes a single entry\n   * if entry is provided, otherwise removes all recent searches.\n   */\n  const handleClear = (entry?: string) => {\n    focusInput()\n    useSearchStore().clearRecentSearches(entry)\n  }\n\n  watch(selectedIdx, (idx) => {\n    if (idx !== undefined) {\n      term.value = entries.value[idx]\n    }\n  })\n\n  return {\n    handleKeydown,\n    handleSelect,\n    handleClear,\n    recent,\n    isRecentVisible,\n  }\n}\n"],"names":["isVerticalArrowEvent","event","keycodes","updateIndexOnVerticalArrow","key","entriesCount","selectedIdx","defaultValue","offset","cyclicShift","useRecentSearches","focusInput","term","isMobile","isInputFocused","searchStore","useSearchStore","isRecentVisible","ref","entries","computed","hideRecentSearches","showRecentSearches","nextTick","recent","handleVerticalArrows","altKey","shouldHideOnEvent","handleOtherKeys","handleKeydown","handleSelect","idx","handleClear","entry","watch"],"mappings":"4eAQa,MAAAA,EACXC,GAEOA,EAAM,MAAQC,EAAS,SAAWD,EAAM,MAAQC,EAAS,UAGrDC,EAA6B,CACxCC,EACAC,EACAC,IACG,CACH,MAAMC,EAAeH,IAAQF,EAAS,QAAU,EAAI,GAC9CM,EAASJ,IAAQF,EAAS,QAAU,GAAK,EAC/C,OAAOO,EAAYH,GAAeC,EAAcC,EAAQ,EAAGH,CAAY,CACzE,EAEaK,EAAoB,CAAC,CAChC,WAAAC,EACA,KAAAC,EACA,SAAAC,EACA,eAAAC,CACF,IAKM,CACJ,MAAMC,EAAcC,EAAe,EAC7BC,EAAkBC,EAAI,EAAK,EAM3BZ,EAAcY,EAAwB,MAAS,EAC/CC,EAAUC,EAAS,IAAML,EAAY,cAAc,EAKnDM,EAAqB,IAAM,CAC/BJ,EAAgB,MAAQ,GACpBL,EAAK,QAAU,IAAMG,EAAY,aAAe,KAClDH,EAAK,MAAQG,EAAY,WAE7B,EAMMO,EAAqB,IAAM,CAC/BL,EAAgB,MAAQ,GACfM,EAAA,IAAMZ,GAAY,CAC7B,EAEMa,EAAS,CACb,UAAWP,EACX,KAAMI,EACN,KAAMC,EACN,YAAAhB,EACA,QAAAa,CACF,EAEMM,EAAwBxB,GAA8B,CAC1DA,EAAM,eAAe,EACf,KAAA,CAAE,IAAAG,EAAK,OAAAsB,CAAA,EAAWzB,EACLqB,EAAA,EACf,CAAAI,IAIJpB,EAAY,MAAQH,EAClBC,EACAe,EAAQ,MAAM,OACdb,EAAY,KACd,EACF,EAEMqB,EAAoB,CAAC1B,EAAsBY,IAE3CZ,EAAM,MAAQC,EAAS,OAClB,GAIP,CAACW,IACAZ,EAAM,MAAQC,EAAS,OACrBD,EAAM,MAAQC,EAAS,KAAOD,EAAM,UAIrC2B,EAAmB3B,GAAyB,CAC1C,KAAA,CAAE,IAAAG,GAAQH,EACZG,IAAQF,EAAS,OAASI,EAAY,QAExCM,EAAK,MAAQO,EAAQ,MAAMb,EAAY,KAAK,GAE1CqB,EAAkB1B,EAAOY,CAAQ,GAChBQ,EAAA,EAGnBR,GACA,CAACI,EAAgB,OACjBjB,EAAqBC,CAAK,GAC1Ba,IAEAA,EAAe,MAAQ,IAEzBR,EAAY,MAAQ,MACtB,EAEMuB,EAAiB5B,GACdD,EAAqBC,CAAK,EAC7BwB,EAAqBxB,CAAK,EAC1B2B,EAAgB3B,CAAK,EAMrB6B,EAAgBC,GAAgB,CAC/BnB,EAAA,MAAQO,EAAQ,MAAMY,CAAG,EACXV,EAAA,EACnBf,EAAY,MAAQ,MACtB,EAMM0B,EAAeC,GAAmB,CAC3BtB,EAAA,EACIK,EAAA,EAAE,oBAAoBiB,CAAK,CAC5C,EAEM,OAAAC,EAAA5B,EAAcyB,GAAQ,CACtBA,IAAQ,SACLnB,EAAA,MAAQO,EAAQ,MAAMY,CAAG,EAChC,CACD,EAEM,CACL,cAAAF,EACA,aAAAC,EACA,YAAAE,EACA,OAAAR,EACA,gBAAAP,CACF,CACF"}