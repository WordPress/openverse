import{d as m,a8 as l,a9 as h,R as b,r as y,c as I,k as w,L as g,N as v,l as V,M as x,j as _}from"./DwwldUEF.js";import{_ as T}from"./DhTbjJlp.js";(function(){try{var t=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},n=new t.Error().stack;n&&(t._sentryDebugIds=t._sentryDebugIds||{},t._sentryDebugIds[n]="bfaea2f7-11cc-4f1f-aed8-3bf929b247df",t._sentryDebugIdIdentifier="sentry-dbid-bfaea2f7-11cc-4f1f-aed8-3bf929b247df")}catch{}})();const k=["id","placeholder","type","value","aria-label"],d=m({inheritAttrs:!1,__name:"VInputField",props:l({labelText:{},fieldId:{},connectionSides:{default:()=>[]},placeholder:{},type:{default:"text"}},{modelValue:{},modelModifiers:{}}),emits:l(["update:modelValue"],["update:modelValue"]),setup(t,{expose:n,emit:o}){const i=h(t,"modelValue"),r=o,u=b(),s=y(null),f=()=>{var e;(e=s.value)==null||e.focus()},c=e=>{r("update:modelValue",e.target.value)},p=I(()=>{const{class:e,...a}=u;return a});return n({focusInput:f}),(e,a)=>(_(),w("div",{class:x(["input-field group flex h-12 flex-row items-center overflow-hidden rounded-sm border p-0.5px focus-within:border-1.5 focus-within:border-focus focus-within:bg-surface focus-within:p-0",[{"rounded-s-none border-s-0 ps-1.5px focus-within:rounded-s-none focus-within:border-s-0 focus-within:ps-1.5px":e.connectionSides.includes("start"),"rounded-e-none border-e-0 pe-1.5px focus-within:rounded-e-none focus-within:border-e-0 focus-within:pe-1.5px":e.connectionSides.includes("end")},e.$attrs.class]])},[g("input",v({id:e.fieldId},p.value,{ref_key:"inputEl",ref:s,placeholder:e.placeholder,type:e.type,class:"ms-4 h-full w-full appearance-none rounded-none bg-tx text-2xl font-semibold leading-none placeholder-default focus-visible:outline-none md:text-base",value:i.value,"aria-label":e.labelText,onInput:c}),null,16,k),V(e.$slots,"default",{},void 0,!0)],2))}}),S=T(d,[["__scopeId","data-v-3b0c2cdd"]]);d.__docgenInfo={exportName:"default",displayName:"VInputField",description:"",tags:{},expose:[{name:"focusInput"}],props:[{name:"labelText",description:'the textual content of the label associated with this input field; This\nlabel is SR-only. If you want to display a visible label, add\n`for="fieldId"` to the label element and set the `fieldId` prop to the\nsame value as the `for` attribute.',required:!1,type:{name:"string"}},{name:"fieldId",description:`the ID to assign to the field; This can be used to attach custom labels
to the field.`,required:!0,type:{name:"string"}},{name:"connectionSides",description:"list of sides where the field is connected to other controls",required:!1,type:{name:"Array",elements:[{name:"Connection"}]},defaultValue:{func:!1,value:"() => []"}},{name:"placeholder",required:!1,type:{name:"string"}},{name:"type",required:!1,type:{name:"InputTypeHTMLAttribute"},defaultValue:{func:!1,value:'"text"'}}],events:[{name:"update:modelValue",type:{names:["string"]}}],slots:[{name:"default",description:"Extra information goes here"}],sourceFiles:["/home/runner/work/openverse/openverse/frontend/src/components/VInputField/VInputField.vue"]};export{S as V};
