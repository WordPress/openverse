{"version":3,"file":"--wmzdkw.js","sources":["../../src/composables/use-seekable.ts","../../shared/utils/resampling.ts","../../shared/utils/time-fmt.ts","../../src/components/VAudioTrack/VWaveform.vue"],"sourcesContent":["import { useI18n } from \"#imports\"\nimport { computed, ToRefs, ref } from \"vue\"\n\nimport { keycodes } from \"#shared/constants/key-codes\"\n\nexport interface UseSeekableOptions\n  extends ToRefs<{\n    duration: number\n    currentTime: number\n    isSeekable: boolean\n    isReady: boolean\n  }> {\n  onSeek: (frac: number) => void\n  onTogglePlayback: () => void\n}\n\nexport const useSeekable = ({\n  duration,\n  currentTime,\n  isSeekable,\n  isReady,\n  onSeek,\n  onTogglePlayback,\n}: UseSeekableOptions) => {\n  const { t } = useI18n({ useScope: \"global\" })\n\n  const attributes = computed(() => ({\n    \"aria-role\": \"slider\",\n    \"aria-valuemax\": duration.value,\n    \"aria-valuenow\": currentTime.value,\n    \"aria-valuetext\": t(\"waveform.currentTime\", {\n      time: currentTime.value,\n    }),\n    \"aria-orientation\": \"horizontal\" as const,\n    \"aria-valuemin\": \"0\",\n  }))\n\n  const seekDelta = 1 // seconds\n  const modSeekDelta = 15 // seconds\n  const modSeekDeltaFrac = computed(() =>\n    isReady.value ? modSeekDelta / duration.value : 0\n  )\n  const seekDeltaFrac = computed(() =>\n    isReady.value ? seekDelta / duration.value : 0\n  )\n  const currentFrac = computed(() =>\n    isReady.value ? currentTime.value / duration.value : 0\n  )\n  const isSeeking = ref(false)\n\n  const handleArrowKeys = (event: KeyboardEvent) => {\n    const { key, shiftKey, metaKey } = event\n    if (metaKey) {\n      // Always false on Windows\n      onSeek(key.includes(\"Left\") ? 0 : 1)\n    } else {\n      const direction = key.includes(\"Left\") ? -1 : 1\n      const magnitude = shiftKey ? modSeekDeltaFrac.value : seekDeltaFrac.value\n      const delta = magnitude * direction\n      onSeek(currentFrac.value + delta)\n    }\n  }\n\n  const arrowKeys = [keycodes.ArrowLeft, keycodes.ArrowRight]\n  const seekingKeys = [...arrowKeys, keycodes.Home, keycodes.End]\n  const handledKeys = [...seekingKeys, keycodes.Spacebar]\n\n  /**\n   * This composable handles space bar for toggling playback.\n   * If `isSeekable` is true, it also handles `seekingKeys`.\n   */\n  const willBeHandled = (event: KeyboardEvent) => {\n    return isSeekable.value\n      ? (handledKeys as string[]).includes(event.key)\n      : event.key === keycodes.Spacebar\n  }\n\n  const handleKeys = (event: KeyboardEvent) => {\n    if (!willBeHandled(event)) {\n      return\n    }\n\n    event.preventDefault()\n\n    isSeeking.value = (seekingKeys as string[]).includes(event.key)\n\n    if ((arrowKeys as string[]).includes(event.key)) {\n      return handleArrowKeys(event)\n    }\n    if (event.key === keycodes.Home) {\n      return onSeek(0)\n    }\n    if (event.key === keycodes.End) {\n      return onSeek(1)\n    }\n    if (event.key === keycodes.Spacebar) {\n      return onTogglePlayback()\n    }\n  }\n  const handleBlur = () => {\n    isSeeking.value = false\n  }\n\n  const listeners = {\n    keydown: handleKeys,\n    blur: handleBlur,\n  }\n\n  const meta = {\n    modSeekDeltaFrac,\n    seekDeltaFrac,\n    currentFrac,\n  }\n\n  return { attributes, listeners, meta, willBeHandled, isSeeking }\n}\n","/**\n * Resizes a given array to consist of more elements than provided. This uses\n * linear interpolation to fill in the gaps.\n *\n * @param data - the list of data points to interpolate\n * @param threshold - the number of expected data points from the array\n * @returns the array with the required number of points\n */\nexport const upsampleArray = (data: number[], threshold: number): number[] => {\n  const linearInterpolate = (before: number, after: number, atPoint: number) =>\n    before + (after - before) * atPoint\n\n  const newData = []\n  const springFactor = (data.length - 1) / (threshold - 1)\n  newData[0] = data[0] // for new allocation\n  for (let i = 1; i < threshold - 1; i++) {\n    const tmp = i * springFactor\n    const before = Math.floor(tmp)\n    const after = Math.ceil(tmp)\n    const atPoint = tmp - before\n    newData[i] = linearInterpolate(data[before], data[after], atPoint)\n  }\n  newData[threshold - 1] = data[data.length - 1] // for new allocation\n  return newData\n}\n\n/**\n * Resizes a given array to consist of fewer elements than provided. This uses\n * the Largest Triangle Three Buckets algorithm by Sveinn Steinarsson.\n *\n * @see {@link https://github.com/sveinn-steinarsson/flot-downsample}\n *\n * @param data - the list of data points to interpolate\n * @param threshold - the number of expected data points from the array\n * @returns the array with the required number of points\n */\nexport const downsampleArray = (data: number[], threshold: number) => {\n  const dataLength = data.length\n\n  const sampled = []\n  let sampled_index = 0\n\n  // Bucket size, except first and last point\n  const every = (dataLength - 2) / (threshold - 2)\n\n  let a = 0\n  let max_area_point, max_area, area, next_a\n\n  sampled[sampled_index++] = data[a] // Always add the first point\n\n  for (let i = 0; i < threshold - 2; i++) {\n    let avg_x = 0\n    let avg_y = 0\n    let avg_range_start = Math.floor((i + 1) * every) + 1\n    let avg_range_end = Math.floor((i + 2) * every) + 1\n    avg_range_end = avg_range_end < dataLength ? avg_range_end : dataLength\n\n    const avg_range_length = avg_range_end - avg_range_start\n\n    for (; avg_range_start < avg_range_end; avg_range_start++) {\n      avg_x += avg_range_start\n      avg_y += data[avg_range_start]\n    }\n    avg_x /= avg_range_length\n    avg_y /= avg_range_length\n\n    // Get the range for this bucket\n    let range_offs = Math.floor(i * every) + 1\n    const range_to = Math.floor((i + 1) * every) + 1\n\n    const point_a_x = a\n    const point_a_y = data[a]\n\n    max_area = area = -1\n\n    max_area_point = 0\n    next_a = 0\n\n    for (; range_offs < range_to; range_offs++) {\n      // Calculate triangle area over three buckets\n      area =\n        Math.abs(\n          (point_a_x - avg_x) * (data[range_offs] - point_a_y) -\n            (point_a_x - range_offs) * (avg_y - point_a_y)\n        ) * 0.5\n      if (area > max_area) {\n        max_area = area\n        max_area_point = data[range_offs]\n        next_a = range_offs\n      }\n    }\n\n    sampled[sampled_index++] = max_area_point\n    a = next_a\n  }\n\n  sampled[sampled_index++] = data[dataLength - 1] // Always add the last point\n  return sampled\n}\n","/**\n * Format the time as hh:mm:ss, dropping the hour part if it is zero. Unless\n * specified to be milliseconds, the duration is assumed to be in seconds.\n *\n * @param duration - the duration to format as a human-readable timestamp\n * @param isMs - whether the duration is in milliseconds\n * @returns the duration in a human-friendly format\n */\nexport const timeFmt = (duration: number, isMs = false): string => {\n  const seconds = isMs ? duration / 1e3 : duration\n\n  const hrs = ~~(seconds / 3600)\n  let mins = (~~((seconds % 3600) / 60)).toString()\n  const secs = (~~seconds % 60).toString().padStart(2, \"0\") // always padded\n\n  const parts = []\n  if (hrs > 0) {\n    parts.push(hrs)\n    mins = mins.padStart(2, \"0\") // padded only if hours present\n  }\n  parts.push(mins, secs)\n  return parts.join(\":\")\n}\n","<script setup lang=\"ts\">\n/**\n * Renders an SVG representation of the waveform given a list of heights for the\n * bars.\n */\nimport { computed, ref, toRef } from \"vue\"\n\nimport type { AudioFeature } from \"#shared/constants/audio\"\nimport { downsampleArray, upsampleArray } from \"#shared/utils/resampling\"\nimport { timeFmt } from \"#shared/utils/time-fmt\"\nimport { hash, rand as prng } from \"#shared/utils/prng\"\nimport { useSeekable } from \"~/composables/use-seekable\"\nimport useResizeObserver from \"~/composables/use-resize-observer\"\n\n/**\n * If the duration is above this threshold, the progress timestamp will show ms.\n */\nconst MAX_SECONDS_FOR_MS = 1\n\nconst props = withDefaults(\n  defineProps<{\n    /**\n     * An array of heights of the bars. The waveform will be generated with\n     * bars of random length if the prop is not provided.\n     */\n    peaks?: number[]\n    /**\n     * The message to display instead of the waveform. This is useful when\n     * displaying a loading or error state.\n     */\n    message?: string\n    /**\n     * The current play time of the audio track.\n     */\n    currentTime?: number\n    /**\n     * The total play time of the audio track.\n     */\n    duration?: number\n    /**\n     * The fraction of the waveform height to use for the bars and timestamp.\n     * The remaining space can be used to place other elements.\n     */\n    usableFrac?: number\n    /**\n     * Selectively enable features in the waveform. Available features are\n     * `'timestamps'`, `'duration'`, `'seek'`.\n     */\n    features?: readonly AudioFeature[]\n    /**\n     * An object of notices to display when a feature is disabled.\n     * `'timestamps'`, `'duration'`, `'seek'`.\n     */\n    featureNotices?: Partial<Record<AudioFeature, string>>\n    /**\n     * Audio id to make the randomly-created peaks deterministic.\n     */\n    audioId: string\n    /**\n     * Whether the waveform can be focused by using the `Tab` key\n     */\n    isTabbable?: boolean\n    /**\n     * Whether the waveform should render as seeking when it is controlled by\n     * the parent audio track\n     */\n    isParentSeeking?: boolean\n  }>(),\n  {\n    currentTime: 0,\n    duration: 0,\n    usableFrac: 1,\n    features: () => [\"timestamps\", \"seek\"] as AudioFeature[],\n    featureNotices: () => ({}),\n    isTabbable: true,\n    isParentSeeking: false,\n  }\n)\n\nconst emit = defineEmits<{\n  /**\n   * Emitted when the waveform receives mouse events for seeking,\n   * either single clicks on a specific part of the waveform,\n   * or a click and drag.\n   *\n   * Also emitted when the waveform receives arrow key or home/end\n   * keyboard events that also correspond to seeking.\n   */\n  seeked: [number]\n  \"toggle-playback\": []\n  focus: [FocusEvent]\n  blur: [FocusEvent]\n}>()\n\n/* Utils */\n\n/**\n * Get the x-coordinate of the event with respect to the bounding box of the\n * waveform.\n * @param event - the event from which to get the position\n * @returns the x-position of the event inside the waveform\n */\nconst getPosition = (event: MouseEvent): number => {\n  return el.value\n    ? event.clientX - el.value.getBoundingClientRect().x\n    : event.clientX\n}\n/**\n * Get the x-position of the event with respect to the bounding box of the\n * waveform, as a fraction of the waveform width.\n * @param event - the event from which to get the position\n * @returns the x-position of the event as a fraction\n */\nconst getPositionFrac = (event: MouseEvent): number => {\n  const xPos = getPosition(event)\n  return xPos / waveformDimens.value.width\n}\n/**\n * Get the number of peaks that will fit within the given width.\n * @param width - the number of pixels inside which to count peaks\n * @returns the number of peaks that can be accommodated\n */\nconst getPeaksInWidth = (width: number): number => {\n  return Math.floor((width - barGap) / (barWidth + barGap))\n}\n\n/* Element dimensions */\n\nconst el = ref<HTMLElement | null>(null) // template ref\nconst { dimens: waveformDimens } = useResizeObserver(el)\n\n/* Features */\n\nconst showDuration = computed(() => props.features.includes(\"duration\"))\nconst showTimestamps = computed(() => props.features.includes(\"timestamps\"))\nconst isSeekable = computed(() => props.features.includes(\"seek\"))\n\n/* State */\n\nconst isReady = computed(() => !props.message)\nconst isInteractive = computed(() => isSeekable.value && isReady.value)\nconst isSeeking = computed(\n  () => (!props.isTabbable && props.isParentSeeking) || isSelfSeeking.value\n)\n\n/* Resampling */\n\nconst barWidth = 2\nconst barGap = 2\nconst peakCount = computed(() => getPeaksInWidth(waveformDimens.value.width))\n\nconst createRandomPeaks = (audioId: string) => {\n  const rand = prng(hash(audioId))\n  return Array.from({ length: 100 }, () => rand())\n}\nconst peaks = computed(() =>\n  props.peaks?.length ? props.peaks : createRandomPeaks(props.audioId)\n)\nconst normalizedPeaks = computed(() => {\n  let samples = peaks.value\n\n  const givenLength = samples.length\n  const required = peakCount.value\n  if (givenLength < required) {\n    samples = upsampleArray(samples, required)\n  } else if (givenLength > required) {\n    samples = downsampleArray(samples, required)\n  }\n\n  return samples.map((peak) => Math.max(peak, 0) * waveformDimens.value.height)\n})\n\n/* SVG drawing */\n\nconst viewBox = computed(() =>\n  [0, 0, waveformDimens.value.width, waveformDimens.value.height].join(\" \")\n)\nconst spaceBefore = (index: number) => index * barWidth + index * barGap\nconst spaceAbove = (index: number) =>\n  waveformDimens.value.height - normalizedPeaks.value[index]\n\n/* Progress bar */\nconst progressBarWidth = computed(() => {\n  const frac = isDragging.value ? (seekFrac.value ?? 0) : currentFrac.value\n  return waveformDimens.value.width * frac\n})\n\n/* Progress timestamp */\n\nconst progressTimestampEl = ref<HTMLElement>()\nconst progressTimestamp = computed(() =>\n  isDragging.value ? seekTimestamp.value : props.currentTime\n)\nconst isProgressTimestampCutoff = computed(() => {\n  if (!progressTimestampEl.value) {\n    return false\n  }\n  const barWidth = progressBarWidth.value\n  const timestampWidth = progressTimestampEl.value.offsetWidth\n  return barWidth < timestampWidth + 2\n})\n\n/**\n * Whether to show the ms part in the timestamps. True when the duration\n * is below MAX_SECONDS_FOR_MS seconds.\n */\nconst showMsInTimestamp = computed(\n  () => Number.isFinite(props.duration) && props.duration < MAX_SECONDS_FOR_MS\n)\n\n/* Seek bar */\n\nconst seekFrac = ref<number | null>(null)\nconst seekBarWidth = computed(() => {\n  const frac = seekFrac.value ?? currentFrac.value\n  return waveformDimens.value.width * frac\n})\nconst seekIndex = computed(() => getPeaksInWidth(seekBarWidth.value))\n\n/* Seek timestamp */\n\nconst seekTimestampEl = ref<HTMLElement | null>(null)\nconst seekTimestamp = computed(() =>\n  seekFrac.value ? seekFrac.value * props.duration : props.duration\n)\nconst isSeekTimestampCutoff = computed(() => {\n  if (!seekTimestampEl.value) {\n    return false\n  }\n  const barWidth = seekBarWidth.value\n  const timestampWidth = seekTimestampEl.value.offsetWidth\n  return barWidth < timestampWidth + 2\n})\n\nconst { isSeeking: isSelfSeeking, ...seekable } = useSeekable({\n  duration: toRef(props, \"duration\"),\n  currentTime: toRef(props, \"currentTime\"),\n  isSeekable,\n  isReady,\n  onSeek: (frac) => {\n    clearSeekProgress()\n    emit(\"seeked\", frac)\n  },\n  onTogglePlayback: () => emit(\"toggle-playback\"),\n})\nconst waveformAttributes = computed(() => ({\n  // ARIA slider attributes are only added when interactive\n  ...(isInteractive.value ? seekable.attributes.value : {}),\n}))\n\n/* Seeking */\n\n/**\n * the seek jump length as a % of the track\n */\nconst { currentFrac } = seekable.meta\nconst setSeekProgress = (event: MouseEvent) => {\n  seekFrac.value = getPositionFrac(event)\n}\nconst clearSeekProgress = () => {\n  seekFrac.value = null\n}\nconst seek = (event: MouseEvent) => {\n  emit(\"seeked\", getPositionFrac(event))\n}\n\n/* Dragging */\n\nconst dragThreshold = 2 // px\nlet startPos: null | number = null\nconst isDragging = ref(false)\nconst handleMouseDown = (event: MouseEvent) => {\n  if (!props.isTabbable) {\n    // to prevent focus\n    event.preventDefault()\n  }\n  isDragging.value = false\n  startPos = getPosition(event)\n  setSeekProgress(event)\n}\nconst handleMouseMove = (event: MouseEvent) => {\n  if (startPos) {\n    const clickPos = getPosition(event)\n    if (Math.abs(clickPos - startPos) > dragThreshold) {\n      isDragging.value = true\n    }\n  }\n  setSeekProgress(event)\n}\nconst handleMouseUp = (event: MouseEvent) => {\n  isDragging.value = false\n  startPos = null\n  seek(event)\n}\nconst handleMouseLeave = () => {\n  clearSeekProgress()\n}\nconst handleClick = (event: MouseEvent) => {\n  // Prevent event from bubbling to the parent anchor tag.\n  event.stopPropagation()\n  event.preventDefault()\n}\nconst handleFocus = (event: FocusEvent) => {\n  emit(\"focus\", event)\n}\nconst handleBlur = (event: FocusEvent) => {\n  seekable.listeners.blur()\n  emit(\"blur\", event)\n}\n\n/* v-on */\n\nconst eventHandlers = computed(() => {\n  if (isInteractive.value) {\n    return {\n      mousedown: handleMouseDown,\n      mousemove: handleMouseMove,\n      mouseup: handleMouseUp,\n      mouseleave: handleMouseLeave,\n      click: handleClick,\n      blur: handleBlur,\n      focus: handleFocus,\n      keydown: seekable.listeners.keydown,\n    }\n  } else {\n    return {}\n  }\n})\n\nconst heightProperties = computed(() => ({\n  \"--usable-height\": `${Math.floor(props.usableFrac * 100)}%`,\n  \"--unusable-height\": `${Math.floor((1 - props.usableFrac) * 100)}%`,\n}))\n\nconst progressTimeLeft = computed(() => ({\n  \"--progress-time-left\": `${progressBarWidth.value}px`,\n}))\n\nconst seekTimeLeft = computed(() => ({\n  \"--seek-time-left\": `${seekBarWidth.value}px`,\n}))\n</script>\n\n<template>\n  <div\n    v-bind=\"waveformAttributes\"\n    ref=\"el\"\n    class=\"waveform bg-background-var group/waveform relative overflow-hidden text-default focus-visible:outline-none\"\n    :style=\"heightProperties\"\n    :tabIndex=\"isTabbable && isInteractive ? 0 : -1\"\n    :aria-disabled=\"!isInteractive\"\n    :aria-label=\"$t('waveform.label')\"\n    v-on=\"eventHandlers\"\n  >\n    <!-- Focus ring -->\n    <svg\n      v-if=\"isInteractive\"\n      class=\"shadow-ring-1 absolute inset-0 z-20 hidden h-full w-full group-focus/waveform:block\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      :viewBox=\"viewBox\"\n      preserveAspectRatio=\"none\"\n    >\n      <!-- Stroke is calculated from the centre of the path -->\n      <rect\n        v-if=\"waveformDimens.width && waveformDimens.height\"\n        class=\"stroke-focus\"\n        x=\"0.75\"\n        y=\"0.75\"\n        :width=\"waveformDimens.width - 1.5\"\n        :height=\"waveformDimens.height - 1.5\"\n        rx=\"2\"\n        fill=\"none\"\n        stroke-width=\"1.5\"\n      />\n      <rect\n        v-if=\"waveformDimens.width && waveformDimens.height\"\n        class=\"stroke-white dark:stroke-black\"\n        x=\"2\"\n        y=\"2\"\n        :width=\"waveformDimens.width - 4\"\n        :height=\"waveformDimens.height - 4\"\n        fill=\"none\"\n        stroke-width=\"1\"\n        rx=\"0.75\"\n      />\n    </svg>\n\n    <!-- Progress bar -->\n    <svg\n      class=\"absolute inset-0 h-full w-full\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      :viewBox=\"viewBox\"\n      preserveAspectRatio=\"none\"\n    >\n      <rect\n        v-if=\"isReady\"\n        class=\"progress-bar\"\n        x=\"0\"\n        y=\"0\"\n        :width=\"progressBarWidth\"\n        height=\"100%\"\n      />\n    </svg>\n\n    <!-- Bars -->\n    <svg\n      class=\"bars absolute bottom-0 w-full\"\n      :class=\"{ 'with-space': showDuration || showTimestamps }\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      :viewBox=\"viewBox\"\n      preserveAspectRatio=\"none\"\n    >\n      <rect\n        v-for=\"(peak, index) in normalizedPeaks\"\n        :key=\"index\"\n        class=\"origin-bottom transform transition-transform duration-500\"\n        :class=\"[\n          isReady ? 'scale-y-100' : 'scale-y-0',\n          index <= seekIndex ? 'fill-wave-active' : 'fill-wave-inactive',\n        ]\"\n        :x=\"spaceBefore(index)\"\n        :y=\"spaceAbove(index)\"\n        :width=\"barWidth\"\n        :height=\"peak\"\n      />\n    </svg>\n\n    <!-- Focus bar -->\n    <div\n      v-if=\"isInteractive && isSeeking\"\n      class=\"absolute top-0 z-20 hidden h-full flex-col items-center justify-between bg-black group-focus/waveform:flex group-focus:flex dark:bg-white\"\n      :style=\"{ width: `${barWidth}px`, left: `${progressBarWidth}px` }\"\n    >\n      <div\n        v-for=\"(classes, name) in {\n          top: ['-translate-y-1/2'],\n          bottom: ['translate-y-1/2'],\n        }\"\n        :key=\"name\"\n        class=\"h-2 w-2 transform rounded-full bg-black dark:bg-white\"\n        :class=\"classes\"\n      >\n        &nbsp;\n      </div>\n    </div>\n\n    <!-- Timestamps -->\n    <template v-if=\"isReady\">\n      <template v-if=\"showTimestamps\">\n        <div\n          ref=\"progressTimestampEl\"\n          class=\"progress timestamp z-10 transform\"\n          :class=\"[\n            ...(isProgressTimestampCutoff\n              ? ['bg-background-var']\n              : ['bg-complementary', '-translate-x-full']),\n          ]\"\n          :style=\"progressTimeLeft\"\n        >\n          {{ timeFmt(progressTimestamp, showMsInTimestamp) }}\n        </div>\n        <div\n          v-if=\"seekFrac\"\n          ref=\"seekTimestampEl\"\n          class=\"seek timestamp transform\"\n          :class=\"{ '-translate-x-full': !isSeekTimestampCutoff }\"\n          :style=\"seekTimeLeft\"\n        >\n          {{ timeFmt(seekTimestamp, showMsInTimestamp) }}\n        </div>\n      </template>\n      <div\n        v-if=\"showDuration\"\n        class=\"duration timestamp bg-background-var right-0\"\n      >\n        {{ timeFmt(duration, showMsInTimestamp) }}\n      </div>\n    </template>\n\n    <!-- Message overlay -->\n    <div\n      v-else\n      class=\"loading absolute inset-0 flex items-center justify-center text-xs font-bold\"\n    >\n      {{ message }}\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.waveform {\n  --v-background-color: var(\n    --waveform-background-color,\n    theme(\"backgroundColor.default\")\n  );\n}\n\n.timestamp {\n  @apply pointer-events-none absolute px-1 text-xs font-bold;\n  top: calc(var(--unusable-height) + theme(\"spacing[0.5]\"));\n}\n\n.bg-background-var {\n  background-color: var(--v-background-color);\n}\n\n.bars {\n  height: calc(var(--usable-height));\n}\n\n.bars.with-space {\n  height: calc(var(--usable-height) - 1rem - 2 * theme(\"spacing[0.5]\"));\n}\n\n.progress {\n  left: var(--progress-time-left);\n}\n\n.progress-bar {\n  fill: theme(\"backgroundColor.complementary\");\n}\n\n.seek {\n  left: var(--seek-time-left);\n}\n\n.fill-gray-3-alpha {\n  fill: rgba(48, 39, 46, 0.2);\n}\n</style>\n"],"names":["useSeekable","duration","currentTime","isSeekable","isReady","onSeek","onTogglePlayback","t","useI18n","attributes","computed","seekDelta","modSeekDelta","modSeekDeltaFrac","seekDeltaFrac","currentFrac","isSeeking","ref","handleArrowKeys","event","key","shiftKey","metaKey","direction","delta","arrowKeys","keycodes","seekingKeys","handledKeys","willBeHandled","upsampleArray","data","threshold","linearInterpolate","before","after","atPoint","newData","springFactor","i","tmp","downsampleArray","dataLength","sampled","sampled_index","every","a","max_area_point","max_area","area","next_a","avg_x","avg_y","avg_range_start","avg_range_end","avg_range_length","range_offs","range_to","point_a_x","point_a_y","timeFmt","isMs","seconds","hrs","mins","secs","parts","MAX_SECONDS_FOR_MS","barWidth","barGap","dragThreshold","props","__props","emit","__emit","getPosition","el","getPositionFrac","waveformDimens","getPeaksInWidth","width","useResizeObserver","showDuration","showTimestamps","isInteractive","isSelfSeeking","peakCount","createRandomPeaks","audioId","rand","prng","hash","peaks","_a","normalizedPeaks","samples","givenLength","required","peak","viewBox","spaceBefore","index","spaceAbove","progressBarWidth","frac","isDragging","seekFrac","progressTimestampEl","progressTimestamp","seekTimestamp","isProgressTimestampCutoff","timestampWidth","showMsInTimestamp","seekBarWidth","seekIndex","seekTimestampEl","isSeekTimestampCutoff","seekable","toRef","clearSeekProgress","waveformAttributes","setSeekProgress","seek","startPos","handleMouseDown","handleMouseMove","clickPos","handleMouseUp","handleMouseLeave","handleClick","handleFocus","handleBlur","eventHandlers","heightProperties","progressTimeLeft","seekTimeLeft"],"mappings":"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"}