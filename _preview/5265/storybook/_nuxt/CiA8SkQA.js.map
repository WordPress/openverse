{"version":3,"file":"CiA8SkQA.js","sources":["../../src/stores/active-media.ts","../../src/composables/use-active-audio.ts","../../src/composables/default-ref.ts","../../src/composables/use-audio-snackbar.ts","../../src/components/VMediaInfo/VGetMediaButton.vue","../../src/components/VAudioTrack/layouts/VRowLayout.vue","../../src/components/VAudioTrack/layouts/VBoxLayout.vue","../../src/components/VAudioTrack/layouts/VGlobalLayout.vue","../../src/components/VAudioTrack/VAudioTrack.vue"],"sourcesContent":["import { useNuxtApp } from \"#imports\"\n\nimport { defineStore } from \"pinia\"\n\nimport type { SupportedMediaType } from \"#shared/constants/media\"\nimport { audioErrorMessages } from \"#shared/constants/audio\"\nimport type { Media } from \"#shared/types/media\"\nimport { warn } from \"~/utils/console\"\n\nexport type MediaStatus = \"ejected\" | \"playing\" | \"paused\" // 'ejected' means player is closed\n\nexport interface ActiveMediaState {\n  type: SupportedMediaType | null\n  id: Media[\"id\"] | null\n  status: MediaStatus\n  /**\n   * The i18n key for the message to display when rendering the active media.\n   * Used to display playback errors.\n   */\n  message: string | null\n}\n\nconst ACTIVE_MEDIA = \"active-media\"\n\n/**\n * Store information about the active media item.\n */\nexport const useActiveMediaStore = defineStore(ACTIVE_MEDIA, {\n  /* State */\n\n  state: (): ActiveMediaState => ({\n    type: null,\n    id: null,\n    status: \"ejected\",\n    message: null,\n  }),\n\n  actions: {\n    /**\n     * Sets a new media item as the active one.\n     *\n     * @param type - the type of the active media\n     * @param id - the unique identifier of the active media\n     * @param status - the current status of the active media\n     */\n    setActiveMediaItem({\n      type,\n      id,\n      status = \"playing\",\n    }: {\n      type: SupportedMediaType\n      id: Media[\"id\"]\n      status?: MediaStatus\n    }) {\n      this.type = type\n      this.id = id\n      this.status = status\n    },\n\n    pauseActiveMediaItem() {\n      this.status = \"paused\"\n    },\n\n    ejectActiveMediaItem() {\n      this.status = \"ejected\"\n      this.id = null\n      this.type = null\n    },\n    /**\n     * Set the message associated with rendering/playback of the active media.\n     *\n     * @param message - the i18n key of the message to display to the user\n     */\n    setMessage({ message }: { message: string | null }) {\n      this.message = message\n    },\n    playAudio(audio: HTMLAudioElement | undefined) {\n      const playPromise = audio?.play()\n      // Check if the audio can be played successfully\n      if (playPromise === undefined) {\n        warn(\"Play promise is undefined\")\n        return\n      }\n      playPromise.catch((err) => {\n        const message = Object.keys(audioErrorMessages).includes(err.name)\n          ? audioErrorMessages[err.name as keyof typeof audioErrorMessages]\n          : \"err_unknown\"\n        if (message === \"err_unknown\") {\n          const { $captureException } = useNuxtApp()\n          $captureException(err)\n        }\n        this.setMessage({ message })\n        audio?.pause()\n      })\n    },\n  },\n})\n","import { ref } from \"vue\"\n\n/**\n * This global ref is SSR safe because it will only\n * change internal value based on client side interaction.\n */\nconst obj = ref<HTMLAudioElement | undefined>(undefined)\n\nexport function useActiveAudio() {\n  return Object.freeze({ obj })\n}\n","import { computed, ref, UnwrapRef } from \"vue\"\n\nconst NotSet = Symbol(\"NotSet\")\n\n/**\n * Produces a `computed` that returns a default value until\n * an explicit value is set.\n *\n * @param getDefault - A function returning the default value\n */\nexport const defaultRef = <T>(getDefault: () => T) => {\n  const explicitlySet = ref<T | typeof NotSet>(NotSet)\n  return computed<T>({\n    get() {\n      if (explicitlySet.value === NotSet) {\n        return getDefault()\n      }\n      return explicitlySet.value as T\n    },\n    set(v) {\n      explicitlySet.value = v as UnwrapRef<T>\n    },\n  })\n}\n","import { computed, ref } from \"vue\"\n\nimport { useUiStore } from \"~/stores/ui\"\n\n/**\n * Composable that handles showing and hiding of the snackbar\n * with instructions for audio interactions.\n *\n * Shows the snackbar when the user focuses the first audio track.\n * Hides the snackbar when the user interacts with it (seeks or clicks on play button).\n */\nexport const useAudioSnackbar = () => {\n  const isMouseDown = ref(false)\n  const handleMouseDown = () => {\n    isMouseDown.value = true\n  }\n\n  const show = () => {\n    if (isMouseDown.value) {\n      // The audio player was clicked to open the single result view, not\n      // focused via keyboard.\n      isMouseDown.value = false\n    } else {\n      useUiStore().showInstructionsSnackbar()\n    }\n  }\n  const hide = () => {\n    useUiStore().hideInstructionsSnackbar()\n  }\n  const dismiss = () => {\n    useUiStore().dismissInstructionsSnackbar()\n  }\n\n  const isVisible = computed(() => useUiStore().areInstructionsVisible)\n\n  return {\n    isVisible,\n    show,\n    hide,\n    dismiss,\n    handleMouseDown,\n    isMouseDown,\n  }\n}\n","<script setup lang=\"ts\">\nimport { useNuxtApp } from \"#imports\"\n\nimport type { SupportedMediaType } from \"#shared/constants/media\"\nimport type { Media } from \"#shared/types/media\"\nimport { useRouteResultParams } from \"~/composables/use-route-result-params\"\n\nimport VButton from \"~/components/VButton.vue\"\n\nconst props = defineProps<{\n  media: Media\n  mediaType: SupportedMediaType\n}>()\nconst { resultParams } = useRouteResultParams()\nconst { $sendCustomEvent } = useNuxtApp()\n\nconst sendGetMediaEvent = () => {\n  $sendCustomEvent(\"GET_MEDIA\", {\n    ...resultParams.value,\n    provider: props.media.provider,\n    mediaType: props.mediaType,\n  })\n}\n</script>\n\n<template>\n  <VButton\n    as=\"VLink\"\n    :href=\"media.foreign_landing_url\"\n    size=\"large\"\n    variant=\"filled-pink-8\"\n    has-icon-end\n    show-external-icon\n    :external-icon-size=\"6\"\n    class=\"description-bold\"\n    :send-external-link-click-event=\"false\"\n    @click=\"sendGetMediaEvent\"\n  >\n    {{ $t(`${mediaType}Details.weblink`) }}\n  </VButton>\n</template>\n","<script setup lang=\"ts\">\nimport { computed } from \"vue\"\n\nimport { audioFeatures, type AudioSize } from \"#shared/constants/audio\"\nimport { timeFmt } from \"#shared/utils/time-fmt\"\nimport type { AudioDetail } from \"#shared/types/media\"\nimport { useUiStore } from \"~/stores/ui\"\nimport { useSensitiveMedia } from \"~/composables/use-sensitive-media\"\n\nimport VAudioThumbnail from \"~/components/VAudioThumbnail/VAudioThumbnail.vue\"\nimport VLicense from \"~/components/VLicense/VLicense.vue\"\n\nconst props = defineProps<{\n  audio: AudioDetail\n  size?: AudioSize\n}>()\n\nconst featureNotices: {\n  timestamps?: string\n  duration?: string\n  seek?: string\n} = {}\n\nconst isSmall = computed(() => props.size === \"s\")\nconst isMedium = computed(() => props.size === \"m\")\nconst isLarge = computed(() => props.size === \"l\")\n\nconst { isHidden: shouldBlur } = useSensitiveMedia(props.audio)\n\nconst uiStore = useUiStore()\nconst isMd = computed(() => uiStore.isBreakpoint(\"md\"))\n</script>\n\n<template>\n  <!-- `pages/search/audio` has negative margin `-mx-4` to compensate for this padding. -->\n  <article\n    class=\"row-track grid p-2 hover:bg-surface md:p-4\"\n    :class=\"[`size-${size}`, { 'items-start': isSmall }]\"\n  >\n    <div\n      class=\"thumbnail grid overflow-hidden rounded-sm\"\n      :class=\"{ 'h-20 w-20': isSmall }\"\n    >\n      <VAudioThumbnail :audio=\"audio\" class=\"col-span-full row-span-full\" />\n      <div\n        v-show=\"isSmall\"\n        class=\"z-10 col-span-full row-span-full self-end justify-self-start\"\n      >\n        <slot\n          name=\"audio-control\"\n          v-bind=\"{ size: 'small', layout: 'row', isTabbable: false } as const\"\n        />\n      </div>\n    </div>\n\n    <div role=\"document\" class=\"flex min-w-0 flex-shrink-0 flex-col gap-1\">\n      <h2\n        class=\"decoration-inherit line-clamp-1 block overflow-hidden text-ellipsis whitespace-nowrap rounded-sm text-default hover:text-default group-hover:underline\"\n        :class=\"[\n          { 'blur-text': shouldBlur },\n          isSmall ? 'label-bold' : 'description-bold',\n        ]\"\n      >\n        {{ shouldBlur ? $t(\"sensitiveContent.title.audio\") : audio.title }}\n      </h2>\n\n      <div\n        class=\"flex text-secondary\"\n        :class=\"[\n          isSmall ? 'caption-regular' : 'label-regular',\n          isMedium ? 'flex-row items-center' : 'flex-col gap-1',\n        ]\"\n      >\n        <i18n-t\n          tag=\"div\"\n          keypath=\"audioTrack.creator\"\n          scope=\"global\"\n          class=\"line-clamp-1 inline-block overflow-hidden text-ellipsis whitespace-nowrap\"\n          :class=\"{ 'blur-text': shouldBlur }\"\n        >\n          <template #creator>{{\n            shouldBlur ? $t(\"sensitiveContent.creator\") : audio.creator\n          }}</template>\n        </i18n-t>\n        <!-- Small layout only -->\n        <div v-if=\"isSmall\" class=\"flex flex-col gap-1\">\n          <div class=\"flex flex-row\">\n            <span class=\"flex\">{{ timeFmt(audio.duration || 0, true) }}</span\n            ><span v-if=\"audio.category\" class=\"dot-before\">{{\n              $t(`filters.audioCategories.${audio.category}`)\n            }}</span>\n          </div>\n          <VLicense :hide-name=\"true\" :license=\"audio.license\" />\n        </div>\n        <!-- Medium and large layouts -->\n        <div v-else class=\"flex flex-shrink-0 flex-row\">\n          <span v-if=\"audio.category\" :class=\"{ 'dot-before': isMedium }\">{{\n            $t(`filters.audioCategories.${audio.category}`)\n          }}</span>\n          <VLicense\n            :hide-name=\"!isMd\"\n            :license=\"audio.license\"\n            :class=\"{ 'dot-before': isMedium || (isLarge && audio.category) }\"\n          />\n        </div>\n      </div>\n    </div>\n\n    <div\n      v-show=\"!isSmall\"\n      class=\"controller flex flex-row\"\n      :class=\"{ 'ms-2': isLarge }\"\n    >\n      <slot\n        name=\"audio-control\"\n        v-bind=\"\n          {\n            size: isLarge ? 'large' : 'medium',\n            layout: 'row',\n            isTabbable: false,\n          } as const\n        \"\n      />\n      <slot\n        name=\"controller\"\n        :features=\"audioFeatures\"\n        :feature-notices=\"featureNotices\"\n        :is-tabbable=\"false\"\n      />\n    </div>\n  </article>\n</template>\n\n<style scoped>\n:deep(.audio-control) {\n  @apply flex-none rounded-es-sm rounded-ss-sm;\n}\n\n:deep(.waveform) {\n  @apply w-full rounded-ee-sm rounded-se-sm;\n  --waveform-background-color: theme(\"colors.tx\");\n}\n\n.row-track.size-s {\n  grid-template-columns: 5rem 1fr;\n  grid-template-rows: repeat(4, auto);\n  @apply gap-x-4;\n  grid-template-areas: \"thumbnail info-1\" \"thumbnail info-2\" \"thumbnail info-3\" \"thumbnail controller\";\n}\n.row-track.size-m {\n  grid-template-columns: 5.9375rem 1fr;\n  grid-template-rows: auto auto 3rem;\n  @apply gap-x-6;\n  grid-template-areas: \"thumbnail info-1\" \"thumbnail info-2\" \"thumbnail controller\";\n}\n.row-track.size-l {\n  grid-template-columns: 4rem 17.5rem 1fr;\n  grid-template-rows: auto auto auto;\n  @apply gap-x-4;\n  grid-template-areas: \"thumbnail info-1 controller\" \"thumbnail info-2 controller\" \"thumbnail info-3 controller\";\n}\n.row-track .thumbnail {\n  grid-area: thumbnail;\n}\n.row-track .controller {\n  grid-area: controller;\n}\n\n.row-track.size-m .waveform {\n  @apply h-12;\n}\n\n.row-track.size-l .waveform {\n  @apply h-16;\n}\n\n.dot-after {\n  @apply relative me-5;\n  @apply after:absolute after:-end-3 after:top-[calc(50%-0.125rem)] after:h-1 after:w-1 after:rounded-full after:bg-gray-8;\n}\n\n.dot-before {\n  @apply relative ms-5;\n  @apply before:absolute before:-start-3 before:top-[calc(50%-0.125rem)] before:h-1 before:w-1 before:rounded-full before:bg-gray-8;\n}\n</style>\n","<script setup lang=\"ts\">\nimport { useI18n } from \"#imports\"\nimport { computed } from \"vue\"\n\nimport type { AudioSize } from \"#shared/constants/audio\"\nimport type { AudioDetail } from \"#shared/types/media\"\nimport { useSensitiveMedia } from \"~/composables/use-sensitive-media\"\n\nimport VLicense from \"~/components/VLicense/VLicense.vue\"\n\nconst props = defineProps<{\n  audio: AudioDetail\n  size: Extract<AudioSize, \"s\" | \"l\">\n}>()\n\nconst { t } = useI18n({ useScope: \"global\" })\n\nconst isSmall = computed(() => props.size === \"s\")\n\nconst categoryLabel = computed(() =>\n  t(`filters.audioCategories.${props.audio.category}`)\n)\n\nconst { isHidden: shouldBlur } = useSensitiveMedia(props.audio)\n</script>\n\n<template>\n  <div\n    class=\"box-track group relative h-0 w-full rounded-sm bg-complementary pt-full text-default\"\n  >\n    <div class=\"absolute inset-0 flex flex-col\">\n      <div class=\"info flex flex-grow flex-col justify-between px-4 pt-4\">\n        <h2\n          class=\"label-bold line-clamp-3\"\n          :class=\"{ 'blur-text': shouldBlur }\"\n        >\n          {{ shouldBlur ? $t(\"sensitiveContent.title.audio\") : audio.title }}\n        </h2>\n        <div class=\"info\">\n          <VLicense\n            class=\"hidden group-hover:block group-focus:block\"\n            hide-name\n            :license=\"audio.license\"\n          />\n          <div v-if=\"audio.category && !isSmall\" class=\"label-regular mt-2\">\n            {{ categoryLabel }}\n          </div>\n        </div>\n      </div>\n\n      <div class=\"player flex h-12 flex-row items-end\">\n        <div class=\"flex-none p-2\">\n          <slot\n            name=\"audio-control\"\n            v-bind=\"\n              { size: 'small', layout: 'box', isTabbable: false } as const\n            \"\n          />\n        </div>\n        <p v-if=\"audio.category && isSmall\" class=\"label-regular self-center\">\n          {{ categoryLabel }}\n        </p>\n        <slot\n          v-if=\"!isSmall\"\n          name=\"controller\"\n          :features=\"[]\"\n          :is-tabbable=\"false\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n:deep(.waveform) {\n  @apply h-10 flex-grow;\n  --waveform-background-color: theme(\"backgroundColor.complementary\");\n}\n</style>\n","<script setup lang=\"ts\">\nimport { toRefs } from \"vue\"\n\nimport type { AudioDetail } from \"#shared/types/media\"\nimport { useSensitiveMedia } from \"~/composables/use-sensitive-media\"\n\nimport VAudioThumbnail from \"~/components/VAudioThumbnail/VAudioThumbnail.vue\"\nimport VLink from \"~/components/VLink.vue\"\n\nconst props = defineProps<{\n  audio: AudioDetail\n}>()\nconst { audio } = toRefs(props)\nconst { isHidden: shouldBlur } = useSensitiveMedia(audio)\n</script>\n\n<template>\n  <div\n    class=\"global-track grid w-full grid-cols-[3rem,1fr] grid-rows-[3rem,3rem] rounded ring-1 ring-[--color-gray-3] ring-opacity-20\"\n  >\n    <div class=\"h-12 w-12 rounded-ss\">\n      <VAudioThumbnail class=\"rounded-ss\" :audio=\"audio\" />\n    </div>\n\n    <div class=\"flex h-12 items-center justify-between rounded-se bg-default\">\n      <VLink\n        :href=\"`/audio/${audio.id}`\"\n        class=\"hover-underline label-bold z-10 flex flex-row items-center px-3 pe-12 text-default\"\n        :class=\"{ 'blur-text': shouldBlur }\"\n      >\n        {{ shouldBlur ? $t(\"sensitiveContent.title.audio\") : audio.title }}\n      </VLink>\n    </div>\n    <slot\n      name=\"audio-control\"\n      v-bind=\"{ size: 'medium', layout: 'global' } as const\"\n    />\n    <slot name=\"controller\" :usable-frac=\"1\" />\n  </div>\n</template>\n\n<style scoped>\n.global-track .thumbnail {\n  @apply h-12 w-12 rounded-ss;\n}\n.global-track .thumbnail img,\n.global-track .thumbnail ~ svg {\n  @apply rounded-ss;\n}\n\n.global-track .waveform {\n  @apply h-full rounded-ee;\n  --waveform-background-color: theme(\"backgroundColor.default\");\n}\n.global-track .audio-control {\n  @apply rounded-es;\n}\n</style>\n","<script setup lang=\"ts\">\n/**\n * Displays the waveform and basic information about the track, along with\n * controls to play, pause or seek to a point on the track.\n */\nimport { useI18n, useRoute } from \"#imports\"\nimport { computed, onUnmounted, ref, watch } from \"vue\"\n\nimport { AUDIO } from \"#shared/constants/media\"\nimport {\n  activeAudioStatus,\n  AudioLayout,\n  AudioSize,\n  AudioStatus,\n} from \"#shared/constants/audio\"\nimport { firstParam } from \"#shared/utils/query-utils\"\nimport type {\n  AudioInteraction,\n  AudioInteractionData,\n} from \"#shared/types/analytics\"\nimport type { AudioDetail } from \"#shared/types/media\"\nimport type { AudioTrackClickEvent } from \"#shared/types/events\"\nimport { useActiveMediaStore } from \"~/stores/active-media\"\nimport { useMediaStore } from \"~/stores/media\"\nimport { useActiveAudio } from \"~/composables/use-active-audio\"\nimport { defaultRef } from \"~/composables/default-ref\"\nimport { useSeekable } from \"~/composables/use-seekable\"\nimport { useAudioSnackbar } from \"~/composables/use-audio-snackbar\"\nimport {\n  useMatchSearchRoutes,\n  useMatchSingleResultRoutes,\n} from \"~/composables/use-match-routes\"\n\nimport VAudioControl from \"~/components/VAudioTrack/VAudioControl.vue\"\nimport VWaveform from \"~/components/VAudioTrack/VWaveform.vue\"\nimport VFullLayout from \"~/components/VAudioTrack/layouts/VFullLayout.vue\"\nimport VRowLayout from \"~/components/VAudioTrack/layouts/VRowLayout.vue\"\nimport VBoxLayout from \"~/components/VAudioTrack/layouts/VBoxLayout.vue\"\nimport VGlobalLayout from \"~/components/VAudioTrack/layouts/VGlobalLayout.vue\"\nimport VLink from \"~/components/VLink.vue\"\n\nconst props = defineProps<{\n  /**\n   * The information about the track, typically from a track's detail endpoint\n   */\n  audio: AudioDetail\n  /**\n   * The arrangement of the contents on the canvas. This determines the\n   * overall L&F of the audio component.\n   */\n  layout: AudioLayout\n  /**\n   * The size of the component; Both 'box' and 'row' layouts offer multiple\n   * sizes to choose from.\n   */\n  size?: AudioSize\n  /**\n   * The URL for the single result page. Can include search term and position\n   * in the search results.\n   */\n  href?: string\n}>()\nconst emit = defineEmits<{\n  \"shift-tab\": [KeyboardEvent]\n  interacted: [Pick<AudioInteractionData, \"event\" | \"id\" | \"provider\">]\n  mousedown: [AudioTrackClickEvent]\n  focus: [FocusEvent]\n}>()\n\nconst { t } = useI18n({ useScope: \"global\" })\n\nconst activeMediaStore = useActiveMediaStore()\nconst route = useRoute()\n\nconst activeAudio = useActiveAudio()\n\nconst status = ref<AudioStatus>(\"paused\")\nconst currentTime = ref(0)\n\nconst initLocalAudio = () => {\n  // Preserve existing local audio if we plucked it from the global active audio\n  if (!localAudio) {\n    localAudio = new Audio(props.audio.url)\n  }\n\n  Object.entries(eventMap).forEach(([name, fn]) =>\n    /**\n     * This cast is safe, it just filters `undefined` that is still present on the\n     * `localAudio`'s type despite the check above to create it if it doesn't exist.\n     */\n    (localAudio as HTMLAudioElement).addEventListener(name, fn)\n  )\n\n  /**\n   * Similar to the behavior in the global audio track,\n   * if the local audio was set to an already existing and\n   * matching active global track, then we'll need to initialize\n   * the status based on the `paused` and `ended` booleans\n   * on the audio object.\n   *\n   * For newly initialized audio objects, this is harmless,\n   * but it is essential for making sure page transitions\n   * preserve the existing, already manipulated audio\n   * object's state.\n   *\n   * Unlike the global audio track, however, this will not\n   * always result in a status of `playing` in practice,\n   * as the state of the active global track could be any\n   * of the three statuses we track when the page transition\n   * happens. For example, the audio track on the result page\n   * could have been played through (and thus `ended`), or it\n   * could be paused mid-way (and thus `paused`), or neither\n   * and thus would be playing.\n   */\n  if (localAudio.paused) {\n    if (localAudio.ended) {\n      setPlayed()\n    } else {\n      setPaused()\n    }\n  } else {\n    setPlaying()\n  }\n\n  currentTime.value = localAudio.currentTime\n}\n\n/**\n * We can only create the local audio object on the client,\n * so the initialization of this variable is hidden inside\n * the `initLocalAudio` function which is only called when\n * playback is first requested or when the track is first seeked.\n *\n * However, when navigating to an audio result page, if\n * the globally active audio already matches the result\n * that was clicked on, hijack that object instead and\n * treat it as the local audio for this instance.\n */\nlet localAudio =\n  activeAudio.obj.value?.src === props.audio.url\n    ? activeAudio.obj.value\n    : undefined\n\nconst updateTimeLoop = () => {\n  if (localAudio) {\n    if (activeAudioStatus.includes(status.value)) {\n      currentTime.value = localAudio.currentTime\n      window.requestAnimationFrame(updateTimeLoop)\n    } else {\n      currentTime.value = localAudio.currentTime\n    }\n  }\n}\n\nconst mediaStore = useMediaStore()\nconst setLoaded = () => {\n  mediaStore.setMediaProperties(\"audio\", props.audio.id, {\n    hasLoaded: true,\n  })\n  status.value = \"playing\"\n}\nconst setWaiting = () => {\n  status.value = \"loading\"\n}\nconst setPlaying = () => {\n  if (props.audio.hasLoaded) {\n    status.value = \"playing\"\n  } else {\n    status.value = \"loading\"\n  }\n  activeAudio.obj.value = localAudio\n  activeMediaStore.setActiveMediaItem({\n    type: \"audio\",\n    id: props.audio.id,\n  })\n  activeMediaStore.setMessage({ message: null })\n  updateTimeLoop()\n}\nconst setPaused = () => {\n  status.value = \"paused\"\n  activeMediaStore.pauseActiveMediaItem()\n}\nconst setPlayed = () => (status.value = \"played\")\nconst setTimeWhenPaused = () => {\n  if (status.value !== \"playing\" && localAudio) {\n    currentTime.value = localAudio.currentTime\n    if (status.value === \"played\") {\n      // Set to pause to remove replay icon\n      status.value = \"paused\"\n    }\n  }\n}\nconst duration = defaultRef(() => {\n  if (localAudio) {\n    return localAudio.duration\n  }\n  if (typeof props.audio?.duration === \"number\") {\n    return props.audio.duration / 1e3\n  }\n  return 0\n})\nconst setDuration = () => {\n  if (localAudio) {\n    duration.value = localAudio.duration\n  }\n}\n\nconst eventMap = {\n  play: setPlaying,\n  pause: setPaused,\n  ended: setPlayed,\n  timeupdate: setTimeWhenPaused,\n  durationchange: setDuration,\n  waiting: setWaiting,\n  playing: setLoaded,\n} as const\n\n/**\n * If we're transforming the globally active audio\n * into our local audio, then we need to initialize\n * the local state syncing from the audio object\n * to our local refs.\n *\n * This lives here instead of closer to where `localAudio`\n * is defined because `initLocalAudio` and several of\n * the functions it depends on also all depend on the\n * `localAudio` variable. This is the earliest in\n * `setup` that this can be called.\n */\nif (localAudio) {\n  initLocalAudio()\n}\n\nonUnmounted(() => {\n  if (!localAudio) {\n    return\n  }\n\n  Object.entries(eventMap).forEach(([name, fn]) =>\n    localAudio?.removeEventListener(name, fn)\n  )\n\n  const { matches: isSearchRoute } = useMatchSearchRoutes()\n  const { matches: isSingleResultRoute } = useMatchSingleResultRoutes()\n\n  const mediaId = firstParam(route?.params.id)\n\n  if (\n    (isSingleResultRoute.value && mediaId && mediaId === props.audio.id) ||\n    (isSearchRoute.value && mediaStore.getItemById(AUDIO, props.audio.id))\n  ) {\n    /**\n     * If switching to any route other than the single result\n     * route for this track, pause it. Otherwise, let it keep\n     * playing to introduce a \"seamless\" feeling between the\n     * search results page and the single result page.\n     *\n     * This handles going from the search page to the single\n     * result page for a different track than is currently playing.\n     * It also handles the same interaction for related audio.\n     * Also for related audio, it will handle pausing any related\n     * audio when navigating back from the single result page\n     * to the search results page.\n     *\n     * Also, if the currently playing audio is present in the\n     * existing list of search results, then also let it keep\n     * playing.\n     */\n    return\n  }\n\n  localAudio.pause()\n})\n\nconst play = () => {\n  // Delay initializing the local audio element until playback is requested\n  if (!localAudio) {\n    initLocalAudio()\n  }\n  activeMediaStore.playAudio(localAudio)\n}\nconst pause = () => localAudio?.pause()\n\nwatch(\n  activeAudio.obj,\n  (audio) => {\n    if (\n      audio !== localAudio &&\n      (status.value === \"playing\" || status.value === \"loading\")\n    ) {\n      localAudio?.pause()\n    }\n  },\n  { immediate: true }\n)\n\n/* Timekeeping */\n\nconst message = computed(() =>\n  activeMediaStore.message\n    ? t(`audioTrack.messages.${activeMediaStore.message}`)\n    : \"\"\n)\n\n/* Interface with VAudioControl */\n\n/**\n * This function can safely ignore the `loading` status because\n * that status is never toggled _to_.\n */\nconst handleToggle = (state?: Exclude<AudioStatus, \"loading\">) => {\n  let event: AudioInteraction | undefined = undefined\n  if (!state) {\n    switch (status.value) {\n      case \"playing\": {\n        state = \"paused\"\n        break\n      }\n      case \"paused\":\n      case \"played\": {\n        state = \"playing\"\n        break\n      }\n    }\n  }\n\n  switch (state) {\n    case \"playing\": {\n      play()\n      event = \"play\"\n      break\n    }\n    case \"paused\": {\n      pause()\n      event = \"pause\"\n      break\n    }\n  }\n  emitInteracted(event)\n}\n\nconst emitInteracted = (event?: AudioInteraction) => {\n  if (!event) {\n    return\n  }\n  snackbar.dismiss()\n  emit(\"interacted\", {\n    event,\n    id: props.audio.id,\n    provider: props.audio.provider,\n  })\n}\n\n/* Interface with VWaveform */\n\nconst handleSeeked = (frac: number) => {\n  if (!localAudio) {\n    initLocalAudio()\n  }\n  /**\n   * Calling initLocalAudio will guarantee localAudio\n   * to be an HTMLAudioElement, but we can't prove that\n   * to TypeScript without jumping through some tricky\n   * hoops (using `assert`) or adding unnecessary\n   * runtime checks.\n   */\n  if (localAudio) {\n    if (Number.isFinite(duration.value)) {\n      localAudio.currentTime = frac * duration.value\n    } else if (Number.isFinite(localAudio.duration)) {\n      localAudio.currentTime = frac * localAudio.duration\n    } else {\n      console.warn(\"Duration is not finite. Skipping seek.\")\n    }\n  }\n  emitInteracted(\"seek\")\n}\n\n/* Layout */\nconst layoutMappings = {\n  full: VFullLayout,\n  row: VRowLayout,\n  box: VBoxLayout,\n  global: VGlobalLayout,\n}\nconst layoutComponent = computed(() => layoutMappings[props.layout])\n\n/**\n * Sets default size if not provided.\n */\nconst layoutSize = computed(() => {\n  if (props.layout === \"box\" && !props.size) {\n    return undefined\n  }\n  return props.size ?? \"m\"\n})\n\n/**\n * A ref used on the play/pause button,\n * so we can capture clicks and skip\n * sending an event to the boxed layout.\n */\nconst audioControlRef = ref<InstanceType<typeof VAudioControl> | null>(null)\n\n/**\n * A ref used on the waveform, so we can capture mousedown on the\n * audio track outside it as it will open a detail page.\n */\nconst waveformRef = ref<InstanceType<typeof VWaveform> | null>(null)\n\nconst handleMousedown = (event: MouseEvent) => {\n  const inWaveform =\n    waveformRef.value?.$el.contains(event.target as Node) ?? false\n  snackbar.handleMouseDown()\n  emit(\"mousedown\", { event, inWaveform })\n}\n\nconst isComposite = computed(() => [\"box\", \"row\"].includes(props.layout))\n\nconst ariaLabel = computed(() =>\n  t(\n    isComposite.value\n      ? \"audioTrack.ariaLabelInteractiveSeekable\"\n      : \"audioTrack.ariaLabel\",\n    { title: props.audio.title }\n  )\n)\n\nconst togglePlayback = () => {\n  status.value = activeAudioStatus.includes(status.value) ? \"paused\" : \"playing\"\n  handleToggle(status.value)\n}\n\nconst { isSeeking, ...seekable } = useSeekable({\n  duration,\n  currentTime,\n  isReady: ref(true),\n  isSeekable: computed(() => props.layout !== \"box\"),\n  onSeek: handleSeeked,\n  onTogglePlayback: togglePlayback,\n})\nconst handleKeydown = (event: KeyboardEvent) => {\n  seekable.listeners.keydown(event)\n}\n\n/**\n * These layout-conditional props and listeners allow us\n * to set properties on the parent element depending on\n * the layout in use.\n */\nconst containerAttributes = computed(() => {\n  // ARIA slider attributes are only added when interactive\n  return isComposite.value ? seekable.attributes.value : {}\n})\n\nconst snackbar = useAudioSnackbar()\n\nconst handleFocus = (event: FocusEvent) => {\n  snackbar.show()\n  emit(\"focus\", event)\n}\n\nconst handleBlur = () => {\n  snackbar.hide()\n  seekable.listeners.blur()\n}\n\nconst handleWaveformFocus = (event: FocusEvent) => {\n  if (!isComposite.value) {\n    handleFocus(event)\n  }\n}\nconst handleWaveformBlur = () => {\n  if (!isComposite.value) {\n    handleBlur()\n  }\n}\n</script>\n\n<template>\n  <!-- eslint-disable vue/use-v-on-exact -->\n  <Component\n    :is=\"isComposite ? VLink : 'div'\"\n    :href=\"href\"\n    v-bind=\"containerAttributes\"\n    class=\"audio-track group block overflow-hidden rounded-sm hover:no-underline\"\n    :class=\"{\n      'audio-link cursor-pointer focus-visible:focus-bold-filled':\n        layout === 'box',\n      'cursor-pointer focus-visible:focus-slim-tx': layout === 'row',\n    }\"\n    :aria-label=\"ariaLabel\"\n    :role=\"isComposite ? 'application' : undefined\"\n    @keydown.shift.tab.exact=\"$emit('shift-tab', $event)\"\n    @keydown=\"handleKeydown\"\n    @blur=\"handleBlur\"\n    @mousedown=\"handleMousedown\"\n    @focus=\"handleFocus\"\n  >\n    <Component\n      :is=\"layoutComponent\"\n      :audio=\"audio\"\n      :size=\"layoutSize\"\n      :status=\"status\"\n      :current-time=\"currentTime\"\n    >\n      <template #controller=\"waveformProps\">\n        <VWaveform\n          ref=\"waveformRef\"\n          v-bind=\"waveformProps\"\n          :is-parent-seeking=\"isSeeking\"\n          :peaks=\"audio.peaks\"\n          :audio-id=\"audio.id\"\n          :current-time=\"currentTime\"\n          :duration=\"duration\"\n          :message=\"message\"\n          @seeked=\"handleSeeked\"\n          @toggle-playback=\"handleToggle\"\n          @blur=\"handleWaveformBlur\"\n          @focus=\"handleWaveformFocus\"\n        />\n      </template>\n\n      <template #audio-control=\"audioControlProps\">\n        <VAudioControl\n          ref=\"audioControlRef\"\n          :status=\"status\"\n          v-bind=\"audioControlProps\"\n          @toggle=\"handleToggle\"\n        />\n      </template>\n    </Component>\n  </Component>\n</template>\n"],"names":["ACTIVE_MEDIA","useActiveMediaStore","defineStore","type","id","status","message","audio","playPromise","warn","err","audioErrorMessages","$captureException","useNuxtApp","obj","ref","useActiveAudio","NotSet","defaultRef","getDefault","explicitlySet","computed","v","useAudioSnackbar","isMouseDown","handleMouseDown","show","useUiStore","hide","dismiss","props","__props","resultParams","useRouteResultParams","$sendCustomEvent","sendGetMediaEvent","featureNotices","isSmall","isMedium","isLarge","shouldBlur","useSensitiveMedia","uiStore","isMd","t","useI18n","categoryLabel","toRefs","emit","__emit","activeMediaStore","route","useRoute","activeAudio","currentTime","initLocalAudio","localAudio","eventMap","name","fn","setPlayed","setPaused","setPlaying","_a","updateTimeLoop","activeAudioStatus","mediaStore","useMediaStore","setLoaded","setWaiting","setTimeWhenPaused","duration","onUnmounted","isSearchRoute","useMatchSearchRoutes","isSingleResultRoute","useMatchSingleResultRoutes","mediaId","firstParam","AUDIO","play","pause","watch","handleToggle","state","event","emitInteracted","snackbar","handleSeeked","frac","layoutMappings","VFullLayout","VRowLayout","VBoxLayout","VGlobalLayout","layoutComponent","layoutSize","audioControlRef","waveformRef","handleMousedown","inWaveform","isComposite","ariaLabel","togglePlayback","isSeeking","seekable","useSeekable","handleKeydown","containerAttributes","handleFocus","handleBlur","handleWaveformFocus","handleWaveformBlur"],"mappings":"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"}