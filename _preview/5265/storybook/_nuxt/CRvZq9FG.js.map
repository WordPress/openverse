{"version":3,"file":"CRvZq9FG.js","sources":["../../src/pages/image/[id]/report.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { defineNuxtRouteMiddleware, definePageMeta, useI18n } from \"#imports\"\nimport { computed } from \"vue\"\n\nimport { IMAGE } from \"#shared/constants/media\"\nimport { skipToContentTargetId } from \"#shared/constants/window\"\nimport { getAttribution } from \"#shared/utils/attribution-html\"\nimport { firstParam } from \"#shared/utils/query-utils\"\nimport { useSingleResultStore } from \"~/stores/media/single-result\"\nimport { useContentReport } from \"~/composables/use-content-report\"\n\nimport VButton from \"~/components/VButton.vue\"\nimport VContentReportForm from \"~/components/VContentReport/VContentReportForm.vue\"\n\ndefineOptions({\n  name: \"ImageReportPage\",\n})\n\ndefinePageMeta({\n  layout: \"content-layout\",\n  middleware: defineNuxtRouteMiddleware(async (to) => {\n    const imageId = firstParam(to.params?.id)\n    const singleResultStore = useSingleResultStore()\n    await singleResultStore.fetch(IMAGE, imageId)\n  }),\n})\n\nconst { t } = useI18n({ useScope: \"global\" })\nconst singleResultStore = useSingleResultStore()\n\nconst image = computed(() => singleResultStore.image)\nconst attributionMarkup = computed(() =>\n  image.value\n    ? getAttribution(image.value, t, {\n        includeIcons: false,\n      })\n    : \"\"\n)\nconst { status, updateStatus, title } = useContentReport()\n</script>\n\n<template>\n  <main\n    :id=\"skipToContentTargetId\"\n    tabindex=\"-1\"\n    class=\"mx-auto mb-6 mt-8 max-w-none gap-x-10 px-4 md:grid md:max-w-4xl md:grid-cols-2 md:px-6 lg:mb-30 lg:px-0 xl:max-w-4xl\"\n  >\n    <figure v-if=\"image\" class=\"mb-6 flex flex-col items-start gap-y-4\">\n      <img\n        id=\"main-image\"\n        :src=\"image.thumbnail\"\n        :alt=\"image.title\"\n        class=\"mx-auto h-auto w-full rounded-sm\"\n        :width=\"image.width\"\n        :height=\"image.height\"\n      />\n      <!-- Disable reason: We control the attribution HTML generation so this is safe and will not lead to XSS attacks -->\n      <!-- eslint-disable vue/no-v-html -->\n      <figcaption\n        class=\"block w-full text-left text-sr\"\n        v-html=\"attributionMarkup\"\n      />\n      <!-- eslint-enable vue/no-v-html -->\n      <VButton\n        variant=\"bordered-gray\"\n        :href=\"`/image/${image.id}`\"\n        as=\"VLink\"\n        size=\"medium\"\n        class=\"label-bold\"\n      >\n        {{ $t(\"report.imageDetails\") }}\n      </VButton>\n    </figure>\n\n    <div>\n      <h2 class=\"heading-6 mb-4\">{{ title }}</h2>\n      <VContentReportForm\n        v-if=\"image\"\n        :media=\"image\"\n        :allow-cancel=\"false\"\n        :status=\"status\"\n        @update-status=\"updateStatus\"\n      />\n    </div>\n  </main>\n</template>\n"],"names":["_hoisted_5","__props","singleResultStore","useSingleResultStore","image","computed","getAttribution","t"],"mappings":"uhDAEAA,EAAyB,CAAA,MAAA,gBAAA,8CAgBV,MAAAC,EAAA,CAUf,KAAM,kBAAyC,QAAA,CAAA,EAEzCC,EAAuBC,EAAuB,EAC9CC,EAAoBC,EAAA,IAAAH,EAAA,KAAA,IAELG,EAAgB,IACfD,EAAA,MAAAE,EAAAF,EAAA,MAAAG,EAAA,CAEhB,aAAA,EAAA,CACN,EAAA,EACA"}