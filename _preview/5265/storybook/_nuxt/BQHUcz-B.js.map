{"version":3,"file":"BQHUcz-B.js","sources":["../../shared/types/feature-flag.ts","../../src/pages/preferences.vue"],"sourcesContent":["import featureData from \"~~/feat/feature-flags.json\"\n\nimport type {\n  FeatureState,\n  FlagStatus,\n  Storage,\n} from \"#shared/constants/feature-flag\"\nimport type { DeployEnv } from \"#shared/constants/deploy-env\"\n\nexport type FlagName = keyof (typeof featureData)[\"features\"]\n\nexport function isFlagName(flag: string): flag is FlagName {\n  return flag in featureData.features\n}\n\nexport type FlagStatusRecord = string | Partial<Record<DeployEnv, string>>\n/**\n * The record of a feature flag from the json file.\n */\nexport interface FeatureFlagRecord {\n  status: FlagStatusRecord\n  description?: string\n  data?: unknown\n\n  defaultState?: FeatureState\n\n  supportsQuery?: boolean // default: true\n\n  storage: Storage\n}\n\n/**\n * The feature flag with the status resolved based on the current environment.\n */\nexport type FeatureFlag = Omit<FeatureFlagRecord, \"status\"> & {\n  name: keyof (typeof featureData)[\"features\"]\n  status: FlagStatus\n  state: FeatureState\n  preferredState: FeatureState | undefined\n}\n","<script setup lang=\"ts\">\nimport { definePageMeta, useNuxtApp } from \"#imports\"\nimport { computed } from \"vue\"\n\nimport { SWITCHABLE, ON, OFF } from \"#shared/constants/feature-flag\"\nimport { isFlagName } from \"#shared/types/feature-flag\"\nimport { useFeatureFlagStore } from \"~/stores/feature-flag\"\nimport { useHydrating } from \"~/composables/use-hydrating\"\n\nimport VContentPage from \"~/components/VContentPage.vue\"\nimport VCheckbox from \"~/components/VCheckbox/VCheckbox.vue\"\n\ndefineOptions({\n  name: \"PreferencesPage\",\n})\n\ndefinePageMeta({\n  layout: \"content-layout\",\n})\n\nconst featureFlagStore = useFeatureFlagStore()\n\nconst flags = computed(() => featureFlagStore.flags)\n\n/**\n * Toggle the state of the switchable flag to the preferred value.\n * @param name\n * @param checked\n */\nconst handleChange = ({\n  name,\n  checked,\n}: {\n  name: string\n  checked?: boolean\n}) => {\n  if (!isFlagName(name)) {\n    return\n  }\n  featureFlagStore.toggleFeature(name, checked ? ON : OFF)\n}\n\nconst flagsBySwitchable = computed(() => {\n  return {\n    true: featureFlagStore.getFlagsBySwitchable(true),\n    false: featureFlagStore.getFlagsBySwitchable(false),\n  }\n})\n\nconst featureGroups = computed(() => {\n  return featureFlagStore.getFeatureGroups()\n})\n\nconst { doneHydrating } = useHydrating()\n\nconst captureException = () => {\n  useNuxtApp().$captureException(new Error(\"Test Sentry Exception\"))\n}\n</script>\n\n<template>\n  <VContentPage>\n    <h1>{{ $t(\"prefPage.title\") }}</h1>\n\n    <!-- TODO: Extract this to preferences modal. -->\n    <!--\n    This area only lists switchable flags because if the flag is not switchable,\n    it doesn't count as a user preference.\n    -->\n    <div\n      v-for=\"group in featureGroups\"\n      :key=\"group.title\"\n      class=\"not-prose border-b border-default py-6 last-of-type:border-b-0\"\n    >\n      <h2 class=\"label-bold mb-2\">\n        {{ $t(`prefPage.groups.${group.title}.title`) }}\n      </h2>\n      <p class=\"label-regular mb-4\">\n        {{\n          $t(`prefPage.groups.${group.title}.desc`, { openverse: \"Openverse\" })\n        }}\n      </p>\n      <ul>\n        <li\n          v-for=\"flag in group.features\"\n          :key=\"flag.name\"\n          class=\"mb-4 last:mb-0\"\n        >\n          <VCheckbox\n            v-if=\"flag.status === SWITCHABLE\"\n            :id=\"flag.name\"\n            class=\"flex-row items-center\"\n            :checked=\"flag.state === ON\"\n            is-switch\n            :disabled=\"!doneHydrating\"\n            @change=\"handleChange\"\n            >{{ $t(`prefPage.features.${flag.name}`) }}</VCheckbox\n          >\n        </li>\n      </ul>\n    </div>\n\n    <div\n      v-for=\"isSwitchable in [false, true]\"\n      :key=\"`${isSwitchable}`\"\n      class=\"not-prose border-b border-default py-6 last-of-type:border-b-0\"\n    >\n      <h2 class=\"label-bold mb-2\">\n        {{ $t(`prefPage.${isSwitchable ? \"s\" : \"nonS\"}witchable.title`) }}\n      </h2>\n      <p class=\"label-regular mb-4\">\n        {{ $t(`prefPage.${isSwitchable ? \"s\" : \"nonS\"}witchable.desc`) }}\n      </p>\n      <ul>\n        <li\n          v-for=\"flag in flagsBySwitchable[`${isSwitchable}`]\"\n          :key=\"flag.name\"\n          class=\"mb-4 flex flex-row items-center last:mb-0\"\n        >\n          <VCheckbox\n            :id=\"flag.name\"\n            class=\"flex-row items-center\"\n            :checked=\"flag.state === ON\"\n            :disabled=\"flag.status !== SWITCHABLE\"\n            is-switch\n            @change=\"handleChange\"\n          >\n            <div>\n              <strong>{{ flag.name }}{{ `: ${flag.state}` }}</strong>\n              <br />\n              {{ flag.description }}\n            </div>\n          </VCheckbox>\n        </li>\n      </ul>\n    </div>\n\n    <h2>{{ $t(\"prefPage.storeState\") }}</h2>\n    <pre><code>{{ flags }}</code></pre>\n\n    <!-- eslint-disable @intlify/vue-i18n/no-raw-text -->\n    <VButton\n      v-if=\"$config.public.sentry.environment === 'local'\"\n      variant=\"bordered-gray\"\n      size=\"medium\"\n      @click=\"captureException\"\n      >Capture Sentry Exception</VButton\n    ><!-- eslint-enable -->\n  </VContentPage>\n</template>\n"],"names":["isFlagName","flag","featureData","featureFlagStore","useFeatureFlagStore","flags","computed","handleChange","name","checked","ON","OFF","flagsBySwitchable","featureGroups","doneHydrating","useHydrating","captureException","useNuxtApp"],"mappings":"69BAWO,SAASA,EAAWC,EAAgC,CACzD,OAAOA,KAAQC,EAAY,QAC7B,uLCOA,MAAMC,EAAmBC,EAAoB,EAEvCC,EAAQC,EAAS,IAAMH,EAAiB,KAAK,EAO7CI,EAAe,CAAC,CACpB,KAAAC,EACA,QAAAC,CAAA,IAII,CACCT,EAAWQ,CAAI,GAGpBL,EAAiB,cAAcK,EAAMC,EAAUC,EAAKC,CAAG,CACzD,EAEMC,EAAoBN,EAAS,KAC1B,CACL,KAAMH,EAAiB,qBAAqB,EAAI,EAChD,MAAOA,EAAiB,qBAAqB,EAAK,CACpD,EACD,EAEKU,EAAgBP,EAAS,IACtBH,EAAiB,iBAAiB,CAC1C,EAEK,CAAE,cAAAW,CAAc,EAAIC,EAAa,EAEjCC,EAAmB,IAAM,CAC7BC,EAAa,EAAA,kBAAkB,IAAI,MAAM,uBAAuB,CAAC,CACnE"}