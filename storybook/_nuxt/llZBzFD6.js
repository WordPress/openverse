import{d as b,r as p,c as d,w as m,k as l,Q as r,S as v,R as c,O as k,P as y,K as g,l as w,j as i}from"./53SD24Bo.js";import{V as x}from"./CCSsdpEp.js";(function(){try{var s=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},n=new s.Error().stack;n&&(s._sentryDebugIds=s._sentryDebugIds||{},s._sentryDebugIds[n]="aa4d1e1f-415f-467e-83b6-fcc80e61c8d9",s._sentryDebugIdIdentifier="sentry-dbid-aa4d1e1f-415f-467e-83b6-fcc80e61c8d9")}catch{}})();const C=["for"],_={class:"relative block"},S=["id","disabled"],I=b({__name:"VCheckbox",props:{id:{},checked:{type:Boolean,default:!1},name:{},value:{},disabled:{type:Boolean},isSwitch:{type:Boolean,default:!1}},emits:["change"],setup(s,{emit:n}){const a=s,u=n,t=p(a.checked||!1),h=d(()=>a.disabled?"text-disabled":"text-default"),o=d(()=>{const e={name:a.name||a.id,value:a.value||a.id};return t.value&&(e.checked=!0),e});m(()=>a.checked,e=>{e!==t.value&&(t.value=e)});const f=()=>{t.value=!t.value,u("change",{name:o.value.name,value:o.value.value,checked:t.value})};return(e,V)=>(i(),l("label",{for:e.id,class:c(["relative flex text-sm leading-5",h.value])},[r("span",_,[r("input",v({id:e.id,type:"checkbox",class:["me-3 block appearance-none border border-tertiary bg-default transition-colors duration-100 checked:bg-tertiary disabled:border-disabled disabled:bg-secondary checked:disabled:border-disabled checked:disabled:bg-disabled",e.isSwitch?["h-4.5","w-9","rounded-full","focus-slim-offset"]:["h-5","w-5","rounded-sm","focus-visible:focus-slim-tx","checked:focus-visible:border-bg-ring"]]},o.value,{disabled:e.disabled?!0:void 0,onClick:f}),null,16,S),e.isSwitch?(i(),l("span",{key:0,class:c(["absolute left-0.75 top-0.75 block h-3 w-3 rounded-full transition-transform duration-100",t.value?["bg-default","translate-x-[1.125rem]"]:e.disabled?["bg-disabled"]:["bg-tertiary"]]),"aria-hidden":"true"},null,2)):k((i(),g(x,{key:1,class:"pointer-events-none absolute inset-0 transform text-over-dark",name:"check",size:5},null,512)),[[y,t.value]])]),w(e.$slots,"default")],10,C))}});I.__docgenInfo={exportName:"default",displayName:"VCheckbox",description:"",tags:{},props:[{name:"id",description:"Checkbox `id` is used for the input id property, connecting the label to\nthe checkbox. id is also used in the `change` event payload as the `name`\nand `value` parameters if they are not set.",required:!0,type:{name:"string"}},{name:"checked",description:"Whether the checkbox is checked or not. No indeterminate state is allowed.",tags:{default:[{description:"false",title:"default"}]},required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"name",description:`Usually this is the category that this checkbox belongs to, e.g. 'license' for a
'by-nc-nd' checkbox, or 'licenseType' for 'commercial' checkbox.
This parameter is used in the emitted object.

If the form submission is done natively, the name and value parameters are used
when sending the form data to the server on form submit: if a checkbox is checked,
\`name=value\` pair is added to the POST request body.

If not set, the value of \`id\` prop is used instead.`,required:!1,type:{name:"string"}},{name:"value",description:"The value parameter in `name=value` pair sent in the POST request body, here\nemitted in the event's payload. Usually the code as 'by-nc-nd'.\n\nIf not set, the value of `id` prop is used.",required:!1,type:{name:"string"}},{name:"disabled",description:"Sets disabled property of the input and changes label opacity if set to true.",required:!1,type:{name:"boolean"}},{name:"isSwitch",description:"whether to make the checkbox appear like a switch",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"false"}}],events:[{name:"change",type:{names:["Omit"],elements:[{name:"CheckboxAttrs"},{name:'"disabled"'}]}}],slots:[{name:"default",description:"The checkbox label"}],sourceFiles:["/home/runner/work/openverse/openverse/frontend/src/components/VCheckbox/VCheckbox.vue"]};export{I as _};
