{"version":3,"file":"DeQHrU1s.js","sources":["../../shared/utils/errors.ts"],"sourcesContent":["import { clientSideErrorCodes, NO_RESULT } from \"#shared/constants/errors\"\nimport type { FetchingError } from \"#shared/types/fetch-state\"\n\nconst NON_RETRYABLE_ERROR_CODES = [429, 500, 404] as const\nconst isNonRetryableErrorStatusCode = (statusCode: number | undefined) => {\n  return (\n    statusCode &&\n    (NON_RETRYABLE_ERROR_CODES as readonly number[]).includes(statusCode)\n  )\n}\n\n/**\n * Returns true if the request should be retried if error occurred on\n * the server. For 429, 500 or 404 errors, or for NO_RESULT error,\n * the status will not change on retry, so the request should not be resent.\n * TODO: Update this function with other error codes if needed.\n */\nexport const isRetriable = (error: FetchingError) => {\n  const { statusCode, code } = error\n  return !(isNonRetryableErrorStatusCode(statusCode) || code === NO_RESULT)\n}\n\nexport const handledClientSide = (error: FetchingError) => {\n  return (\n    !isNonRetryableErrorStatusCode(error.statusCode) &&\n    (clientSideErrorCodes as readonly string[]).includes(error.code)\n  )\n}\n"],"names":["NON_RETRYABLE_ERROR_CODES","isNonRetryableErrorStatusCode","statusCode","isRetriable","error","code","NO_RESULT","handledClientSide","clientSideErrorCodes"],"mappings":"wXAGA,MAAMA,EAA4B,CAAC,IAAK,IAAK,GAAG,EAC1CC,EAAiCC,GAEnCA,GACCF,EAAgD,SAASE,CAAU,EAU3DC,EAAeC,GAAyB,CAC7C,KAAA,CAAE,WAAAF,EAAY,KAAAG,CAAA,EAASD,EAC7B,MAAO,EAAEH,EAA8BC,CAAU,GAAKG,IAASC,EACjE,EAEaC,EAAqBH,GAE9B,CAACH,EAA8BG,EAAM,UAAU,GAC9CI,EAA2C,SAASJ,EAAM,IAAI"}