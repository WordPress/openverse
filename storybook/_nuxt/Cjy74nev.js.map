{"version":3,"file":"Cjy74nev.js","sources":["../../src/components/VInputField/VInputField.vue"],"sourcesContent":["<script setup lang=\"ts\">\n/**\n * Provides a control to enter text as input.\n */\nimport { ref, computed, useAttrs, type InputTypeHTMLAttribute } from \"vue\"\n\ndefineOptions({ inheritAttrs: false })\n/**\n * the textual content of the input field\n */\nconst modelValue = defineModel<string>()\ntype Connection = \"start\" | \"end\"\n\nwithDefaults(\n  defineProps<{\n    /**\n     * the textual content of the label associated with this input field; This\n     * label is SR-only. If you want to display a visible label, add\n     * `for=\"fieldId\"` to the label element and set the `fieldId` prop to the\n     * same value as the `for` attribute.\n     */\n    labelText?: string\n    /**\n     * the ID to assign to the field; This can be used to attach custom labels\n     * to the field.\n     */\n    fieldId: string\n    /**\n     * list of sides where the field is connected to other controls\n     */\n    connectionSides?: Connection[]\n\n    placeholder?: string\n    type?: InputTypeHTMLAttribute\n  }>(),\n  {\n    connectionSides: () => [],\n    type: \"text\",\n  }\n)\n\nconst emit = defineEmits<{ \"update:modelValue\": [string] }>()\nconst attrs = useAttrs()\nconst inputEl = ref<HTMLInputElement | null>(null)\n\nconst focusInput = () => {\n  inputEl.value?.focus()\n}\n\nconst updateModelValue = (event: Event) => {\n  emit(\"update:modelValue\", (event.target as HTMLInputElement).value)\n}\n\nconst nonClassAttrs = computed(() => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { class: _, ...rest } = attrs\n  return rest\n})\ndefineExpose({ focusInput })\n</script>\n\n<template>\n  <div\n    class=\"input-field group flex h-12 flex-row items-center overflow-hidden rounded-sm border p-0.5px focus-within:border-1.5 focus-within:border-focus focus-within:bg-surface focus-within:p-0\"\n    :class=\"[\n      {\n        // Padding is set to 1.5px to accommodate the border that will appear later.\n        'rounded-s-none border-s-0 ps-1.5px focus-within:rounded-s-none focus-within:border-s-0 focus-within:ps-1.5px':\n          connectionSides.includes('start'),\n        'rounded-e-none border-e-0 pe-1.5px focus-within:rounded-e-none focus-within:border-e-0 focus-within:pe-1.5px':\n          connectionSides.includes('end'),\n      },\n      $attrs.class,\n    ]\"\n  >\n    <input\n      :id=\"fieldId\"\n      v-bind=\"nonClassAttrs\"\n      ref=\"inputEl\"\n      :placeholder=\"placeholder\"\n      :type=\"type\"\n      class=\"ms-4 h-full w-full appearance-none rounded-none bg-tx text-2xl font-semibold leading-none placeholder-default focus-visible:outline-none md:text-base\"\n      :value=\"modelValue\"\n      :aria-label=\"labelText\"\n      @input=\"updateModelValue\"\n    />\n\n    <!-- @slot Extra information goes here -->\n    <slot />\n  </div>\n</template>\n\n<style scoped>\n.input-field:focus-within .info {\n  @apply text-default;\n}\n\n.input-field input::placeholder {\n  font-weight: normal;\n}\n</style>\n"],"names":["modelValue","_useModel","__props","emit","__emit","attrs","useAttrs","inputEl","ref","focusInput","_a","updateModelValue","event","nonClassAttrs","computed","_","rest","__expose"],"mappings":"0wBAUM,MAAAA,EAAaC,EAAoBC,EAAA,YAAA,EA+BjCC,EAAOC,EACPC,EAAQC,EAAS,EACjBC,EAAUC,EAA6B,IAAI,EAE3CC,EAAa,IAAM,QACvBC,EAAAH,EAAQ,QAAR,MAAAG,EAAe,OACjB,EAEMC,EAAoBC,GAAiB,CACpCT,EAAA,oBAAsBS,EAAM,OAA4B,KAAK,CACpE,EAEMC,EAAgBC,EAAS,IAAM,CAEnC,KAAM,CAAE,MAAOC,EAAG,GAAGC,CAAS,EAAAX,EACvB,OAAAW,CAAA,CACR,EACY,OAAAC,EAAA,CAAE,WAAAR,EAAY;"}