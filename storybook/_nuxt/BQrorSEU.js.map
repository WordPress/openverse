{"version":3,"file":"BQrorSEU.js","sources":["../../../node_modules/.pnpm/@intlify+message-compiler@11.0.1/node_modules/@intlify/message-compiler/dist/message-compiler.mjs","../../../node_modules/.pnpm/@intlify+core-base@11.0.1/node_modules/@intlify/core-base/dist/core-base.mjs"],"sourcesContent":["/*!\n  * message-compiler v11.0.1\n  * (c) 2024 kazuya kawaguchi\n  * Released under the MIT License.\n  */\nimport { format, assign, join, isString } from '@intlify/shared';\n\nconst LOCATION_STUB = {\n    start: { line: 1, column: 1, offset: 0 },\n    end: { line: 1, column: 1, offset: 0 }\n};\nfunction createPosition(line, column, offset) {\n    return { line, column, offset };\n}\nfunction createLocation(start, end, source) {\n    const loc = { start, end };\n    if (source != null) {\n        loc.source = source;\n    }\n    return loc;\n}\n\nconst CompileErrorCodes = {\n    // tokenizer error codes\n    EXPECTED_TOKEN: 1,\n    INVALID_TOKEN_IN_PLACEHOLDER: 2,\n    UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER: 3,\n    UNKNOWN_ESCAPE_SEQUENCE: 4,\n    INVALID_UNICODE_ESCAPE_SEQUENCE: 5,\n    UNBALANCED_CLOSING_BRACE: 6,\n    UNTERMINATED_CLOSING_BRACE: 7,\n    EMPTY_PLACEHOLDER: 8,\n    NOT_ALLOW_NEST_PLACEHOLDER: 9,\n    INVALID_LINKED_FORMAT: 10,\n    // parser error codes\n    MUST_HAVE_MESSAGES_IN_PLURAL: 11,\n    UNEXPECTED_EMPTY_LINKED_MODIFIER: 12,\n    UNEXPECTED_EMPTY_LINKED_KEY: 13,\n    UNEXPECTED_LEXICAL_ANALYSIS: 14,\n    // generator error codes\n    UNHANDLED_CODEGEN_NODE_TYPE: 15,\n    // minifier error codes\n    UNHANDLED_MINIFIER_NODE_TYPE: 16\n};\n// Special value for higher-order compilers to pick up the last code\n// to avoid collision of error codes.\n// This should always be kept as the last item.\nconst COMPILE_ERROR_CODES_EXTEND_POINT = 17;\n/** @internal */\nconst errorMessages = {\n    // tokenizer error messages\n    [CompileErrorCodes.EXPECTED_TOKEN]: `Expected token: '{0}'`,\n    [CompileErrorCodes.INVALID_TOKEN_IN_PLACEHOLDER]: `Invalid token in placeholder: '{0}'`,\n    [CompileErrorCodes.UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER]: `Unterminated single quote in placeholder`,\n    [CompileErrorCodes.UNKNOWN_ESCAPE_SEQUENCE]: `Unknown escape sequence: \\\\{0}`,\n    [CompileErrorCodes.INVALID_UNICODE_ESCAPE_SEQUENCE]: `Invalid unicode escape sequence: {0}`,\n    [CompileErrorCodes.UNBALANCED_CLOSING_BRACE]: `Unbalanced closing brace`,\n    [CompileErrorCodes.UNTERMINATED_CLOSING_BRACE]: `Unterminated closing brace`,\n    [CompileErrorCodes.EMPTY_PLACEHOLDER]: `Empty placeholder`,\n    [CompileErrorCodes.NOT_ALLOW_NEST_PLACEHOLDER]: `Not allowed nest placeholder`,\n    [CompileErrorCodes.INVALID_LINKED_FORMAT]: `Invalid linked format`,\n    // parser error messages\n    [CompileErrorCodes.MUST_HAVE_MESSAGES_IN_PLURAL]: `Plural must have messages`,\n    [CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_MODIFIER]: `Unexpected empty linked modifier`,\n    [CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_KEY]: `Unexpected empty linked key`,\n    [CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS]: `Unexpected lexical analysis in token: '{0}'`,\n    // generator error messages\n    [CompileErrorCodes.UNHANDLED_CODEGEN_NODE_TYPE]: `unhandled codegen node type: '{0}'`,\n    // minimizer error messages\n    [CompileErrorCodes.UNHANDLED_MINIFIER_NODE_TYPE]: `unhandled mimifier node type: '{0}'`\n};\nfunction createCompileError(code, loc, options = {}) {\n    const { domain, messages, args } = options;\n    const msg = (process.env.NODE_ENV !== 'production')\n        ? format((messages || errorMessages)[code] || '', ...(args || []))\n        : code;\n    const error = new SyntaxError(String(msg));\n    error.code = code;\n    if (loc) {\n        error.location = loc;\n    }\n    error.domain = domain;\n    return error;\n}\n/** @internal */\nfunction defaultOnError(error) {\n    throw error;\n}\n\n// eslint-disable-next-line no-useless-escape\nconst RE_HTML_TAG = /<\\/?[\\w\\s=\"/.':;#-\\/]+>/;\nconst detectHtmlTag = (source) => RE_HTML_TAG.test(source);\n\nconst CHAR_SP = ' ';\nconst CHAR_CR = '\\r';\nconst CHAR_LF = '\\n';\nconst CHAR_LS = String.fromCharCode(0x2028);\nconst CHAR_PS = String.fromCharCode(0x2029);\nfunction createScanner(str) {\n    const _buf = str;\n    let _index = 0;\n    let _line = 1;\n    let _column = 1;\n    let _peekOffset = 0;\n    const isCRLF = (index) => _buf[index] === CHAR_CR && _buf[index + 1] === CHAR_LF;\n    const isLF = (index) => _buf[index] === CHAR_LF;\n    const isPS = (index) => _buf[index] === CHAR_PS;\n    const isLS = (index) => _buf[index] === CHAR_LS;\n    const isLineEnd = (index) => isCRLF(index) || isLF(index) || isPS(index) || isLS(index);\n    const index = () => _index;\n    const line = () => _line;\n    const column = () => _column;\n    const peekOffset = () => _peekOffset;\n    const charAt = (offset) => isCRLF(offset) || isPS(offset) || isLS(offset) ? CHAR_LF : _buf[offset];\n    const currentChar = () => charAt(_index);\n    const currentPeek = () => charAt(_index + _peekOffset);\n    function next() {\n        _peekOffset = 0;\n        if (isLineEnd(_index)) {\n            _line++;\n            _column = 0;\n        }\n        if (isCRLF(_index)) {\n            _index++;\n        }\n        _index++;\n        _column++;\n        return _buf[_index];\n    }\n    function peek() {\n        if (isCRLF(_index + _peekOffset)) {\n            _peekOffset++;\n        }\n        _peekOffset++;\n        return _buf[_index + _peekOffset];\n    }\n    function reset() {\n        _index = 0;\n        _line = 1;\n        _column = 1;\n        _peekOffset = 0;\n    }\n    function resetPeek(offset = 0) {\n        _peekOffset = offset;\n    }\n    function skipToPeek() {\n        const target = _index + _peekOffset;\n        while (target !== _index) {\n            next();\n        }\n        _peekOffset = 0;\n    }\n    return {\n        index,\n        line,\n        column,\n        peekOffset,\n        charAt,\n        currentChar,\n        currentPeek,\n        next,\n        peek,\n        reset,\n        resetPeek,\n        skipToPeek\n    };\n}\n\nconst EOF = undefined;\nconst DOT = '.';\nconst LITERAL_DELIMITER = \"'\";\nconst ERROR_DOMAIN$3 = 'tokenizer';\nfunction createTokenizer(source, options = {}) {\n    const location = options.location !== false;\n    const _scnr = createScanner(source);\n    const currentOffset = () => _scnr.index();\n    const currentPosition = () => createPosition(_scnr.line(), _scnr.column(), _scnr.index());\n    const _initLoc = currentPosition();\n    const _initOffset = currentOffset();\n    const _context = {\n        currentType: 13 /* TokenTypes.EOF */,\n        offset: _initOffset,\n        startLoc: _initLoc,\n        endLoc: _initLoc,\n        lastType: 13 /* TokenTypes.EOF */,\n        lastOffset: _initOffset,\n        lastStartLoc: _initLoc,\n        lastEndLoc: _initLoc,\n        braceNest: 0,\n        inLinked: false,\n        text: ''\n    };\n    const context = () => _context;\n    const { onError } = options;\n    function emitError(code, pos, offset, ...args) {\n        const ctx = context();\n        pos.column += offset;\n        pos.offset += offset;\n        if (onError) {\n            const loc = location ? createLocation(ctx.startLoc, pos) : null;\n            const err = createCompileError(code, loc, {\n                domain: ERROR_DOMAIN$3,\n                args\n            });\n            onError(err);\n        }\n    }\n    function getToken(context, type, value) {\n        context.endLoc = currentPosition();\n        context.currentType = type;\n        const token = { type };\n        if (location) {\n            token.loc = createLocation(context.startLoc, context.endLoc);\n        }\n        if (value != null) {\n            token.value = value;\n        }\n        return token;\n    }\n    const getEndToken = (context) => getToken(context, 13 /* TokenTypes.EOF */);\n    function eat(scnr, ch) {\n        if (scnr.currentChar() === ch) {\n            scnr.next();\n            return ch;\n        }\n        else {\n            emitError(CompileErrorCodes.EXPECTED_TOKEN, currentPosition(), 0, ch);\n            return '';\n        }\n    }\n    function peekSpaces(scnr) {\n        let buf = '';\n        while (scnr.currentPeek() === CHAR_SP || scnr.currentPeek() === CHAR_LF) {\n            buf += scnr.currentPeek();\n            scnr.peek();\n        }\n        return buf;\n    }\n    function skipSpaces(scnr) {\n        const buf = peekSpaces(scnr);\n        scnr.skipToPeek();\n        return buf;\n    }\n    function isIdentifierStart(ch) {\n        if (ch === EOF) {\n            return false;\n        }\n        const cc = ch.charCodeAt(0);\n        return ((cc >= 97 && cc <= 122) || // a-z\n            (cc >= 65 && cc <= 90) || // A-Z\n            cc === 95 // _\n        );\n    }\n    function isNumberStart(ch) {\n        if (ch === EOF) {\n            return false;\n        }\n        const cc = ch.charCodeAt(0);\n        return cc >= 48 && cc <= 57; // 0-9\n    }\n    function isNamedIdentifierStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 2 /* TokenTypes.BraceLeft */) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ret = isIdentifierStart(scnr.currentPeek());\n        scnr.resetPeek();\n        return ret;\n    }\n    function isListIdentifierStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 2 /* TokenTypes.BraceLeft */) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ch = scnr.currentPeek() === '-' ? scnr.peek() : scnr.currentPeek();\n        const ret = isNumberStart(ch);\n        scnr.resetPeek();\n        return ret;\n    }\n    function isLiteralStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 2 /* TokenTypes.BraceLeft */) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ret = scnr.currentPeek() === LITERAL_DELIMITER;\n        scnr.resetPeek();\n        return ret;\n    }\n    function isLinkedDotStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 7 /* TokenTypes.LinkedAlias */) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ret = scnr.currentPeek() === \".\" /* TokenChars.LinkedDot */;\n        scnr.resetPeek();\n        return ret;\n    }\n    function isLinkedModifierStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 8 /* TokenTypes.LinkedDot */) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ret = isIdentifierStart(scnr.currentPeek());\n        scnr.resetPeek();\n        return ret;\n    }\n    function isLinkedDelimiterStart(scnr, context) {\n        const { currentType } = context;\n        if (!(currentType === 7 /* TokenTypes.LinkedAlias */ ||\n            currentType === 11 /* TokenTypes.LinkedModifier */)) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ret = scnr.currentPeek() === \":\" /* TokenChars.LinkedDelimiter */;\n        scnr.resetPeek();\n        return ret;\n    }\n    function isLinkedReferStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 9 /* TokenTypes.LinkedDelimiter */) {\n            return false;\n        }\n        const fn = () => {\n            const ch = scnr.currentPeek();\n            if (ch === \"{\" /* TokenChars.BraceLeft */) {\n                return isIdentifierStart(scnr.peek());\n            }\n            else if (ch === \"@\" /* TokenChars.LinkedAlias */ ||\n                ch === \"|\" /* TokenChars.Pipe */ ||\n                ch === \":\" /* TokenChars.LinkedDelimiter */ ||\n                ch === \".\" /* TokenChars.LinkedDot */ ||\n                ch === CHAR_SP ||\n                !ch) {\n                return false;\n            }\n            else if (ch === CHAR_LF) {\n                scnr.peek();\n                return fn();\n            }\n            else {\n                // other characters\n                return isTextStart(scnr, false);\n            }\n        };\n        const ret = fn();\n        scnr.resetPeek();\n        return ret;\n    }\n    function isPluralStart(scnr) {\n        peekSpaces(scnr);\n        const ret = scnr.currentPeek() === \"|\" /* TokenChars.Pipe */;\n        scnr.resetPeek();\n        return ret;\n    }\n    function isTextStart(scnr, reset = true) {\n        const fn = (hasSpace = false, prev = '') => {\n            const ch = scnr.currentPeek();\n            if (ch === \"{\" /* TokenChars.BraceLeft */) {\n                return hasSpace;\n            }\n            else if (ch === \"@\" /* TokenChars.LinkedAlias */ || !ch) {\n                return hasSpace;\n            }\n            else if (ch === \"|\" /* TokenChars.Pipe */) {\n                return !(prev === CHAR_SP || prev === CHAR_LF);\n            }\n            else if (ch === CHAR_SP) {\n                scnr.peek();\n                return fn(true, CHAR_SP);\n            }\n            else if (ch === CHAR_LF) {\n                scnr.peek();\n                return fn(true, CHAR_LF);\n            }\n            else {\n                return true;\n            }\n        };\n        const ret = fn();\n        reset && scnr.resetPeek();\n        return ret;\n    }\n    function takeChar(scnr, fn) {\n        const ch = scnr.currentChar();\n        if (ch === EOF) {\n            return EOF;\n        }\n        if (fn(ch)) {\n            scnr.next();\n            return ch;\n        }\n        return null;\n    }\n    function isIdentifier(ch) {\n        const cc = ch.charCodeAt(0);\n        return ((cc >= 97 && cc <= 122) || // a-z\n            (cc >= 65 && cc <= 90) || // A-Z\n            (cc >= 48 && cc <= 57) || // 0-9\n            cc === 95 || // _\n            cc === 36 // $\n        );\n    }\n    function takeIdentifierChar(scnr) {\n        return takeChar(scnr, isIdentifier);\n    }\n    function isNamedIdentifier(ch) {\n        const cc = ch.charCodeAt(0);\n        return ((cc >= 97 && cc <= 122) || // a-z\n            (cc >= 65 && cc <= 90) || // A-Z\n            (cc >= 48 && cc <= 57) || // 0-9\n            cc === 95 || // _\n            cc === 36 || // $\n            cc === 45 // -\n        );\n    }\n    function takeNamedIdentifierChar(scnr) {\n        return takeChar(scnr, isNamedIdentifier);\n    }\n    function isDigit(ch) {\n        const cc = ch.charCodeAt(0);\n        return cc >= 48 && cc <= 57; // 0-9\n    }\n    function takeDigit(scnr) {\n        return takeChar(scnr, isDigit);\n    }\n    function isHexDigit(ch) {\n        const cc = ch.charCodeAt(0);\n        return ((cc >= 48 && cc <= 57) || // 0-9\n            (cc >= 65 && cc <= 70) || // A-F\n            (cc >= 97 && cc <= 102)); // a-f\n    }\n    function takeHexDigit(scnr) {\n        return takeChar(scnr, isHexDigit);\n    }\n    function getDigits(scnr) {\n        let ch = '';\n        let num = '';\n        while ((ch = takeDigit(scnr))) {\n            num += ch;\n        }\n        return num;\n    }\n    function readText(scnr) {\n        let buf = '';\n        while (true) {\n            const ch = scnr.currentChar();\n            if (ch === \"{\" /* TokenChars.BraceLeft */ ||\n                ch === \"}\" /* TokenChars.BraceRight */ ||\n                ch === \"@\" /* TokenChars.LinkedAlias */ ||\n                ch === \"|\" /* TokenChars.Pipe */ ||\n                !ch) {\n                break;\n            }\n            else if (ch === CHAR_SP || ch === CHAR_LF) {\n                if (isTextStart(scnr)) {\n                    buf += ch;\n                    scnr.next();\n                }\n                else if (isPluralStart(scnr)) {\n                    break;\n                }\n                else {\n                    buf += ch;\n                    scnr.next();\n                }\n            }\n            else {\n                buf += ch;\n                scnr.next();\n            }\n        }\n        return buf;\n    }\n    function readNamedIdentifier(scnr) {\n        skipSpaces(scnr);\n        let ch = '';\n        let name = '';\n        while ((ch = takeNamedIdentifierChar(scnr))) {\n            name += ch;\n        }\n        if (scnr.currentChar() === EOF) {\n            emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);\n        }\n        return name;\n    }\n    function readListIdentifier(scnr) {\n        skipSpaces(scnr);\n        let value = '';\n        if (scnr.currentChar() === '-') {\n            scnr.next();\n            value += `-${getDigits(scnr)}`;\n        }\n        else {\n            value += getDigits(scnr);\n        }\n        if (scnr.currentChar() === EOF) {\n            emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);\n        }\n        return value;\n    }\n    function isLiteral(ch) {\n        return ch !== LITERAL_DELIMITER && ch !== CHAR_LF;\n    }\n    function readLiteral(scnr) {\n        skipSpaces(scnr);\n        // eslint-disable-next-line no-useless-escape\n        eat(scnr, `\\'`);\n        let ch = '';\n        let literal = '';\n        while ((ch = takeChar(scnr, isLiteral))) {\n            if (ch === '\\\\') {\n                literal += readEscapeSequence(scnr);\n            }\n            else {\n                literal += ch;\n            }\n        }\n        const current = scnr.currentChar();\n        if (current === CHAR_LF || current === EOF) {\n            emitError(CompileErrorCodes.UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER, currentPosition(), 0);\n            // TODO: Is it correct really?\n            if (current === CHAR_LF) {\n                scnr.next();\n                // eslint-disable-next-line no-useless-escape\n                eat(scnr, `\\'`);\n            }\n            return literal;\n        }\n        // eslint-disable-next-line no-useless-escape\n        eat(scnr, `\\'`);\n        return literal;\n    }\n    function readEscapeSequence(scnr) {\n        const ch = scnr.currentChar();\n        switch (ch) {\n            case '\\\\':\n            case `\\'`: // eslint-disable-line no-useless-escape\n                scnr.next();\n                return `\\\\${ch}`;\n            case 'u':\n                return readUnicodeEscapeSequence(scnr, ch, 4);\n            case 'U':\n                return readUnicodeEscapeSequence(scnr, ch, 6);\n            default:\n                emitError(CompileErrorCodes.UNKNOWN_ESCAPE_SEQUENCE, currentPosition(), 0, ch);\n                return '';\n        }\n    }\n    function readUnicodeEscapeSequence(scnr, unicode, digits) {\n        eat(scnr, unicode);\n        let sequence = '';\n        for (let i = 0; i < digits; i++) {\n            const ch = takeHexDigit(scnr);\n            if (!ch) {\n                emitError(CompileErrorCodes.INVALID_UNICODE_ESCAPE_SEQUENCE, currentPosition(), 0, `\\\\${unicode}${sequence}${scnr.currentChar()}`);\n                break;\n            }\n            sequence += ch;\n        }\n        return `\\\\${unicode}${sequence}`;\n    }\n    function isInvalidIdentifier(ch) {\n        return (ch !== \"{\" /* TokenChars.BraceLeft */ &&\n            ch !== \"}\" /* TokenChars.BraceRight */ &&\n            ch !== CHAR_SP &&\n            ch !== CHAR_LF);\n    }\n    function readInvalidIdentifier(scnr) {\n        skipSpaces(scnr);\n        let ch = '';\n        let identifiers = '';\n        while ((ch = takeChar(scnr, isInvalidIdentifier))) {\n            identifiers += ch;\n        }\n        return identifiers;\n    }\n    function readLinkedModifier(scnr) {\n        let ch = '';\n        let name = '';\n        while ((ch = takeIdentifierChar(scnr))) {\n            name += ch;\n        }\n        return name;\n    }\n    function readLinkedRefer(scnr) {\n        const fn = (buf) => {\n            const ch = scnr.currentChar();\n            if (ch === \"{\" /* TokenChars.BraceLeft */ ||\n                ch === \"@\" /* TokenChars.LinkedAlias */ ||\n                ch === \"|\" /* TokenChars.Pipe */ ||\n                ch === \"(\" /* TokenChars.ParenLeft */ ||\n                ch === \")\" /* TokenChars.ParenRight */ ||\n                !ch) {\n                return buf;\n            }\n            else if (ch === CHAR_SP) {\n                return buf;\n            }\n            else if (ch === CHAR_LF || ch === DOT) {\n                buf += ch;\n                scnr.next();\n                return fn(buf);\n            }\n            else {\n                buf += ch;\n                scnr.next();\n                return fn(buf);\n            }\n        };\n        return fn('');\n    }\n    function readPlural(scnr) {\n        skipSpaces(scnr);\n        const plural = eat(scnr, \"|\" /* TokenChars.Pipe */);\n        skipSpaces(scnr);\n        return plural;\n    }\n    // TODO: We need refactoring of token parsing ...\n    function readTokenInPlaceholder(scnr, context) {\n        let token = null;\n        const ch = scnr.currentChar();\n        switch (ch) {\n            case \"{\" /* TokenChars.BraceLeft */:\n                if (context.braceNest >= 1) {\n                    emitError(CompileErrorCodes.NOT_ALLOW_NEST_PLACEHOLDER, currentPosition(), 0);\n                }\n                scnr.next();\n                token = getToken(context, 2 /* TokenTypes.BraceLeft */, \"{\" /* TokenChars.BraceLeft */);\n                skipSpaces(scnr);\n                context.braceNest++;\n                return token;\n            case \"}\" /* TokenChars.BraceRight */:\n                if (context.braceNest > 0 &&\n                    context.currentType === 2 /* TokenTypes.BraceLeft */) {\n                    emitError(CompileErrorCodes.EMPTY_PLACEHOLDER, currentPosition(), 0);\n                }\n                scnr.next();\n                token = getToken(context, 3 /* TokenTypes.BraceRight */, \"}\" /* TokenChars.BraceRight */);\n                context.braceNest--;\n                context.braceNest > 0 && skipSpaces(scnr);\n                if (context.inLinked && context.braceNest === 0) {\n                    context.inLinked = false;\n                }\n                return token;\n            case \"@\" /* TokenChars.LinkedAlias */:\n                if (context.braceNest > 0) {\n                    emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);\n                }\n                token = readTokenInLinked(scnr, context) || getEndToken(context);\n                context.braceNest = 0;\n                return token;\n            default: {\n                let validNamedIdentifier = true;\n                let validListIdentifier = true;\n                let validLiteral = true;\n                if (isPluralStart(scnr)) {\n                    if (context.braceNest > 0) {\n                        emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);\n                    }\n                    token = getToken(context, 1 /* TokenTypes.Pipe */, readPlural(scnr));\n                    // reset\n                    context.braceNest = 0;\n                    context.inLinked = false;\n                    return token;\n                }\n                if (context.braceNest > 0 &&\n                    (context.currentType === 4 /* TokenTypes.Named */ ||\n                        context.currentType === 5 /* TokenTypes.List */ ||\n                        context.currentType === 6 /* TokenTypes.Literal */)) {\n                    emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);\n                    context.braceNest = 0;\n                    return readToken(scnr, context);\n                }\n                if ((validNamedIdentifier = isNamedIdentifierStart(scnr, context))) {\n                    token = getToken(context, 4 /* TokenTypes.Named */, readNamedIdentifier(scnr));\n                    skipSpaces(scnr);\n                    return token;\n                }\n                if ((validListIdentifier = isListIdentifierStart(scnr, context))) {\n                    token = getToken(context, 5 /* TokenTypes.List */, readListIdentifier(scnr));\n                    skipSpaces(scnr);\n                    return token;\n                }\n                if ((validLiteral = isLiteralStart(scnr, context))) {\n                    token = getToken(context, 6 /* TokenTypes.Literal */, readLiteral(scnr));\n                    skipSpaces(scnr);\n                    return token;\n                }\n                if (!validNamedIdentifier && !validListIdentifier && !validLiteral) {\n                    // TODO: we should be re-designed invalid cases, when we will extend message syntax near the future ...\n                    token = getToken(context, 12 /* TokenTypes.InvalidPlace */, readInvalidIdentifier(scnr));\n                    emitError(CompileErrorCodes.INVALID_TOKEN_IN_PLACEHOLDER, currentPosition(), 0, token.value);\n                    skipSpaces(scnr);\n                    return token;\n                }\n                break;\n            }\n        }\n        return token;\n    }\n    // TODO: We need refactoring of token parsing ...\n    function readTokenInLinked(scnr, context) {\n        const { currentType } = context;\n        let token = null;\n        const ch = scnr.currentChar();\n        if ((currentType === 7 /* TokenTypes.LinkedAlias */ ||\n            currentType === 8 /* TokenTypes.LinkedDot */ ||\n            currentType === 11 /* TokenTypes.LinkedModifier */ ||\n            currentType === 9 /* TokenTypes.LinkedDelimiter */) &&\n            (ch === CHAR_LF || ch === CHAR_SP)) {\n            emitError(CompileErrorCodes.INVALID_LINKED_FORMAT, currentPosition(), 0);\n        }\n        switch (ch) {\n            case \"@\" /* TokenChars.LinkedAlias */:\n                scnr.next();\n                token = getToken(context, 7 /* TokenTypes.LinkedAlias */, \"@\" /* TokenChars.LinkedAlias */);\n                context.inLinked = true;\n                return token;\n            case \".\" /* TokenChars.LinkedDot */:\n                skipSpaces(scnr);\n                scnr.next();\n                return getToken(context, 8 /* TokenTypes.LinkedDot */, \".\" /* TokenChars.LinkedDot */);\n            case \":\" /* TokenChars.LinkedDelimiter */:\n                skipSpaces(scnr);\n                scnr.next();\n                return getToken(context, 9 /* TokenTypes.LinkedDelimiter */, \":\" /* TokenChars.LinkedDelimiter */);\n            default:\n                if (isPluralStart(scnr)) {\n                    token = getToken(context, 1 /* TokenTypes.Pipe */, readPlural(scnr));\n                    // reset\n                    context.braceNest = 0;\n                    context.inLinked = false;\n                    return token;\n                }\n                if (isLinkedDotStart(scnr, context) ||\n                    isLinkedDelimiterStart(scnr, context)) {\n                    skipSpaces(scnr);\n                    return readTokenInLinked(scnr, context);\n                }\n                if (isLinkedModifierStart(scnr, context)) {\n                    skipSpaces(scnr);\n                    return getToken(context, 11 /* TokenTypes.LinkedModifier */, readLinkedModifier(scnr));\n                }\n                if (isLinkedReferStart(scnr, context)) {\n                    skipSpaces(scnr);\n                    if (ch === \"{\" /* TokenChars.BraceLeft */) {\n                        // scan the placeholder\n                        return readTokenInPlaceholder(scnr, context) || token;\n                    }\n                    else {\n                        return getToken(context, 10 /* TokenTypes.LinkedKey */, readLinkedRefer(scnr));\n                    }\n                }\n                if (currentType === 7 /* TokenTypes.LinkedAlias */) {\n                    emitError(CompileErrorCodes.INVALID_LINKED_FORMAT, currentPosition(), 0);\n                }\n                context.braceNest = 0;\n                context.inLinked = false;\n                return readToken(scnr, context);\n        }\n    }\n    // TODO: We need refactoring of token parsing ...\n    function readToken(scnr, context) {\n        let token = { type: 13 /* TokenTypes.EOF */ };\n        if (context.braceNest > 0) {\n            return readTokenInPlaceholder(scnr, context) || getEndToken(context);\n        }\n        if (context.inLinked) {\n            return readTokenInLinked(scnr, context) || getEndToken(context);\n        }\n        const ch = scnr.currentChar();\n        switch (ch) {\n            case \"{\" /* TokenChars.BraceLeft */:\n                return readTokenInPlaceholder(scnr, context) || getEndToken(context);\n            case \"}\" /* TokenChars.BraceRight */:\n                emitError(CompileErrorCodes.UNBALANCED_CLOSING_BRACE, currentPosition(), 0);\n                scnr.next();\n                return getToken(context, 3 /* TokenTypes.BraceRight */, \"}\" /* TokenChars.BraceRight */);\n            case \"@\" /* TokenChars.LinkedAlias */:\n                return readTokenInLinked(scnr, context) || getEndToken(context);\n            default: {\n                if (isPluralStart(scnr)) {\n                    token = getToken(context, 1 /* TokenTypes.Pipe */, readPlural(scnr));\n                    // reset\n                    context.braceNest = 0;\n                    context.inLinked = false;\n                    return token;\n                }\n                if (isTextStart(scnr)) {\n                    return getToken(context, 0 /* TokenTypes.Text */, readText(scnr));\n                }\n                break;\n            }\n        }\n        return token;\n    }\n    function nextToken() {\n        const { currentType, offset, startLoc, endLoc } = _context;\n        _context.lastType = currentType;\n        _context.lastOffset = offset;\n        _context.lastStartLoc = startLoc;\n        _context.lastEndLoc = endLoc;\n        _context.offset = currentOffset();\n        _context.startLoc = currentPosition();\n        if (_scnr.currentChar() === EOF) {\n            return getToken(_context, 13 /* TokenTypes.EOF */);\n        }\n        return readToken(_scnr, _context);\n    }\n    return {\n        nextToken,\n        currentOffset,\n        currentPosition,\n        context\n    };\n}\n\nconst ERROR_DOMAIN$2 = 'parser';\n// Backslash backslash, backslash quote, uHHHH, UHHHHHH.\nconst KNOWN_ESCAPES = /(?:\\\\\\\\|\\\\'|\\\\u([0-9a-fA-F]{4})|\\\\U([0-9a-fA-F]{6}))/g;\nfunction fromEscapeSequence(match, codePoint4, codePoint6) {\n    switch (match) {\n        case `\\\\\\\\`:\n            return `\\\\`;\n        // eslint-disable-next-line no-useless-escape\n        case `\\\\\\'`:\n            // eslint-disable-next-line no-useless-escape\n            return `\\'`;\n        default: {\n            const codePoint = parseInt(codePoint4 || codePoint6, 16);\n            if (codePoint <= 0xd7ff || codePoint >= 0xe000) {\n                return String.fromCodePoint(codePoint);\n            }\n            // invalid ...\n            // Replace them with U+FFFD REPLACEMENT CHARACTER.\n            return '�';\n        }\n    }\n}\nfunction createParser(options = {}) {\n    const location = options.location !== false;\n    const { onError } = options;\n    function emitError(tokenzer, code, start, offset, ...args) {\n        const end = tokenzer.currentPosition();\n        end.offset += offset;\n        end.column += offset;\n        if (onError) {\n            const loc = location ? createLocation(start, end) : null;\n            const err = createCompileError(code, loc, {\n                domain: ERROR_DOMAIN$2,\n                args\n            });\n            onError(err);\n        }\n    }\n    function startNode(type, offset, loc) {\n        const node = { type };\n        if (location) {\n            node.start = offset;\n            node.end = offset;\n            node.loc = { start: loc, end: loc };\n        }\n        return node;\n    }\n    function endNode(node, offset, pos, type) {\n        if (location) {\n            node.end = offset;\n            if (node.loc) {\n                node.loc.end = pos;\n            }\n        }\n    }\n    function parseText(tokenizer, value) {\n        const context = tokenizer.context();\n        const node = startNode(3 /* NodeTypes.Text */, context.offset, context.startLoc);\n        node.value = value;\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseList(tokenizer, index) {\n        const context = tokenizer.context();\n        const { lastOffset: offset, lastStartLoc: loc } = context; // get brace left loc\n        const node = startNode(5 /* NodeTypes.List */, offset, loc);\n        node.index = parseInt(index, 10);\n        tokenizer.nextToken(); // skip brach right\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseNamed(tokenizer, key) {\n        const context = tokenizer.context();\n        const { lastOffset: offset, lastStartLoc: loc } = context; // get brace left loc\n        const node = startNode(4 /* NodeTypes.Named */, offset, loc);\n        node.key = key;\n        tokenizer.nextToken(); // skip brach right\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseLiteral(tokenizer, value) {\n        const context = tokenizer.context();\n        const { lastOffset: offset, lastStartLoc: loc } = context; // get brace left loc\n        const node = startNode(9 /* NodeTypes.Literal */, offset, loc);\n        node.value = value.replace(KNOWN_ESCAPES, fromEscapeSequence);\n        tokenizer.nextToken(); // skip brach right\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseLinkedModifier(tokenizer) {\n        const token = tokenizer.nextToken();\n        const context = tokenizer.context();\n        const { lastOffset: offset, lastStartLoc: loc } = context; // get linked dot loc\n        const node = startNode(8 /* NodeTypes.LinkedModifier */, offset, loc);\n        if (token.type !== 11 /* TokenTypes.LinkedModifier */) {\n            // empty modifier\n            emitError(tokenizer, CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_MODIFIER, context.lastStartLoc, 0);\n            node.value = '';\n            endNode(node, offset, loc);\n            return {\n                nextConsumeToken: token,\n                node\n            };\n        }\n        // check token\n        if (token.value == null) {\n            emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n        }\n        node.value = token.value || '';\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return {\n            node\n        };\n    }\n    function parseLinkedKey(tokenizer, value) {\n        const context = tokenizer.context();\n        const node = startNode(7 /* NodeTypes.LinkedKey */, context.offset, context.startLoc);\n        node.value = value;\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseLinked(tokenizer) {\n        const context = tokenizer.context();\n        const linkedNode = startNode(6 /* NodeTypes.Linked */, context.offset, context.startLoc);\n        let token = tokenizer.nextToken();\n        if (token.type === 8 /* TokenTypes.LinkedDot */) {\n            const parsed = parseLinkedModifier(tokenizer);\n            linkedNode.modifier = parsed.node;\n            token = parsed.nextConsumeToken || tokenizer.nextToken();\n        }\n        // asset check token\n        if (token.type !== 9 /* TokenTypes.LinkedDelimiter */) {\n            emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n        }\n        token = tokenizer.nextToken();\n        // skip brace left\n        if (token.type === 2 /* TokenTypes.BraceLeft */) {\n            token = tokenizer.nextToken();\n        }\n        switch (token.type) {\n            case 10 /* TokenTypes.LinkedKey */:\n                if (token.value == null) {\n                    emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                }\n                linkedNode.key = parseLinkedKey(tokenizer, token.value || '');\n                break;\n            case 4 /* TokenTypes.Named */:\n                if (token.value == null) {\n                    emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                }\n                linkedNode.key = parseNamed(tokenizer, token.value || '');\n                break;\n            case 5 /* TokenTypes.List */:\n                if (token.value == null) {\n                    emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                }\n                linkedNode.key = parseList(tokenizer, token.value || '');\n                break;\n            case 6 /* TokenTypes.Literal */:\n                if (token.value == null) {\n                    emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                }\n                linkedNode.key = parseLiteral(tokenizer, token.value || '');\n                break;\n            default: {\n                // empty key\n                emitError(tokenizer, CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_KEY, context.lastStartLoc, 0);\n                const nextContext = tokenizer.context();\n                const emptyLinkedKeyNode = startNode(7 /* NodeTypes.LinkedKey */, nextContext.offset, nextContext.startLoc);\n                emptyLinkedKeyNode.value = '';\n                endNode(emptyLinkedKeyNode, nextContext.offset, nextContext.startLoc);\n                linkedNode.key = emptyLinkedKeyNode;\n                endNode(linkedNode, nextContext.offset, nextContext.startLoc);\n                return {\n                    nextConsumeToken: token,\n                    node: linkedNode\n                };\n            }\n        }\n        endNode(linkedNode, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return {\n            node: linkedNode\n        };\n    }\n    function parseMessage(tokenizer) {\n        const context = tokenizer.context();\n        const startOffset = context.currentType === 1 /* TokenTypes.Pipe */\n            ? tokenizer.currentOffset()\n            : context.offset;\n        const startLoc = context.currentType === 1 /* TokenTypes.Pipe */\n            ? context.endLoc\n            : context.startLoc;\n        const node = startNode(2 /* NodeTypes.Message */, startOffset, startLoc);\n        node.items = [];\n        let nextToken = null;\n        do {\n            const token = nextToken || tokenizer.nextToken();\n            nextToken = null;\n            switch (token.type) {\n                case 0 /* TokenTypes.Text */:\n                    if (token.value == null) {\n                        emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                    }\n                    node.items.push(parseText(tokenizer, token.value || ''));\n                    break;\n                case 5 /* TokenTypes.List */:\n                    if (token.value == null) {\n                        emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                    }\n                    node.items.push(parseList(tokenizer, token.value || ''));\n                    break;\n                case 4 /* TokenTypes.Named */:\n                    if (token.value == null) {\n                        emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                    }\n                    node.items.push(parseNamed(tokenizer, token.value || ''));\n                    break;\n                case 6 /* TokenTypes.Literal */:\n                    if (token.value == null) {\n                        emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                    }\n                    node.items.push(parseLiteral(tokenizer, token.value || ''));\n                    break;\n                case 7 /* TokenTypes.LinkedAlias */: {\n                    const parsed = parseLinked(tokenizer);\n                    node.items.push(parsed.node);\n                    nextToken = parsed.nextConsumeToken || null;\n                    break;\n                }\n            }\n        } while (context.currentType !== 13 /* TokenTypes.EOF */ &&\n            context.currentType !== 1 /* TokenTypes.Pipe */);\n        // adjust message node loc\n        const endOffset = context.currentType === 1 /* TokenTypes.Pipe */\n            ? context.lastOffset\n            : tokenizer.currentOffset();\n        const endLoc = context.currentType === 1 /* TokenTypes.Pipe */\n            ? context.lastEndLoc\n            : tokenizer.currentPosition();\n        endNode(node, endOffset, endLoc);\n        return node;\n    }\n    function parsePlural(tokenizer, offset, loc, msgNode) {\n        const context = tokenizer.context();\n        let hasEmptyMessage = msgNode.items.length === 0;\n        const node = startNode(1 /* NodeTypes.Plural */, offset, loc);\n        node.cases = [];\n        node.cases.push(msgNode);\n        do {\n            const msg = parseMessage(tokenizer);\n            if (!hasEmptyMessage) {\n                hasEmptyMessage = msg.items.length === 0;\n            }\n            node.cases.push(msg);\n        } while (context.currentType !== 13 /* TokenTypes.EOF */);\n        if (hasEmptyMessage) {\n            emitError(tokenizer, CompileErrorCodes.MUST_HAVE_MESSAGES_IN_PLURAL, loc, 0);\n        }\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseResource(tokenizer) {\n        const context = tokenizer.context();\n        const { offset, startLoc } = context;\n        const msgNode = parseMessage(tokenizer);\n        if (context.currentType === 13 /* TokenTypes.EOF */) {\n            return msgNode;\n        }\n        else {\n            return parsePlural(tokenizer, offset, startLoc, msgNode);\n        }\n    }\n    function parse(source) {\n        const tokenizer = createTokenizer(source, assign({}, options));\n        const context = tokenizer.context();\n        const node = startNode(0 /* NodeTypes.Resource */, context.offset, context.startLoc);\n        if (location && node.loc) {\n            node.loc.source = source;\n        }\n        node.body = parseResource(tokenizer);\n        if (options.onCacheKey) {\n            node.cacheKey = options.onCacheKey(source);\n        }\n        // assert whether achieved to EOF\n        if (context.currentType !== 13 /* TokenTypes.EOF */) {\n            emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, source[context.offset] || '');\n        }\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    return { parse };\n}\nfunction getTokenCaption(token) {\n    if (token.type === 13 /* TokenTypes.EOF */) {\n        return 'EOF';\n    }\n    const name = (token.value || '').replace(/\\r?\\n/gu, '\\\\n');\n    return name.length > 10 ? name.slice(0, 9) + '…' : name;\n}\n\nfunction createTransformer(ast, options = {} // eslint-disable-line\n) {\n    const _context = {\n        ast,\n        helpers: new Set()\n    };\n    const context = () => _context;\n    const helper = (name) => {\n        _context.helpers.add(name);\n        return name;\n    };\n    return { context, helper };\n}\nfunction traverseNodes(nodes, transformer) {\n    for (let i = 0; i < nodes.length; i++) {\n        traverseNode(nodes[i], transformer);\n    }\n}\nfunction traverseNode(node, transformer) {\n    // TODO: if we need pre-hook of transform, should be implemented to here\n    switch (node.type) {\n        case 1 /* NodeTypes.Plural */:\n            traverseNodes(node.cases, transformer);\n            transformer.helper(\"plural\" /* HelperNameMap.PLURAL */);\n            break;\n        case 2 /* NodeTypes.Message */:\n            traverseNodes(node.items, transformer);\n            break;\n        case 6 /* NodeTypes.Linked */: {\n            const linked = node;\n            traverseNode(linked.key, transformer);\n            transformer.helper(\"linked\" /* HelperNameMap.LINKED */);\n            transformer.helper(\"type\" /* HelperNameMap.TYPE */);\n            break;\n        }\n        case 5 /* NodeTypes.List */:\n            transformer.helper(\"interpolate\" /* HelperNameMap.INTERPOLATE */);\n            transformer.helper(\"list\" /* HelperNameMap.LIST */);\n            break;\n        case 4 /* NodeTypes.Named */:\n            transformer.helper(\"interpolate\" /* HelperNameMap.INTERPOLATE */);\n            transformer.helper(\"named\" /* HelperNameMap.NAMED */);\n            break;\n    }\n    // TODO: if we need post-hook of transform, should be implemented to here\n}\n// transform AST\nfunction transform(ast, options = {} // eslint-disable-line\n) {\n    const transformer = createTransformer(ast);\n    transformer.helper(\"normalize\" /* HelperNameMap.NORMALIZE */);\n    // traverse\n    ast.body && traverseNode(ast.body, transformer);\n    // set meta information\n    const context = transformer.context();\n    ast.helpers = Array.from(context.helpers);\n}\n\nfunction optimize(ast) {\n    const body = ast.body;\n    if (body.type === 2 /* NodeTypes.Message */) {\n        optimizeMessageNode(body);\n    }\n    else {\n        body.cases.forEach(c => optimizeMessageNode(c));\n    }\n    return ast;\n}\nfunction optimizeMessageNode(message) {\n    if (message.items.length === 1) {\n        const item = message.items[0];\n        if (item.type === 3 /* NodeTypes.Text */ || item.type === 9 /* NodeTypes.Literal */) {\n            message.static = item.value;\n            delete item.value; // optimization for size\n        }\n    }\n    else {\n        const values = [];\n        for (let i = 0; i < message.items.length; i++) {\n            const item = message.items[i];\n            if (!(item.type === 3 /* NodeTypes.Text */ || item.type === 9 /* NodeTypes.Literal */)) {\n                break;\n            }\n            if (item.value == null) {\n                break;\n            }\n            values.push(item.value);\n        }\n        if (values.length === message.items.length) {\n            message.static = join(values);\n            for (let i = 0; i < message.items.length; i++) {\n                const item = message.items[i];\n                if (item.type === 3 /* NodeTypes.Text */ || item.type === 9 /* NodeTypes.Literal */) {\n                    delete item.value; // optimization for size\n                }\n            }\n        }\n    }\n}\n\nconst ERROR_DOMAIN$1 = 'minifier';\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction minify(node) {\n    node.t = node.type;\n    switch (node.type) {\n        case 0 /* NodeTypes.Resource */: {\n            const resource = node;\n            minify(resource.body);\n            resource.b = resource.body;\n            delete resource.body;\n            break;\n        }\n        case 1 /* NodeTypes.Plural */: {\n            const plural = node;\n            const cases = plural.cases;\n            for (let i = 0; i < cases.length; i++) {\n                minify(cases[i]);\n            }\n            plural.c = cases;\n            delete plural.cases;\n            break;\n        }\n        case 2 /* NodeTypes.Message */: {\n            const message = node;\n            const items = message.items;\n            for (let i = 0; i < items.length; i++) {\n                minify(items[i]);\n            }\n            message.i = items;\n            delete message.items;\n            if (message.static) {\n                message.s = message.static;\n                delete message.static;\n            }\n            break;\n        }\n        case 3 /* NodeTypes.Text */:\n        case 9 /* NodeTypes.Literal */:\n        case 8 /* NodeTypes.LinkedModifier */:\n        case 7 /* NodeTypes.LinkedKey */: {\n            const valueNode = node;\n            if (valueNode.value) {\n                valueNode.v = valueNode.value;\n                delete valueNode.value;\n            }\n            break;\n        }\n        case 6 /* NodeTypes.Linked */: {\n            const linked = node;\n            minify(linked.key);\n            linked.k = linked.key;\n            delete linked.key;\n            if (linked.modifier) {\n                minify(linked.modifier);\n                linked.m = linked.modifier;\n                delete linked.modifier;\n            }\n            break;\n        }\n        case 5 /* NodeTypes.List */: {\n            const list = node;\n            list.i = list.index;\n            delete list.index;\n            break;\n        }\n        case 4 /* NodeTypes.Named */: {\n            const named = node;\n            named.k = named.key;\n            delete named.key;\n            break;\n        }\n        default:\n            if ((process.env.NODE_ENV !== 'production')) {\n                throw createCompileError(CompileErrorCodes.UNHANDLED_MINIFIER_NODE_TYPE, null, {\n                    domain: ERROR_DOMAIN$1,\n                    args: [node.type]\n                });\n            }\n    }\n    delete node.type;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference types=\"source-map-js\" />\nconst ERROR_DOMAIN = 'parser';\nfunction createCodeGenerator(ast, options) {\n    const { sourceMap, filename, breakLineCode, needIndent: _needIndent } = options;\n    const location = options.location !== false;\n    const _context = {\n        filename,\n        code: '',\n        column: 1,\n        line: 1,\n        offset: 0,\n        map: undefined,\n        breakLineCode,\n        needIndent: _needIndent,\n        indentLevel: 0\n    };\n    if (location && ast.loc) {\n        _context.source = ast.loc.source;\n    }\n    const context = () => _context;\n    function push(code, node) {\n        _context.code += code;\n    }\n    function _newline(n, withBreakLine = true) {\n        const _breakLineCode = withBreakLine ? breakLineCode : '';\n        push(_needIndent ? _breakLineCode + `  `.repeat(n) : _breakLineCode);\n    }\n    function indent(withNewLine = true) {\n        const level = ++_context.indentLevel;\n        withNewLine && _newline(level);\n    }\n    function deindent(withNewLine = true) {\n        const level = --_context.indentLevel;\n        withNewLine && _newline(level);\n    }\n    function newline() {\n        _newline(_context.indentLevel);\n    }\n    const helper = (key) => `_${key}`;\n    const needIndent = () => _context.needIndent;\n    return {\n        context,\n        push,\n        indent,\n        deindent,\n        newline,\n        helper,\n        needIndent\n    };\n}\nfunction generateLinkedNode(generator, node) {\n    const { helper } = generator;\n    generator.push(`${helper(\"linked\" /* HelperNameMap.LINKED */)}(`);\n    generateNode(generator, node.key);\n    if (node.modifier) {\n        generator.push(`, `);\n        generateNode(generator, node.modifier);\n        generator.push(`, _type`);\n    }\n    else {\n        generator.push(`, undefined, _type`);\n    }\n    generator.push(`)`);\n}\nfunction generateMessageNode(generator, node) {\n    const { helper, needIndent } = generator;\n    generator.push(`${helper(\"normalize\" /* HelperNameMap.NORMALIZE */)}([`);\n    generator.indent(needIndent());\n    const length = node.items.length;\n    for (let i = 0; i < length; i++) {\n        generateNode(generator, node.items[i]);\n        if (i === length - 1) {\n            break;\n        }\n        generator.push(', ');\n    }\n    generator.deindent(needIndent());\n    generator.push('])');\n}\nfunction generatePluralNode(generator, node) {\n    const { helper, needIndent } = generator;\n    if (node.cases.length > 1) {\n        generator.push(`${helper(\"plural\" /* HelperNameMap.PLURAL */)}([`);\n        generator.indent(needIndent());\n        const length = node.cases.length;\n        for (let i = 0; i < length; i++) {\n            generateNode(generator, node.cases[i]);\n            if (i === length - 1) {\n                break;\n            }\n            generator.push(', ');\n        }\n        generator.deindent(needIndent());\n        generator.push(`])`);\n    }\n}\nfunction generateResource(generator, node) {\n    if (node.body) {\n        generateNode(generator, node.body);\n    }\n    else {\n        generator.push('null');\n    }\n}\nfunction generateNode(generator, node) {\n    const { helper } = generator;\n    switch (node.type) {\n        case 0 /* NodeTypes.Resource */:\n            generateResource(generator, node);\n            break;\n        case 1 /* NodeTypes.Plural */:\n            generatePluralNode(generator, node);\n            break;\n        case 2 /* NodeTypes.Message */:\n            generateMessageNode(generator, node);\n            break;\n        case 6 /* NodeTypes.Linked */:\n            generateLinkedNode(generator, node);\n            break;\n        case 8 /* NodeTypes.LinkedModifier */:\n            generator.push(JSON.stringify(node.value), node);\n            break;\n        case 7 /* NodeTypes.LinkedKey */:\n            generator.push(JSON.stringify(node.value), node);\n            break;\n        case 5 /* NodeTypes.List */:\n            generator.push(`${helper(\"interpolate\" /* HelperNameMap.INTERPOLATE */)}(${helper(\"list\" /* HelperNameMap.LIST */)}(${node.index}))`, node);\n            break;\n        case 4 /* NodeTypes.Named */:\n            generator.push(`${helper(\"interpolate\" /* HelperNameMap.INTERPOLATE */)}(${helper(\"named\" /* HelperNameMap.NAMED */)}(${JSON.stringify(node.key)}))`, node);\n            break;\n        case 9 /* NodeTypes.Literal */:\n            generator.push(JSON.stringify(node.value), node);\n            break;\n        case 3 /* NodeTypes.Text */:\n            generator.push(JSON.stringify(node.value), node);\n            break;\n        default:\n            if ((process.env.NODE_ENV !== 'production')) {\n                throw createCompileError(CompileErrorCodes.UNHANDLED_CODEGEN_NODE_TYPE, null, {\n                    domain: ERROR_DOMAIN,\n                    args: [node.type]\n                });\n            }\n    }\n}\n// generate code from AST\nconst generate = (ast, options = {}) => {\n    const mode = isString(options.mode) ? options.mode : 'normal';\n    const filename = isString(options.filename)\n        ? options.filename\n        : 'message.intl';\n    const sourceMap = !!options.sourceMap;\n    // prettier-ignore\n    const breakLineCode = options.breakLineCode != null\n        ? options.breakLineCode\n        : mode === 'arrow'\n            ? ';'\n            : '\\n';\n    const needIndent = options.needIndent ? options.needIndent : mode !== 'arrow';\n    const helpers = ast.helpers || [];\n    const generator = createCodeGenerator(ast, {\n        mode,\n        filename,\n        sourceMap,\n        breakLineCode,\n        needIndent\n    });\n    generator.push(mode === 'normal' ? `function __msg__ (ctx) {` : `(ctx) => {`);\n    generator.indent(needIndent);\n    if (helpers.length > 0) {\n        generator.push(`const { ${join(helpers.map(s => `${s}: _${s}`), ', ')} } = ctx`);\n        generator.newline();\n    }\n    generator.push(`return `);\n    generateNode(generator, ast);\n    generator.deindent(needIndent);\n    generator.push(`}`);\n    delete ast.helpers;\n    const { code, map } = generator.context();\n    return {\n        ast,\n        code,\n        map: map ? map.toJSON() : undefined // eslint-disable-line @typescript-eslint/no-explicit-any\n    };\n};\n\nfunction baseCompile(source, options = {}) {\n    const assignedOptions = assign({}, options);\n    const jit = !!assignedOptions.jit;\n    const enalbeMinify = !!assignedOptions.minify;\n    const enambeOptimize = assignedOptions.optimize == null ? true : assignedOptions.optimize;\n    // parse source codes\n    const parser = createParser(assignedOptions);\n    const ast = parser.parse(source);\n    if (!jit) {\n        // transform ASTs\n        transform(ast, assignedOptions);\n        // generate javascript codes\n        return generate(ast, assignedOptions);\n    }\n    else {\n        // optimize ASTs\n        enambeOptimize && optimize(ast);\n        // minimize ASTs\n        enalbeMinify && minify(ast);\n        // In JIT mode, no ast transform, no code generation.\n        return { ast, code: '' };\n    }\n}\n\nexport { COMPILE_ERROR_CODES_EXTEND_POINT, CompileErrorCodes, ERROR_DOMAIN$2 as ERROR_DOMAIN, LOCATION_STUB, baseCompile, createCompileError, createLocation, createParser, createPosition, defaultOnError, detectHtmlTag, errorMessages };\n","/*!\n  * core-base v11.0.1\n  * (c) 2024 kazuya kawaguchi\n  * Released under the MIT License.\n  */\nimport { getGlobalThis, hasOwn, isNumber, create, isObject, isString, isBoolean, warn, format as format$1, isFunction, isPromise, isArray, isPlainObject, assign, isRegExp, warnOnce, isEmptyObject, isDate, join, toDisplayString, escapeHtml, inBrowser, mark, measure, generateCodeFrame, generateFormatCacheKey } from '@intlify/shared';\nimport { detectHtmlTag, defaultOnError, baseCompile as baseCompile$1, COMPILE_ERROR_CODES_EXTEND_POINT, createCompileError } from '@intlify/message-compiler';\nexport { CompileErrorCodes, createCompileError } from '@intlify/message-compiler';\n\n/**\n * This is only called in esm-bundler builds.\n * istanbul-ignore-next\n */\nfunction initFeatureFlags() {\n    if (typeof __INTLIFY_PROD_DEVTOOLS__ !== 'boolean') {\n        getGlobalThis().__INTLIFY_PROD_DEVTOOLS__ = false;\n    }\n    if (typeof __INTLIFY_DROP_MESSAGE_COMPILER__ !== 'boolean') {\n        getGlobalThis().__INTLIFY_DROP_MESSAGE_COMPILER__ = false;\n    }\n}\n\nfunction format(ast) {\n    const msg = (ctx) => formatParts(ctx, ast);\n    return msg;\n}\nfunction formatParts(ctx, ast) {\n    const body = resolveBody(ast);\n    if (body == null) {\n        throw createUnhandleNodeError(0 /* NodeTypes.Resource */);\n    }\n    const type = resolveType(body);\n    if (type === 1 /* NodeTypes.Plural */) {\n        const plural = body;\n        const cases = resolveCases(plural);\n        return ctx.plural(cases.reduce((messages, c) => [\n            ...messages,\n            formatMessageParts(ctx, c)\n        ], []));\n    }\n    else {\n        return formatMessageParts(ctx, body);\n    }\n}\nconst PROPS_BODY = ['b', 'body'];\nfunction resolveBody(node) {\n    return resolveProps(node, PROPS_BODY);\n}\nconst PROPS_CASES = ['c', 'cases'];\nfunction resolveCases(node) {\n    return resolveProps(node, PROPS_CASES, []);\n}\nfunction formatMessageParts(ctx, node) {\n    const static_ = resolveStatic(node);\n    if (static_ != null) {\n        return ctx.type === 'text'\n            ? static_\n            : ctx.normalize([static_]);\n    }\n    else {\n        const messages = resolveItems(node).reduce((acm, c) => [...acm, formatMessagePart(ctx, c)], []);\n        return ctx.normalize(messages);\n    }\n}\nconst PROPS_STATIC = ['s', 'static'];\nfunction resolveStatic(node) {\n    return resolveProps(node, PROPS_STATIC);\n}\nconst PROPS_ITEMS = ['i', 'items'];\nfunction resolveItems(node) {\n    return resolveProps(node, PROPS_ITEMS, []);\n}\nfunction formatMessagePart(ctx, node) {\n    const type = resolveType(node);\n    switch (type) {\n        case 3 /* NodeTypes.Text */: {\n            return resolveValue$1(node, type);\n        }\n        case 9 /* NodeTypes.Literal */: {\n            return resolveValue$1(node, type);\n        }\n        case 4 /* NodeTypes.Named */: {\n            const named = node;\n            if (hasOwn(named, 'k') && named.k) {\n                return ctx.interpolate(ctx.named(named.k));\n            }\n            if (hasOwn(named, 'key') && named.key) {\n                return ctx.interpolate(ctx.named(named.key));\n            }\n            throw createUnhandleNodeError(type);\n        }\n        case 5 /* NodeTypes.List */: {\n            const list = node;\n            if (hasOwn(list, 'i') && isNumber(list.i)) {\n                return ctx.interpolate(ctx.list(list.i));\n            }\n            if (hasOwn(list, 'index') && isNumber(list.index)) {\n                return ctx.interpolate(ctx.list(list.index));\n            }\n            throw createUnhandleNodeError(type);\n        }\n        case 6 /* NodeTypes.Linked */: {\n            const linked = node;\n            const modifier = resolveLinkedModifier(linked);\n            const key = resolveLinkedKey(linked);\n            return ctx.linked(formatMessagePart(ctx, key), modifier ? formatMessagePart(ctx, modifier) : undefined, ctx.type);\n        }\n        case 7 /* NodeTypes.LinkedKey */: {\n            return resolveValue$1(node, type);\n        }\n        case 8 /* NodeTypes.LinkedModifier */: {\n            return resolveValue$1(node, type);\n        }\n        default:\n            throw new Error(`unhandled node on format message part: ${type}`);\n    }\n}\nconst PROPS_TYPE = ['t', 'type'];\nfunction resolveType(node) {\n    return resolveProps(node, PROPS_TYPE);\n}\nconst PROPS_VALUE = ['v', 'value'];\nfunction resolveValue$1(node, type) {\n    const resolved = resolveProps(node, PROPS_VALUE);\n    if (resolved) {\n        return resolved;\n    }\n    else {\n        throw createUnhandleNodeError(type);\n    }\n}\nconst PROPS_MODIFIER = ['m', 'modifier'];\nfunction resolveLinkedModifier(node) {\n    return resolveProps(node, PROPS_MODIFIER);\n}\nconst PROPS_KEY = ['k', 'key'];\nfunction resolveLinkedKey(node) {\n    const resolved = resolveProps(node, PROPS_KEY);\n    if (resolved) {\n        return resolved;\n    }\n    else {\n        throw createUnhandleNodeError(6 /* NodeTypes.Linked */);\n    }\n}\nfunction resolveProps(node, props, defaultValue) {\n    for (let i = 0; i < props.length; i++) {\n        const prop = props[i];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (hasOwn(node, prop) && node[prop] != null) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return node[prop];\n        }\n    }\n    return defaultValue;\n}\nfunction createUnhandleNodeError(type) {\n    return new Error(`unhandled node type: ${type}`);\n}\n\nconst WARN_MESSAGE = `Detected HTML in '{source}' message. Recommend not using HTML messages to avoid XSS.`;\nfunction checkHtmlMessage(source, warnHtmlMessage) {\n    if (warnHtmlMessage && detectHtmlTag(source)) {\n        warn(format$1(WARN_MESSAGE, { source }));\n    }\n}\nconst defaultOnCacheKey = (message) => message;\nlet compileCache = create();\nfunction clearCompileCache() {\n    compileCache = create();\n}\nfunction isMessageAST(val) {\n    return (isObject(val) &&\n        resolveType(val) === 0 &&\n        (hasOwn(val, 'b') || hasOwn(val, 'body')));\n}\nfunction baseCompile(message, options = {}) {\n    // error detecting on compile\n    let detectError = false;\n    const onError = options.onError || defaultOnError;\n    options.onError = (err) => {\n        detectError = true;\n        onError(err);\n    };\n    // compile with mesasge-compiler\n    return { ...baseCompile$1(message, options), detectError };\n}\n/* #__NO_SIDE_EFFECTS__ */\nfunction compile(message, context) {\n    if ((!__INTLIFY_DROP_MESSAGE_COMPILER__) &&\n        isString(message)) {\n        // check HTML message\n        const warnHtmlMessage = isBoolean(context.warnHtmlMessage)\n            ? context.warnHtmlMessage\n            : true;\n        (process.env.NODE_ENV !== 'production') && checkHtmlMessage(message, warnHtmlMessage);\n        // check caches\n        const onCacheKey = context.onCacheKey || defaultOnCacheKey;\n        const cacheKey = onCacheKey(message);\n        const cached = compileCache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        // compile with JIT mode\n        const { ast, detectError } = baseCompile(message, {\n            ...context,\n            location: (process.env.NODE_ENV !== 'production'),\n            jit: true\n        });\n        // compose message function from AST\n        const msg = format(ast);\n        // if occurred compile error, don't cache\n        return !detectError\n            ? (compileCache[cacheKey] = msg)\n            : msg;\n    }\n    else {\n        if ((process.env.NODE_ENV !== 'production') && !isMessageAST(message)) {\n            warn(`the message that is resolve with key '${context.key}' is not supported for jit compilation`);\n            return (() => message);\n        }\n        // AST case (passed from bundler)\n        const cacheKey = message.cacheKey;\n        if (cacheKey) {\n            const cached = compileCache[cacheKey];\n            if (cached) {\n                return cached;\n            }\n            // compose message function from message (AST)\n            return (compileCache[cacheKey] =\n                format(message));\n        }\n        else {\n            return format(message);\n        }\n    }\n}\n\nlet devtools = null;\nfunction setDevToolsHook(hook) {\n    devtools = hook;\n}\nfunction getDevToolsHook() {\n    return devtools;\n}\nfunction initI18nDevTools(i18n, version, meta) {\n    // TODO: queue if devtools is undefined\n    devtools &&\n        devtools.emit('i18n:init', {\n            timestamp: Date.now(),\n            i18n,\n            version,\n            meta\n        });\n}\nconst translateDevTools = \n/* #__PURE__*/ createDevToolsHook('function:translate');\nfunction createDevToolsHook(hook) {\n    return (payloads) => devtools && devtools.emit(hook, payloads);\n}\n\nconst CoreErrorCodes = {\n    INVALID_ARGUMENT: COMPILE_ERROR_CODES_EXTEND_POINT, // 17\n    INVALID_DATE_ARGUMENT: 18,\n    INVALID_ISO_DATE_ARGUMENT: 19,\n    NOT_SUPPORT_NON_STRING_MESSAGE: 20,\n    NOT_SUPPORT_LOCALE_PROMISE_VALUE: 21,\n    NOT_SUPPORT_LOCALE_ASYNC_FUNCTION: 22,\n    NOT_SUPPORT_LOCALE_TYPE: 23\n};\nconst CORE_ERROR_CODES_EXTEND_POINT = 24;\nfunction createCoreError(code) {\n    return createCompileError(code, null, (process.env.NODE_ENV !== 'production') ? { messages: errorMessages } : undefined);\n}\n/** @internal */\nconst errorMessages = {\n    [CoreErrorCodes.INVALID_ARGUMENT]: 'Invalid arguments',\n    [CoreErrorCodes.INVALID_DATE_ARGUMENT]: 'The date provided is an invalid Date object.' +\n        'Make sure your Date represents a valid date.',\n    [CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT]: 'The argument provided is not a valid ISO date string',\n    [CoreErrorCodes.NOT_SUPPORT_NON_STRING_MESSAGE]: 'Not support non-string message',\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_PROMISE_VALUE]: 'cannot support promise value',\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION]: 'cannot support async function',\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_TYPE]: 'cannot support locale type'\n};\n\n/** @internal */\nfunction getLocale(context, options) {\n    return options.locale != null\n        ? resolveLocale(options.locale)\n        : resolveLocale(context.locale);\n}\nlet _resolveLocale;\n/** @internal */\nfunction resolveLocale(locale) {\n    if (isString(locale)) {\n        return locale;\n    }\n    else {\n        if (isFunction(locale)) {\n            if (locale.resolvedOnce && _resolveLocale != null) {\n                return _resolveLocale;\n            }\n            else if (locale.constructor.name === 'Function') {\n                const resolve = locale();\n                if (isPromise(resolve)) {\n                    throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_PROMISE_VALUE);\n                }\n                return (_resolveLocale = resolve);\n            }\n            else {\n                throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION);\n            }\n        }\n        else {\n            throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_TYPE);\n        }\n    }\n}\n/**\n * Fallback with simple implemenation\n *\n * @remarks\n * A fallback locale function implemented with a simple fallback algorithm.\n *\n * Basically, it returns the value as specified in the `fallbackLocale` props, and is processed with the fallback inside intlify.\n *\n * @param ctx - A {@link CoreContext | context}\n * @param fallback - A {@link FallbackLocale | fallback locale}\n * @param start - A starting {@link Locale | locale}\n *\n * @returns Fallback locales\n *\n * @VueI18nGeneral\n */\nfunction fallbackWithSimple(ctx, fallback, start) {\n    // prettier-ignore\n    return [...new Set([\n            start,\n            ...(isArray(fallback)\n                ? fallback\n                : isObject(fallback)\n                    ? Object.keys(fallback)\n                    : isString(fallback)\n                        ? [fallback]\n                        : [start])\n        ])];\n}\n/**\n * Fallback with locale chain\n *\n * @remarks\n * A fallback locale function implemented with a fallback chain algorithm. It's used in VueI18n as default.\n *\n * @param ctx - A {@link CoreContext | context}\n * @param fallback - A {@link FallbackLocale | fallback locale}\n * @param start - A starting {@link Locale | locale}\n *\n * @returns Fallback locales\n *\n * @VueI18nSee [Fallbacking](../guide/essentials/fallback)\n *\n * @VueI18nGeneral\n */\nfunction fallbackWithLocaleChain(ctx, fallback, start) {\n    const startLocale = isString(start) ? start : DEFAULT_LOCALE;\n    const context = ctx;\n    if (!context.__localeChainCache) {\n        context.__localeChainCache = new Map();\n    }\n    let chain = context.__localeChainCache.get(startLocale);\n    if (!chain) {\n        chain = [];\n        // first block defined by start\n        let block = [start];\n        // while any intervening block found\n        while (isArray(block)) {\n            block = appendBlockToChain(chain, block, fallback);\n        }\n        // prettier-ignore\n        // last block defined by default\n        const defaults = isArray(fallback) || !isPlainObject(fallback)\n            ? fallback\n            : fallback['default']\n                ? fallback['default']\n                : null;\n        // convert defaults to array\n        block = isString(defaults) ? [defaults] : defaults;\n        if (isArray(block)) {\n            appendBlockToChain(chain, block, false);\n        }\n        context.__localeChainCache.set(startLocale, chain);\n    }\n    return chain;\n}\nfunction appendBlockToChain(chain, block, blocks) {\n    let follow = true;\n    for (let i = 0; i < block.length && isBoolean(follow); i++) {\n        const locale = block[i];\n        if (isString(locale)) {\n            follow = appendLocaleToChain(chain, block[i], blocks);\n        }\n    }\n    return follow;\n}\nfunction appendLocaleToChain(chain, locale, blocks) {\n    let follow;\n    const tokens = locale.split('-');\n    do {\n        const target = tokens.join('-');\n        follow = appendItemToChain(chain, target, blocks);\n        tokens.splice(-1, 1);\n    } while (tokens.length && follow === true);\n    return follow;\n}\nfunction appendItemToChain(chain, target, blocks) {\n    let follow = false;\n    if (!chain.includes(target)) {\n        follow = true;\n        if (target) {\n            follow = target[target.length - 1] !== '!';\n            const locale = target.replace(/!/g, '');\n            chain.push(locale);\n            if ((isArray(blocks) || isPlainObject(blocks)) &&\n                blocks[locale] // eslint-disable-line @typescript-eslint/no-explicit-any\n            ) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                follow = blocks[locale];\n            }\n        }\n    }\n    return follow;\n}\n\nconst pathStateMachine = [];\npathStateMachine[0 /* States.BEFORE_PATH */] = {\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [0 /* States.BEFORE_PATH */],\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */]\n};\npathStateMachine[1 /* States.IN_PATH */] = {\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [1 /* States.IN_PATH */],\n    [\".\" /* PathCharTypes.DOT */]: [2 /* States.BEFORE_IDENT */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */]\n};\npathStateMachine[2 /* States.BEFORE_IDENT */] = {\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [2 /* States.BEFORE_IDENT */],\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"0\" /* PathCharTypes.ZERO */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */]\n};\npathStateMachine[3 /* States.IN_IDENT */] = {\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"0\" /* PathCharTypes.ZERO */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [1 /* States.IN_PATH */, 1 /* Actions.PUSH */],\n    [\".\" /* PathCharTypes.DOT */]: [2 /* States.BEFORE_IDENT */, 1 /* Actions.PUSH */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */, 1 /* Actions.PUSH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */, 1 /* Actions.PUSH */]\n};\npathStateMachine[4 /* States.IN_SUB_PATH */] = {\n    [\"'\" /* PathCharTypes.SINGLE_QUOTE */]: [5 /* States.IN_SINGLE_QUOTE */, 0 /* Actions.APPEND */],\n    [\"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */]: [6 /* States.IN_DOUBLE_QUOTE */, 0 /* Actions.APPEND */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [\n        4 /* States.IN_SUB_PATH */,\n        2 /* Actions.INC_SUB_PATH_DEPTH */\n    ],\n    [\"]\" /* PathCharTypes.RIGHT_BRACKET */]: [1 /* States.IN_PATH */, 3 /* Actions.PUSH_SUB_PATH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n    [\"l\" /* PathCharTypes.ELSE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */]\n};\npathStateMachine[5 /* States.IN_SINGLE_QUOTE */] = {\n    [\"'\" /* PathCharTypes.SINGLE_QUOTE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n    [\"l\" /* PathCharTypes.ELSE */]: [5 /* States.IN_SINGLE_QUOTE */, 0 /* Actions.APPEND */]\n};\npathStateMachine[6 /* States.IN_DOUBLE_QUOTE */] = {\n    [\"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n    [\"l\" /* PathCharTypes.ELSE */]: [6 /* States.IN_DOUBLE_QUOTE */, 0 /* Actions.APPEND */]\n};\n/**\n * Check if an expression is a literal value.\n */\nconst literalValueRE = /^\\s?(?:true|false|-?[\\d.]+|'[^']*'|\"[^\"]*\")\\s?$/;\nfunction isLiteral(exp) {\n    return literalValueRE.test(exp);\n}\n/**\n * Strip quotes from a string\n */\nfunction stripQuotes(str) {\n    const a = str.charCodeAt(0);\n    const b = str.charCodeAt(str.length - 1);\n    return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n/**\n * Determine the type of a character in a keypath.\n */\nfunction getPathCharType(ch) {\n    if (ch === undefined || ch === null) {\n        return \"o\" /* PathCharTypes.END_OF_FAIL */;\n    }\n    const code = ch.charCodeAt(0);\n    switch (code) {\n        case 0x5b: // [\n        case 0x5d: // ]\n        case 0x2e: // .\n        case 0x22: // \"\n        case 0x27: // '\n            return ch;\n        case 0x5f: // _\n        case 0x24: // $\n        case 0x2d: // -\n            return \"i\" /* PathCharTypes.IDENT */;\n        case 0x09: // Tab (HT)\n        case 0x0a: // Newline (LF)\n        case 0x0d: // Return (CR)\n        case 0xa0: // No-break space (NBSP)\n        case 0xfeff: // Byte Order Mark (BOM)\n        case 0x2028: // Line Separator (LS)\n        case 0x2029: // Paragraph Separator (PS)\n            return \"w\" /* PathCharTypes.WORKSPACE */;\n    }\n    return \"i\" /* PathCharTypes.IDENT */;\n}\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n */\nfunction formatSubPath(path) {\n    const trimmed = path.trim();\n    // invalid leading 0\n    if (path.charAt(0) === '0' && isNaN(parseInt(path))) {\n        return false;\n    }\n    return isLiteral(trimmed)\n        ? stripQuotes(trimmed)\n        : \"*\" /* PathCharTypes.ASTARISK */ + trimmed;\n}\n/**\n * Parse a string path into an array of segments\n */\nfunction parse(path) {\n    const keys = [];\n    let index = -1;\n    let mode = 0 /* States.BEFORE_PATH */;\n    let subPathDepth = 0;\n    let c;\n    let key; // eslint-disable-line\n    let newChar;\n    let type;\n    let transition;\n    let action;\n    let typeMap;\n    const actions = [];\n    actions[0 /* Actions.APPEND */] = () => {\n        if (key === undefined) {\n            key = newChar;\n        }\n        else {\n            key += newChar;\n        }\n    };\n    actions[1 /* Actions.PUSH */] = () => {\n        if (key !== undefined) {\n            keys.push(key);\n            key = undefined;\n        }\n    };\n    actions[2 /* Actions.INC_SUB_PATH_DEPTH */] = () => {\n        actions[0 /* Actions.APPEND */]();\n        subPathDepth++;\n    };\n    actions[3 /* Actions.PUSH_SUB_PATH */] = () => {\n        if (subPathDepth > 0) {\n            subPathDepth--;\n            mode = 4 /* States.IN_SUB_PATH */;\n            actions[0 /* Actions.APPEND */]();\n        }\n        else {\n            subPathDepth = 0;\n            if (key === undefined) {\n                return false;\n            }\n            key = formatSubPath(key);\n            if (key === false) {\n                return false;\n            }\n            else {\n                actions[1 /* Actions.PUSH */]();\n            }\n        }\n    };\n    function maybeUnescapeQuote() {\n        const nextChar = path[index + 1];\n        if ((mode === 5 /* States.IN_SINGLE_QUOTE */ &&\n            nextChar === \"'\" /* PathCharTypes.SINGLE_QUOTE */) ||\n            (mode === 6 /* States.IN_DOUBLE_QUOTE */ &&\n                nextChar === \"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */)) {\n            index++;\n            newChar = '\\\\' + nextChar;\n            actions[0 /* Actions.APPEND */]();\n            return true;\n        }\n    }\n    while (mode !== null) {\n        index++;\n        c = path[index];\n        if (c === '\\\\' && maybeUnescapeQuote()) {\n            continue;\n        }\n        type = getPathCharType(c);\n        typeMap = pathStateMachine[mode];\n        transition = typeMap[type] || typeMap[\"l\" /* PathCharTypes.ELSE */] || 8 /* States.ERROR */;\n        // check parse error\n        if (transition === 8 /* States.ERROR */) {\n            return;\n        }\n        mode = transition[0];\n        if (transition[1] !== undefined) {\n            action = actions[transition[1]];\n            if (action) {\n                newChar = c;\n                if (action() === false) {\n                    return;\n                }\n            }\n        }\n        // check parse finish\n        if (mode === 7 /* States.AFTER_PATH */) {\n            return keys;\n        }\n    }\n}\n// path token cache\nconst cache = new Map();\n/**\n * key-value message resolver\n *\n * @remarks\n * Resolves messages with the key-value structure. Note that messages with a hierarchical structure such as objects cannot be resolved\n *\n * @param obj - A target object to be resolved with path\n * @param path - A {@link Path | path} to resolve the value of message\n *\n * @returns A resolved {@link PathValue | path value}\n *\n * @VueI18nGeneral\n */\nfunction resolveWithKeyValue(obj, path) {\n    return isObject(obj) ? obj[path] : null;\n}\n/**\n * message resolver\n *\n * @remarks\n * Resolves messages. messages with a hierarchical structure such as objects can be resolved. This resolver is used in VueI18n as default.\n *\n * @param obj - A target object to be resolved with path\n * @param path - A {@link Path | path} to resolve the value of message\n *\n * @returns A resolved {@link PathValue | path value}\n *\n * @VueI18nGeneral\n */\nfunction resolveValue(obj, path) {\n    // check object\n    if (!isObject(obj)) {\n        return null;\n    }\n    // parse path\n    let hit = cache.get(path);\n    if (!hit) {\n        hit = parse(path);\n        if (hit) {\n            cache.set(path, hit);\n        }\n    }\n    // check hit\n    if (!hit) {\n        return null;\n    }\n    // resolve path value\n    const len = hit.length;\n    let last = obj;\n    let i = 0;\n    while (i < len) {\n        const val = last[hit[i]];\n        if (val === undefined) {\n            return null;\n        }\n        if (isFunction(last)) {\n            return null;\n        }\n        last = val;\n        i++;\n    }\n    return last;\n}\n\nconst CoreWarnCodes = {\n    NOT_FOUND_KEY: 1,\n    FALLBACK_TO_TRANSLATE: 2,\n    CANNOT_FORMAT_NUMBER: 3,\n    FALLBACK_TO_NUMBER_FORMAT: 4,\n    CANNOT_FORMAT_DATE: 5,\n    FALLBACK_TO_DATE_FORMAT: 6,\n    EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER: 7\n};\nconst CORE_WARN_CODES_EXTEND_POINT = 8;\n/** @internal */\nconst warnMessages = {\n    [CoreWarnCodes.NOT_FOUND_KEY]: `Not found '{key}' key in '{locale}' locale messages.`,\n    [CoreWarnCodes.FALLBACK_TO_TRANSLATE]: `Fall back to translate '{key}' key with '{target}' locale.`,\n    [CoreWarnCodes.CANNOT_FORMAT_NUMBER]: `Cannot format a number value due to not supported Intl.NumberFormat.`,\n    [CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT]: `Fall back to number format '{key}' key with '{target}' locale.`,\n    [CoreWarnCodes.CANNOT_FORMAT_DATE]: `Cannot format a date value due to not supported Intl.DateTimeFormat.`,\n    [CoreWarnCodes.FALLBACK_TO_DATE_FORMAT]: `Fall back to datetime format '{key}' key with '{target}' locale.`,\n    [CoreWarnCodes.EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER]: `This project is using Custom Message Compiler, which is an experimental feature. It may receive breaking changes or be removed in the future.`\n};\nfunction getWarnMessage(code, ...args) {\n    return format$1(warnMessages[code], ...args);\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Intlify core-base version\n * @internal\n */\nconst VERSION = '11.0.1';\nconst NOT_REOSLVED = -1;\nconst DEFAULT_LOCALE = 'en-US';\nconst MISSING_RESOLVE_VALUE = '';\nconst capitalize = (str) => `${str.charAt(0).toLocaleUpperCase()}${str.substr(1)}`;\nfunction getDefaultLinkedModifiers() {\n    return {\n        upper: (val, type) => {\n            // prettier-ignore\n            return type === 'text' && isString(val)\n                ? val.toUpperCase()\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\n                    ? val.children.toUpperCase()\n                    : val;\n        },\n        lower: (val, type) => {\n            // prettier-ignore\n            return type === 'text' && isString(val)\n                ? val.toLowerCase()\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\n                    ? val.children.toLowerCase()\n                    : val;\n        },\n        capitalize: (val, type) => {\n            // prettier-ignore\n            return (type === 'text' && isString(val)\n                ? capitalize(val)\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\n                    ? capitalize(val.children)\n                    : val);\n        }\n    };\n}\nlet _compiler;\nfunction registerMessageCompiler(compiler) {\n    _compiler = compiler;\n}\nlet _resolver;\n/**\n * Register the message resolver\n *\n * @param resolver - A {@link MessageResolver} function\n *\n * @VueI18nGeneral\n */\nfunction registerMessageResolver(resolver) {\n    _resolver = resolver;\n}\nlet _fallbacker;\n/**\n * Register the locale fallbacker\n *\n * @param fallbacker - A {@link LocaleFallbacker} function\n *\n * @VueI18nGeneral\n */\nfunction registerLocaleFallbacker(fallbacker) {\n    _fallbacker = fallbacker;\n}\n// Additional Meta for Intlify DevTools\nlet _additionalMeta = null;\n/* #__NO_SIDE_EFFECTS__ */\nconst setAdditionalMeta = (meta) => {\n    _additionalMeta = meta;\n};\n/* #__NO_SIDE_EFFECTS__ */\nconst getAdditionalMeta = () => _additionalMeta;\nlet _fallbackContext = null;\nconst setFallbackContext = (context) => {\n    _fallbackContext = context;\n};\nconst getFallbackContext = () => _fallbackContext;\n// ID for CoreContext\nlet _cid = 0;\nfunction createCoreContext(options = {}) {\n    // setup options\n    const onWarn = isFunction(options.onWarn) ? options.onWarn : warn;\n    const version = isString(options.version) ? options.version : VERSION;\n    const locale = isString(options.locale) || isFunction(options.locale)\n        ? options.locale\n        : DEFAULT_LOCALE;\n    const _locale = isFunction(locale) ? DEFAULT_LOCALE : locale;\n    const fallbackLocale = isArray(options.fallbackLocale) ||\n        isPlainObject(options.fallbackLocale) ||\n        isString(options.fallbackLocale) ||\n        options.fallbackLocale === false\n        ? options.fallbackLocale\n        : _locale;\n    const messages = isPlainObject(options.messages)\n        ? options.messages\n        : createResources(_locale);\n    const datetimeFormats = isPlainObject(options.datetimeFormats)\n            ? options.datetimeFormats\n            : createResources(_locale)\n        ;\n    const numberFormats = isPlainObject(options.numberFormats)\n            ? options.numberFormats\n            : createResources(_locale)\n        ;\n    const modifiers = assign(create(), options.modifiers, getDefaultLinkedModifiers());\n    const pluralRules = options.pluralRules || create();\n    const missing = isFunction(options.missing) ? options.missing : null;\n    const missingWarn = isBoolean(options.missingWarn) || isRegExp(options.missingWarn)\n        ? options.missingWarn\n        : true;\n    const fallbackWarn = isBoolean(options.fallbackWarn) || isRegExp(options.fallbackWarn)\n        ? options.fallbackWarn\n        : true;\n    const fallbackFormat = !!options.fallbackFormat;\n    const unresolving = !!options.unresolving;\n    const postTranslation = isFunction(options.postTranslation)\n        ? options.postTranslation\n        : null;\n    const processor = isPlainObject(options.processor) ? options.processor : null;\n    const warnHtmlMessage = isBoolean(options.warnHtmlMessage)\n        ? options.warnHtmlMessage\n        : true;\n    const escapeParameter = !!options.escapeParameter;\n    const messageCompiler = isFunction(options.messageCompiler)\n        ? options.messageCompiler\n        : _compiler;\n    if ((process.env.NODE_ENV !== 'production') &&\n        !false &&\n        !false &&\n        isFunction(options.messageCompiler)) {\n        warnOnce(getWarnMessage(CoreWarnCodes.EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER));\n    }\n    const messageResolver = isFunction(options.messageResolver)\n        ? options.messageResolver\n        : _resolver || resolveWithKeyValue;\n    const localeFallbacker = isFunction(options.localeFallbacker)\n        ? options.localeFallbacker\n        : _fallbacker || fallbackWithSimple;\n    const fallbackContext = isObject(options.fallbackContext)\n        ? options.fallbackContext\n        : undefined;\n    // setup internal options\n    const internalOptions = options;\n    const __datetimeFormatters = isObject(internalOptions.__datetimeFormatters)\n            ? internalOptions.__datetimeFormatters\n            : new Map()\n        ;\n    const __numberFormatters = isObject(internalOptions.__numberFormatters)\n            ? internalOptions.__numberFormatters\n            : new Map()\n        ;\n    const __meta = isObject(internalOptions.__meta) ? internalOptions.__meta : {};\n    _cid++;\n    const context = {\n        version,\n        cid: _cid,\n        locale,\n        fallbackLocale,\n        messages,\n        modifiers,\n        pluralRules,\n        missing,\n        missingWarn,\n        fallbackWarn,\n        fallbackFormat,\n        unresolving,\n        postTranslation,\n        processor,\n        warnHtmlMessage,\n        escapeParameter,\n        messageCompiler,\n        messageResolver,\n        localeFallbacker,\n        fallbackContext,\n        onWarn,\n        __meta\n    };\n    {\n        context.datetimeFormats = datetimeFormats;\n        context.numberFormats = numberFormats;\n        context.__datetimeFormatters = __datetimeFormatters;\n        context.__numberFormatters = __numberFormatters;\n    }\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production')) {\n        context.__v_emitter =\n            internalOptions.__v_emitter != null\n                ? internalOptions.__v_emitter\n                : undefined;\n    }\n    // NOTE: experimental !!\n    if ((process.env.NODE_ENV !== 'production') || __INTLIFY_PROD_DEVTOOLS__) {\n        initI18nDevTools(context, version, __meta);\n    }\n    return context;\n}\nconst createResources = (locale) => ({ [locale]: create() });\n/** @internal */\nfunction isTranslateFallbackWarn(fallback, key) {\n    return fallback instanceof RegExp ? fallback.test(key) : fallback;\n}\n/** @internal */\nfunction isTranslateMissingWarn(missing, key) {\n    return missing instanceof RegExp ? missing.test(key) : missing;\n}\n/** @internal */\nfunction handleMissing(context, key, locale, missingWarn, type) {\n    const { missing, onWarn } = context;\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production')) {\n        const emitter = context.__v_emitter;\n        if (emitter) {\n            emitter.emit('missing', {\n                locale,\n                key,\n                type,\n                groupId: `${type}:${key}`\n            });\n        }\n    }\n    if (missing !== null) {\n        const ret = missing(context, locale, key, type);\n        return isString(ret) ? ret : key;\n    }\n    else {\n        if ((process.env.NODE_ENV !== 'production') && isTranslateMissingWarn(missingWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.NOT_FOUND_KEY, { key, locale }));\n        }\n        return key;\n    }\n}\n/** @internal */\nfunction updateFallbackLocale(ctx, locale, fallback) {\n    const context = ctx;\n    context.__localeChainCache = new Map();\n    ctx.localeFallbacker(ctx, fallback, locale);\n}\n/** @internal */\nfunction isAlmostSameLocale(locale, compareLocale) {\n    if (locale === compareLocale)\n        return false;\n    return locale.split('-')[0] === compareLocale.split('-')[0];\n}\n/** @internal */\nfunction isImplicitFallback(targetLocale, locales) {\n    const index = locales.indexOf(targetLocale);\n    if (index === -1) {\n        return false;\n    }\n    for (let i = index + 1; i < locales.length; i++) {\n        if (isAlmostSameLocale(targetLocale, locales[i])) {\n            return true;\n        }\n    }\n    return false;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nconst intlDefined = typeof Intl !== 'undefined';\nconst Availabilities = {\n    dateTimeFormat: intlDefined && typeof Intl.DateTimeFormat !== 'undefined',\n    numberFormat: intlDefined && typeof Intl.NumberFormat !== 'undefined'\n};\n\n// implementation of `datetime` function\nfunction datetime(context, ...args) {\n    const { datetimeFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;\n    const { __datetimeFormatters } = context;\n    if ((process.env.NODE_ENV !== 'production') && !Availabilities.dateTimeFormat) {\n        onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_DATE));\n        return MISSING_RESOLVE_VALUE;\n    }\n    const [key, value, options, overrides] = parseDateTimeArgs(...args);\n    const missingWarn = isBoolean(options.missingWarn)\n        ? options.missingWarn\n        : context.missingWarn;\n    const fallbackWarn = isBoolean(options.fallbackWarn)\n        ? options.fallbackWarn\n        : context.fallbackWarn;\n    const part = !!options.part;\n    const locale = getLocale(context, options);\n    const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\n    fallbackLocale, locale);\n    if (!isString(key) || key === '') {\n        return new Intl.DateTimeFormat(locale, overrides).format(value);\n    }\n    // resolve format\n    let datetimeFormat = {};\n    let targetLocale;\n    let format = null;\n    let from = locale;\n    let to = null;\n    const type = 'datetime format';\n    for (let i = 0; i < locales.length; i++) {\n        targetLocale = to = locales[i];\n        if ((process.env.NODE_ENV !== 'production') &&\n            locale !== targetLocale &&\n            isTranslateFallbackWarn(fallbackWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_DATE_FORMAT, {\n                key,\n                target: targetLocale\n            }));\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\n            const emitter = context.__v_emitter;\n            if (emitter) {\n                emitter.emit('fallback', {\n                    type,\n                    key,\n                    from,\n                    to,\n                    groupId: `${type}:${key}`\n                });\n            }\n        }\n        datetimeFormat =\n            datetimeFormats[targetLocale] || {};\n        format = datetimeFormat[key];\n        if (isPlainObject(format))\n            break;\n        handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n        from = to;\n    }\n    // checking format and target locale\n    if (!isPlainObject(format) || !isString(targetLocale)) {\n        return unresolving ? NOT_REOSLVED : key;\n    }\n    let id = `${targetLocale}__${key}`;\n    if (!isEmptyObject(overrides)) {\n        id = `${id}__${JSON.stringify(overrides)}`;\n    }\n    let formatter = __datetimeFormatters.get(id);\n    if (!formatter) {\n        formatter = new Intl.DateTimeFormat(targetLocale, assign({}, format, overrides));\n        __datetimeFormatters.set(id, formatter);\n    }\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\nconst DATETIME_FORMAT_OPTIONS_KEYS = [\n    'localeMatcher',\n    'weekday',\n    'era',\n    'year',\n    'month',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'timeZoneName',\n    'formatMatcher',\n    'hour12',\n    'timeZone',\n    'dateStyle',\n    'timeStyle',\n    'calendar',\n    'dayPeriod',\n    'numberingSystem',\n    'hourCycle',\n    'fractionalSecondDigits'\n];\n/** @internal */\nfunction parseDateTimeArgs(...args) {\n    const [arg1, arg2, arg3, arg4] = args;\n    const options = create();\n    let overrides = create();\n    let value;\n    if (isString(arg1)) {\n        // Only allow ISO strings - other date formats are often supported,\n        // but may cause different results in different browsers.\n        const matches = arg1.match(/(\\d{4}-\\d{2}-\\d{2})(T|\\s)?(.*)/);\n        if (!matches) {\n            throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n        }\n        // Some browsers can not parse the iso datetime separated by space,\n        // this is a compromise solution by replace the 'T'/' ' with 'T'\n        const dateTime = matches[3]\n            ? matches[3].trim().startsWith('T')\n                ? `${matches[1].trim()}${matches[3].trim()}`\n                : `${matches[1].trim()}T${matches[3].trim()}`\n            : matches[1].trim();\n        value = new Date(dateTime);\n        try {\n            // This will fail if the date is not valid\n            value.toISOString();\n        }\n        catch {\n            throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n        }\n    }\n    else if (isDate(arg1)) {\n        if (isNaN(arg1.getTime())) {\n            throw createCoreError(CoreErrorCodes.INVALID_DATE_ARGUMENT);\n        }\n        value = arg1;\n    }\n    else if (isNumber(arg1)) {\n        value = arg1;\n    }\n    else {\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n    }\n    if (isString(arg2)) {\n        options.key = arg2;\n    }\n    else if (isPlainObject(arg2)) {\n        Object.keys(arg2).forEach(key => {\n            if (DATETIME_FORMAT_OPTIONS_KEYS.includes(key)) {\n                overrides[key] = arg2[key];\n            }\n            else {\n                options[key] = arg2[key];\n            }\n        });\n    }\n    if (isString(arg3)) {\n        options.locale = arg3;\n    }\n    else if (isPlainObject(arg3)) {\n        overrides = arg3;\n    }\n    if (isPlainObject(arg4)) {\n        overrides = arg4;\n    }\n    return [options.key || '', value, options, overrides];\n}\n/** @internal */\nfunction clearDateTimeFormat(ctx, locale, format) {\n    const context = ctx;\n    for (const key in format) {\n        const id = `${locale}__${key}`;\n        if (!context.__datetimeFormatters.has(id)) {\n            continue;\n        }\n        context.__datetimeFormatters.delete(id);\n    }\n}\n\n// implementation of `number` function\nfunction number(context, ...args) {\n    const { numberFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;\n    const { __numberFormatters } = context;\n    if ((process.env.NODE_ENV !== 'production') && !Availabilities.numberFormat) {\n        onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_NUMBER));\n        return MISSING_RESOLVE_VALUE;\n    }\n    const [key, value, options, overrides] = parseNumberArgs(...args);\n    const missingWarn = isBoolean(options.missingWarn)\n        ? options.missingWarn\n        : context.missingWarn;\n    const fallbackWarn = isBoolean(options.fallbackWarn)\n        ? options.fallbackWarn\n        : context.fallbackWarn;\n    const part = !!options.part;\n    const locale = getLocale(context, options);\n    const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\n    fallbackLocale, locale);\n    if (!isString(key) || key === '') {\n        return new Intl.NumberFormat(locale, overrides).format(value);\n    }\n    // resolve format\n    let numberFormat = {};\n    let targetLocale;\n    let format = null;\n    let from = locale;\n    let to = null;\n    const type = 'number format';\n    for (let i = 0; i < locales.length; i++) {\n        targetLocale = to = locales[i];\n        if ((process.env.NODE_ENV !== 'production') &&\n            locale !== targetLocale &&\n            isTranslateFallbackWarn(fallbackWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT, {\n                key,\n                target: targetLocale\n            }));\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\n            const emitter = context.__v_emitter;\n            if (emitter) {\n                emitter.emit('fallback', {\n                    type,\n                    key,\n                    from,\n                    to,\n                    groupId: `${type}:${key}`\n                });\n            }\n        }\n        numberFormat =\n            numberFormats[targetLocale] || {};\n        format = numberFormat[key];\n        if (isPlainObject(format))\n            break;\n        handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n        from = to;\n    }\n    // checking format and target locale\n    if (!isPlainObject(format) || !isString(targetLocale)) {\n        return unresolving ? NOT_REOSLVED : key;\n    }\n    let id = `${targetLocale}__${key}`;\n    if (!isEmptyObject(overrides)) {\n        id = `${id}__${JSON.stringify(overrides)}`;\n    }\n    let formatter = __numberFormatters.get(id);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(targetLocale, assign({}, format, overrides));\n        __numberFormatters.set(id, formatter);\n    }\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\nconst NUMBER_FORMAT_OPTIONS_KEYS = [\n    'localeMatcher',\n    'style',\n    'currency',\n    'currencyDisplay',\n    'currencySign',\n    'useGrouping',\n    'minimumIntegerDigits',\n    'minimumFractionDigits',\n    'maximumFractionDigits',\n    'minimumSignificantDigits',\n    'maximumSignificantDigits',\n    'compactDisplay',\n    'notation',\n    'signDisplay',\n    'unit',\n    'unitDisplay',\n    'roundingMode',\n    'roundingPriority',\n    'roundingIncrement',\n    'trailingZeroDisplay'\n];\n/** @internal */\nfunction parseNumberArgs(...args) {\n    const [arg1, arg2, arg3, arg4] = args;\n    const options = create();\n    let overrides = create();\n    if (!isNumber(arg1)) {\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n    }\n    const value = arg1;\n    if (isString(arg2)) {\n        options.key = arg2;\n    }\n    else if (isPlainObject(arg2)) {\n        Object.keys(arg2).forEach(key => {\n            if (NUMBER_FORMAT_OPTIONS_KEYS.includes(key)) {\n                overrides[key] = arg2[key];\n            }\n            else {\n                options[key] = arg2[key];\n            }\n        });\n    }\n    if (isString(arg3)) {\n        options.locale = arg3;\n    }\n    else if (isPlainObject(arg3)) {\n        overrides = arg3;\n    }\n    if (isPlainObject(arg4)) {\n        overrides = arg4;\n    }\n    return [options.key || '', value, options, overrides];\n}\n/** @internal */\nfunction clearNumberFormat(ctx, locale, format) {\n    const context = ctx;\n    for (const key in format) {\n        const id = `${locale}__${key}`;\n        if (!context.__numberFormatters.has(id)) {\n            continue;\n        }\n        context.__numberFormatters.delete(id);\n    }\n}\n\nconst DEFAULT_MODIFIER = (str) => str;\nconst DEFAULT_MESSAGE = (ctx) => ''; // eslint-disable-line\nconst DEFAULT_MESSAGE_DATA_TYPE = 'text';\nconst DEFAULT_NORMALIZE = (values) => values.length === 0 ? '' : join(values);\nconst DEFAULT_INTERPOLATE = toDisplayString;\nfunction pluralDefault(choice, choicesLength) {\n    choice = Math.abs(choice);\n    if (choicesLength === 2) {\n        // prettier-ignore\n        return choice\n            ? choice > 1\n                ? 1\n                : 0\n            : 1;\n    }\n    return choice ? Math.min(choice, 2) : 0;\n}\nfunction getPluralIndex(options) {\n    // prettier-ignore\n    const index = isNumber(options.pluralIndex)\n        ? options.pluralIndex\n        : -1;\n    // prettier-ignore\n    return options.named && (isNumber(options.named.count) || isNumber(options.named.n))\n        ? isNumber(options.named.count)\n            ? options.named.count\n            : isNumber(options.named.n)\n                ? options.named.n\n                : index\n        : index;\n}\nfunction normalizeNamed(pluralIndex, props) {\n    if (!props.count) {\n        props.count = pluralIndex;\n    }\n    if (!props.n) {\n        props.n = pluralIndex;\n    }\n}\nfunction createMessageContext(options = {}) {\n    const locale = options.locale;\n    const pluralIndex = getPluralIndex(options);\n    const pluralRule = isObject(options.pluralRules) &&\n        isString(locale) &&\n        isFunction(options.pluralRules[locale])\n        ? options.pluralRules[locale]\n        : pluralDefault;\n    const orgPluralRule = isObject(options.pluralRules) &&\n        isString(locale) &&\n        isFunction(options.pluralRules[locale])\n        ? pluralDefault\n        : undefined;\n    const plural = (messages) => {\n        return messages[pluralRule(pluralIndex, messages.length, orgPluralRule)];\n    };\n    const _list = options.list || [];\n    const list = (index) => _list[index];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const _named = options.named || create();\n    isNumber(options.pluralIndex) && normalizeNamed(pluralIndex, _named);\n    const named = (key) => _named[key];\n    function message(key, useLinked) {\n        // prettier-ignore\n        const msg = isFunction(options.messages)\n            ? options.messages(key, !!useLinked)\n            : isObject(options.messages)\n                ? options.messages[key]\n                : false;\n        return !msg\n            ? options.parent\n                ? options.parent.message(key) // resolve from parent messages\n                : DEFAULT_MESSAGE\n            : msg;\n    }\n    const _modifier = (name) => options.modifiers\n        ? options.modifiers[name]\n        : DEFAULT_MODIFIER;\n    const normalize = isPlainObject(options.processor) && isFunction(options.processor.normalize)\n        ? options.processor.normalize\n        : DEFAULT_NORMALIZE;\n    const interpolate = isPlainObject(options.processor) &&\n        isFunction(options.processor.interpolate)\n        ? options.processor.interpolate\n        : DEFAULT_INTERPOLATE;\n    const type = isPlainObject(options.processor) && isString(options.processor.type)\n        ? options.processor.type\n        : DEFAULT_MESSAGE_DATA_TYPE;\n    const linked = (key, ...args) => {\n        const [arg1, arg2] = args;\n        let type = 'text';\n        let modifier = '';\n        if (args.length === 1) {\n            if (isObject(arg1)) {\n                modifier = arg1.modifier || modifier;\n                type = arg1.type || type;\n            }\n            else if (isString(arg1)) {\n                modifier = arg1 || modifier;\n            }\n        }\n        else if (args.length === 2) {\n            if (isString(arg1)) {\n                modifier = arg1 || modifier;\n            }\n            if (isString(arg2)) {\n                type = arg2 || type;\n            }\n        }\n        const ret = message(key, true)(ctx);\n        const msg = \n        // The message in vnode resolved with linked are returned as an array by processor.nomalize\n        type === 'vnode' && isArray(ret) && modifier\n            ? ret[0]\n            : ret;\n        return modifier ? _modifier(modifier)(msg, type) : msg;\n    };\n    const ctx = {\n        [\"list\" /* HelperNameMap.LIST */]: list,\n        [\"named\" /* HelperNameMap.NAMED */]: named,\n        [\"plural\" /* HelperNameMap.PLURAL */]: plural,\n        [\"linked\" /* HelperNameMap.LINKED */]: linked,\n        [\"message\" /* HelperNameMap.MESSAGE */]: message,\n        [\"type\" /* HelperNameMap.TYPE */]: type,\n        [\"interpolate\" /* HelperNameMap.INTERPOLATE */]: interpolate,\n        [\"normalize\" /* HelperNameMap.NORMALIZE */]: normalize,\n        [\"values\" /* HelperNameMap.VALUES */]: assign(create(), _list, _named)\n    };\n    return ctx;\n}\n\nconst NOOP_MESSAGE_FUNCTION = () => '';\nconst isMessageFunction = (val) => isFunction(val);\n// implementation of `translate` function\nfunction translate(context, ...args) {\n    const { fallbackFormat, postTranslation, unresolving, messageCompiler, fallbackLocale, messages } = context;\n    const [key, options] = parseTranslateArgs(...args);\n    const missingWarn = isBoolean(options.missingWarn)\n        ? options.missingWarn\n        : context.missingWarn;\n    const fallbackWarn = isBoolean(options.fallbackWarn)\n        ? options.fallbackWarn\n        : context.fallbackWarn;\n    const escapeParameter = isBoolean(options.escapeParameter)\n        ? options.escapeParameter\n        : context.escapeParameter;\n    const resolvedMessage = !!options.resolvedMessage;\n    // prettier-ignore\n    const defaultMsgOrKey = isString(options.default) || isBoolean(options.default) // default by function option\n        ? !isBoolean(options.default)\n            ? options.default\n            : (!messageCompiler ? () => key : key)\n        : fallbackFormat // default by `fallbackFormat` option\n            ? (!messageCompiler ? () => key : key)\n            : null;\n    const enableDefaultMsg = fallbackFormat ||\n        (defaultMsgOrKey != null &&\n            (isString(defaultMsgOrKey) || isFunction(defaultMsgOrKey)));\n    const locale = getLocale(context, options);\n    // escape params\n    escapeParameter && escapeParams(options);\n    // resolve message format\n    // eslint-disable-next-line prefer-const\n    let [formatScope, targetLocale, message] = !resolvedMessage\n        ? resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn)\n        : [\n            key,\n            locale,\n            messages[locale] || create()\n        ];\n    // NOTE:\n    //  Fix to work around `ssrTransfrom` bug in Vite.\n    //  https://github.com/vitejs/vite/issues/4306\n    //  To get around this, use temporary variables.\n    //  https://github.com/nuxt/framework/issues/1461#issuecomment-954606243\n    let format = formatScope;\n    // if you use default message, set it as message format!\n    let cacheBaseKey = key;\n    if (!resolvedMessage &&\n        !(isString(format) ||\n            isMessageAST(format) ||\n            isMessageFunction(format))) {\n        if (enableDefaultMsg) {\n            format = defaultMsgOrKey;\n            cacheBaseKey = format;\n        }\n    }\n    // checking message format and target locale\n    if (!resolvedMessage &&\n        (!(isString(format) ||\n            isMessageAST(format) ||\n            isMessageFunction(format)) ||\n            !isString(targetLocale))) {\n        return unresolving ? NOT_REOSLVED : key;\n    }\n    // TODO: refactor\n    if ((process.env.NODE_ENV !== 'production') && isString(format) && context.messageCompiler == null) {\n        warn(`The message format compilation is not supported in this build. ` +\n            `Because message compiler isn't included. ` +\n            `You need to pre-compilation all message format. ` +\n            `So translate function return '${key}'.`);\n        return key;\n    }\n    // setup compile error detecting\n    let occurred = false;\n    const onError = () => {\n        occurred = true;\n    };\n    // compile message format\n    const msg = !isMessageFunction(format)\n        ? compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, onError)\n        : format;\n    // if occurred compile error, return the message format\n    if (occurred) {\n        return format;\n    }\n    // evaluate message with context\n    const ctxOptions = getMessageContextOptions(context, targetLocale, message, options);\n    const msgContext = createMessageContext(ctxOptions);\n    const messaged = evaluateMessage(context, msg, msgContext);\n    // if use post translation option, proceed it with handler\n    const ret = postTranslation\n        ? postTranslation(messaged, key)\n        : messaged;\n    // NOTE: experimental !!\n    if ((process.env.NODE_ENV !== 'production') || __INTLIFY_PROD_DEVTOOLS__) {\n        // prettier-ignore\n        const payloads = {\n            timestamp: Date.now(),\n            key: isString(key)\n                ? key\n                : isMessageFunction(format)\n                    ? format.key\n                    : '',\n            locale: targetLocale || (isMessageFunction(format)\n                ? format.locale\n                : ''),\n            format: isString(format)\n                ? format\n                : isMessageFunction(format)\n                    ? format.source\n                    : '',\n            message: ret\n        };\n        payloads.meta = assign({}, context.__meta, getAdditionalMeta() || {});\n        translateDevTools(payloads);\n    }\n    return ret;\n}\nfunction escapeParams(options) {\n    if (isArray(options.list)) {\n        options.list = options.list.map(item => isString(item) ? escapeHtml(item) : item);\n    }\n    else if (isObject(options.named)) {\n        Object.keys(options.named).forEach(key => {\n            if (isString(options.named[key])) {\n                options.named[key] = escapeHtml(options.named[key]);\n            }\n        });\n    }\n}\nfunction resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) {\n    const { messages, onWarn, messageResolver: resolveValue, localeFallbacker } = context;\n    const locales = localeFallbacker(context, fallbackLocale, locale); // eslint-disable-line @typescript-eslint/no-explicit-any\n    let message = create();\n    let targetLocale;\n    let format = null;\n    let from = locale;\n    let to = null;\n    const type = 'translate';\n    for (let i = 0; i < locales.length; i++) {\n        targetLocale = to = locales[i];\n        if ((process.env.NODE_ENV !== 'production') &&\n            locale !== targetLocale &&\n            !isAlmostSameLocale(locale, targetLocale) &&\n            isTranslateFallbackWarn(fallbackWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_TRANSLATE, {\n                key,\n                target: targetLocale\n            }));\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\n            const emitter = context.__v_emitter;\n            if (emitter) {\n                emitter.emit('fallback', {\n                    type,\n                    key,\n                    from,\n                    to,\n                    groupId: `${type}:${key}`\n                });\n            }\n        }\n        message =\n            messages[targetLocale] || create();\n        // for vue-devtools timeline event\n        let start = null;\n        let startTag;\n        let endTag;\n        if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n            start = window.performance.now();\n            startTag = 'intlify-message-resolve-start';\n            endTag = 'intlify-message-resolve-end';\n            mark && mark(startTag);\n        }\n        if ((format = resolveValue(message, key)) === null) {\n            // if null, resolve with object key path\n            format = message[key]; // eslint-disable-line @typescript-eslint/no-explicit-any\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n            const end = window.performance.now();\n            const emitter = context.__v_emitter;\n            if (emitter && start && format) {\n                emitter.emit('message-resolve', {\n                    type: 'message-resolve',\n                    key,\n                    message: format,\n                    time: end - start,\n                    groupId: `${type}:${key}`\n                });\n            }\n            if (startTag && endTag && mark && measure) {\n                mark(endTag);\n                measure('intlify message resolve', startTag, endTag);\n            }\n        }\n        if (isString(format) || isMessageAST(format) || isMessageFunction(format)) {\n            break;\n        }\n        if (!isImplicitFallback(targetLocale, locales)) {\n            const missingRet = handleMissing(context, // eslint-disable-line @typescript-eslint/no-explicit-any\n            key, targetLocale, missingWarn, type);\n            if (missingRet !== key) {\n                format = missingRet;\n            }\n        }\n        from = to;\n    }\n    return [format, targetLocale, message];\n}\nfunction compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, onError) {\n    const { messageCompiler, warnHtmlMessage } = context;\n    if (isMessageFunction(format)) {\n        const msg = format;\n        msg.locale = msg.locale || targetLocale;\n        msg.key = msg.key || key;\n        return msg;\n    }\n    if (messageCompiler == null) {\n        const msg = (() => format);\n        msg.locale = targetLocale;\n        msg.key = key;\n        return msg;\n    }\n    // for vue-devtools timeline event\n    let start = null;\n    let startTag;\n    let endTag;\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        start = window.performance.now();\n        startTag = 'intlify-message-compilation-start';\n        endTag = 'intlify-message-compilation-end';\n        mark && mark(startTag);\n    }\n    const msg = messageCompiler(format, getCompileContext(context, targetLocale, cacheBaseKey, format, warnHtmlMessage, onError));\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        const end = window.performance.now();\n        const emitter = context.__v_emitter;\n        if (emitter && start) {\n            emitter.emit('message-compilation', {\n                type: 'message-compilation',\n                message: format,\n                time: end - start,\n                groupId: `${'translate'}:${key}`\n            });\n        }\n        if (startTag && endTag && mark && measure) {\n            mark(endTag);\n            measure('intlify message compilation', startTag, endTag);\n        }\n    }\n    msg.locale = targetLocale;\n    msg.key = key;\n    msg.source = format;\n    return msg;\n}\nfunction evaluateMessage(context, msg, msgCtx) {\n    // for vue-devtools timeline event\n    let start = null;\n    let startTag;\n    let endTag;\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        start = window.performance.now();\n        startTag = 'intlify-message-evaluation-start';\n        endTag = 'intlify-message-evaluation-end';\n        mark && mark(startTag);\n    }\n    const messaged = msg(msgCtx);\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        const end = window.performance.now();\n        const emitter = context.__v_emitter;\n        if (emitter && start) {\n            emitter.emit('message-evaluation', {\n                type: 'message-evaluation',\n                value: messaged,\n                time: end - start,\n                groupId: `${'translate'}:${msg.key}`\n            });\n        }\n        if (startTag && endTag && mark && measure) {\n            mark(endTag);\n            measure('intlify message evaluation', startTag, endTag);\n        }\n    }\n    return messaged;\n}\n/** @internal */\nfunction parseTranslateArgs(...args) {\n    const [arg1, arg2, arg3] = args;\n    const options = create();\n    if (!isString(arg1) &&\n        !isNumber(arg1) &&\n        !isMessageFunction(arg1) &&\n        !isMessageAST(arg1)) {\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n    }\n    // prettier-ignore\n    const key = isNumber(arg1)\n        ? String(arg1)\n        : isMessageFunction(arg1)\n            ? arg1\n            : arg1;\n    if (isNumber(arg2)) {\n        options.plural = arg2;\n    }\n    else if (isString(arg2)) {\n        options.default = arg2;\n    }\n    else if (isPlainObject(arg2) && !isEmptyObject(arg2)) {\n        options.named = arg2;\n    }\n    else if (isArray(arg2)) {\n        options.list = arg2;\n    }\n    if (isNumber(arg3)) {\n        options.plural = arg3;\n    }\n    else if (isString(arg3)) {\n        options.default = arg3;\n    }\n    else if (isPlainObject(arg3)) {\n        assign(options, arg3);\n    }\n    return [key, options];\n}\nfunction getCompileContext(context, locale, key, source, warnHtmlMessage, onError) {\n    return {\n        locale,\n        key,\n        warnHtmlMessage,\n        onError: (err) => {\n            onError && onError(err);\n            if ((process.env.NODE_ENV !== 'production')) {\n                const _source = getSourceForCodeFrame(source);\n                const message = `Message compilation error: ${err.message}`;\n                const codeFrame = err.location &&\n                    _source &&\n                    generateCodeFrame(_source, err.location.start.offset, err.location.end.offset);\n                const emitter = context.__v_emitter;\n                if (emitter && _source) {\n                    emitter.emit('compile-error', {\n                        message: _source,\n                        error: err.message,\n                        start: err.location && err.location.start.offset,\n                        end: err.location && err.location.end.offset,\n                        groupId: `${'translate'}:${key}`\n                    });\n                }\n                console.error(codeFrame ? `${message}\\n${codeFrame}` : message);\n            }\n            else {\n                throw err;\n            }\n        },\n        onCacheKey: (source) => generateFormatCacheKey(locale, key, source)\n    };\n}\nfunction getSourceForCodeFrame(source) {\n    if (isString(source)) {\n        return source;\n    }\n    else {\n        if (source.loc && source.loc.source) {\n            return source.loc.source;\n        }\n    }\n}\nfunction getMessageContextOptions(context, locale, message, options) {\n    const { modifiers, pluralRules, messageResolver: resolveValue, fallbackLocale, fallbackWarn, missingWarn, fallbackContext } = context;\n    const resolveMessage = (key, useLinked) => {\n        let val = resolveValue(message, key);\n        // fallback\n        if (val == null && (fallbackContext || useLinked)) {\n            const [, , message] = resolveMessageFormat(fallbackContext || context, // NOTE: if has fallbackContext, fallback to root, else if use linked, fallback to local context\n            key, locale, fallbackLocale, fallbackWarn, missingWarn);\n            val = resolveValue(message, key);\n        }\n        if (isString(val) || isMessageAST(val)) {\n            let occurred = false;\n            const onError = () => {\n                occurred = true;\n            };\n            const msg = compileMessageFormat(context, key, locale, val, key, onError);\n            return !occurred\n                ? msg\n                : NOOP_MESSAGE_FUNCTION;\n        }\n        else if (isMessageFunction(val)) {\n            return val;\n        }\n        else {\n            // TODO: should be implemented warning message\n            return NOOP_MESSAGE_FUNCTION;\n        }\n    };\n    const ctxOptions = {\n        locale,\n        modifiers,\n        pluralRules,\n        messages: resolveMessage\n    };\n    if (context.processor) {\n        ctxOptions.processor = context.processor;\n    }\n    if (options.list) {\n        ctxOptions.list = options.list;\n    }\n    if (options.named) {\n        ctxOptions.named = options.named;\n    }\n    if (isNumber(options.plural)) {\n        ctxOptions.pluralIndex = options.plural;\n    }\n    return ctxOptions;\n}\n\n{\n    initFeatureFlags();\n}\n\nexport { CORE_ERROR_CODES_EXTEND_POINT, CORE_WARN_CODES_EXTEND_POINT, CoreErrorCodes, CoreWarnCodes, DATETIME_FORMAT_OPTIONS_KEYS, DEFAULT_LOCALE, DEFAULT_MESSAGE_DATA_TYPE, MISSING_RESOLVE_VALUE, NOT_REOSLVED, NUMBER_FORMAT_OPTIONS_KEYS, VERSION, clearCompileCache, clearDateTimeFormat, clearNumberFormat, compile, createCoreContext, createCoreError, createMessageContext, datetime, fallbackWithLocaleChain, fallbackWithSimple, getAdditionalMeta, getDevToolsHook, getFallbackContext, getLocale, getWarnMessage, handleMissing, initI18nDevTools, isAlmostSameLocale, isImplicitFallback, isMessageAST, isMessageFunction, isTranslateFallbackWarn, isTranslateMissingWarn, number, parse, parseDateTimeArgs, parseNumberArgs, parseTranslateArgs, registerLocaleFallbacker, registerMessageCompiler, registerMessageResolver, resolveLocale, resolveValue, resolveWithKeyValue, setAdditionalMeta, setDevToolsHook, setFallbackContext, translate, translateDevTools, updateFallbackLocale };\n"],"names":["createPosition","line","column","offset","createLocation","start","end","source","CompileErrorCodes","COMPILE_ERROR_CODES_EXTEND_POINT","createCompileError","code","loc","options","domain","messages","args","msg","error","defaultOnError","CHAR_SP","CHAR_CR","CHAR_LF","CHAR_LS","CHAR_PS","createScanner","str","_buf","_index","_line","_column","_peekOffset","isCRLF","index","isLF","isPS","isLS","isLineEnd","peekOffset","charAt","currentChar","currentPeek","next","peek","reset","resetPeek","skipToPeek","target","EOF","DOT","LITERAL_DELIMITER","ERROR_DOMAIN$3","createTokenizer","location","_scnr","currentOffset","currentPosition","_initLoc","_initOffset","_context","context","onError","emitError","pos","ctx","err","getToken","type","value","token","getEndToken","eat","scnr","ch","peekSpaces","buf","skipSpaces","isIdentifierStart","cc","isNumberStart","isNamedIdentifierStart","currentType","ret","isListIdentifierStart","isLiteralStart","isLinkedDotStart","isLinkedModifierStart","isLinkedDelimiterStart","isLinkedReferStart","fn","isTextStart","isPluralStart","hasSpace","prev","takeChar","isIdentifier","takeIdentifierChar","isNamedIdentifier","takeNamedIdentifierChar","isDigit","takeDigit","isHexDigit","takeHexDigit","getDigits","num","readText","readNamedIdentifier","name","readListIdentifier","isLiteral","readLiteral","literal","readEscapeSequence","current","readUnicodeEscapeSequence","unicode","digits","sequence","i","isInvalidIdentifier","readInvalidIdentifier","identifiers","readLinkedModifier","readLinkedRefer","readPlural","plural","readTokenInPlaceholder","readTokenInLinked","validNamedIdentifier","validListIdentifier","validLiteral","readToken","nextToken","startLoc","endLoc","ERROR_DOMAIN$2","KNOWN_ESCAPES","fromEscapeSequence","match","codePoint4","codePoint6","codePoint","createParser","tokenzer","startNode","node","endNode","parseText","tokenizer","parseList","parseNamed","key","parseLiteral","parseLinkedModifier","getTokenCaption","parseLinkedKey","parseLinked","linkedNode","parsed","nextContext","emptyLinkedKeyNode","parseMessage","startOffset","endOffset","parsePlural","msgNode","hasEmptyMessage","parseResource","parse","assign","createTransformer","ast","traverseNodes","nodes","transformer","traverseNode","transform","optimize","body","optimizeMessageNode","c","message","item","values","join","minify","resource","cases","items","valueNode","linked","list","named","createCodeGenerator","sourceMap","filename","breakLineCode","_needIndent","push","_newline","n","withBreakLine","_breakLineCode","indent","withNewLine","level","deindent","newline","generateLinkedNode","generator","helper","generateNode","generateMessageNode","needIndent","length","generatePluralNode","generateResource","generate","mode","isString","helpers","s","map","baseCompile","assignedOptions","jit","enalbeMinify","enambeOptimize","initFeatureFlags","getGlobalThis","format","formatParts","resolveBody","createUnhandleNodeError","resolveType","resolveCases","formatMessageParts","PROPS_BODY","resolveProps","PROPS_CASES","static_","resolveStatic","resolveItems","acm","formatMessagePart","PROPS_STATIC","PROPS_ITEMS","resolveValue$1","hasOwn","isNumber","modifier","resolveLinkedModifier","resolveLinkedKey","PROPS_TYPE","PROPS_VALUE","resolved","PROPS_MODIFIER","PROPS_KEY","props","defaultValue","prop","defaultOnCacheKey","compileCache","create","isMessageAST","val","isObject","detectError","baseCompile$1","compile","isBoolean","cacheKey","cached","devtools","setDevToolsHook","hook","initI18nDevTools","i18n","version","meta","translateDevTools","createDevToolsHook","payloads","CoreErrorCodes","CORE_ERROR_CODES_EXTEND_POINT","createCoreError","getLocale","resolveLocale","_resolveLocale","locale","isFunction","resolve","isPromise","fallbackWithSimple","fallback","isArray","fallbackWithLocaleChain","startLocale","DEFAULT_LOCALE","chain","block","appendBlockToChain","defaults","isPlainObject","blocks","follow","appendLocaleToChain","tokens","appendItemToChain","pathStateMachine","literalValueRE","exp","stripQuotes","a","b","getPathCharType","formatSubPath","path","trimmed","keys","subPathDepth","newChar","transition","action","typeMap","actions","maybeUnescapeQuote","nextChar","cache","resolveWithKeyValue","obj","resolveValue","hit","len","last","VERSION","NOT_REOSLVED","MISSING_RESOLVE_VALUE","capitalize","getDefaultLinkedModifiers","_compiler","registerMessageCompiler","compiler","_resolver","registerMessageResolver","resolver","_fallbacker","registerLocaleFallbacker","fallbacker","_additionalMeta","setAdditionalMeta","getAdditionalMeta","_fallbackContext","setFallbackContext","getFallbackContext","_cid","createCoreContext","onWarn","warn","_locale","fallbackLocale","createResources","datetimeFormats","numberFormats","modifiers","pluralRules","missing","missingWarn","isRegExp","fallbackWarn","fallbackFormat","unresolving","postTranslation","processor","warnHtmlMessage","escapeParameter","messageCompiler","messageResolver","localeFallbacker","fallbackContext","internalOptions","__datetimeFormatters","__numberFormatters","__meta","handleMissing","updateFallbackLocale","isAlmostSameLocale","compareLocale","isImplicitFallback","targetLocale","locales","datetime","overrides","parseDateTimeArgs","part","datetimeFormat","id","isEmptyObject","formatter","DATETIME_FORMAT_OPTIONS_KEYS","arg1","arg2","arg3","arg4","matches","dateTime","isDate","clearDateTimeFormat","number","parseNumberArgs","numberFormat","NUMBER_FORMAT_OPTIONS_KEYS","clearNumberFormat","DEFAULT_MODIFIER","DEFAULT_MESSAGE","DEFAULT_MESSAGE_DATA_TYPE","DEFAULT_NORMALIZE","DEFAULT_INTERPOLATE","toDisplayString","pluralDefault","choice","choicesLength","getPluralIndex","normalizeNamed","pluralIndex","createMessageContext","pluralRule","orgPluralRule","_list","_named","useLinked","_modifier","normalize","interpolate","NOOP_MESSAGE_FUNCTION","isMessageFunction","translate","parseTranslateArgs","resolvedMessage","defaultMsgOrKey","enableDefaultMsg","escapeParams","formatScope","resolveMessageFormat","cacheBaseKey","occurred","compileMessageFormat","ctxOptions","getMessageContextOptions","msgContext","messaged","evaluateMessage","escapeHtml","missingRet","getCompileContext","msgCtx","generateFormatCacheKey"],"mappings":"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","x_google_ignoreList":[0,1]}